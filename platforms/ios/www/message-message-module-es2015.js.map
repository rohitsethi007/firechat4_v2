{"version":3,"sources":["./src/app/message/message.module.ts","./src/app/message/message.page.ts","./src/app/message/message.page.html","./src/app/message/message.page.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AACW;AAExD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;IAYW,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAV7B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,mEAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,yDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3B2C;AACpC;AACkB;AACL;AACmD;AACxC;AACJ;AACA;AACH;AACA;AACM;AACG;AACJ;IAO9C,WAAW,SAAX,WAAW;IAgBtB,cAAc;IACd,0DAA0D;IAC1D;IACE,iCAAiC;IACjC,+BAA+B;IACvB,MAAc,EACd,KAAqB,EACtB,YAAyB,EACzB,SAA2B,EAC3B,eAA+B,EAC/B,SAA0B,EAC1B,aAA2B,EAC3B,SAA0B,EAC1B,MAAc,EACd,QAAkB,EAClB,WAAkC,EAClC,QAAkB,EAClB,WAAwB;QAZvB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,iBAAY,GAAZ,YAAY,CAAa;QACzB,cAAS,GAAT,SAAS,CAAkB;QAC3B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,cAAS,GAAT,SAAS,CAAiB;QAC1B,kBAAa,GAAb,aAAa,CAAc;QAC3B,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAuB;QAClC,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QAtBjC,eAAU,GAAQ,CAAC,CAAC,CAAC;QACrB,kCAAkC;QAClC,qBAAgB,GAAG,EAAE,CAAC;IAqBlB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,6CAAa,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEzB,sBAAsB;QACtB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC/E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,oCAAoC;QACpC,4CAA4C;QAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,GAAG,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,YAAiB,EAAE,EAAE;YACzI,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAC/B,oEAAoE;gBACpE,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC;gBACjE,mBAAmB;gBACnB,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE;oBAC9G,IAAI,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC;oBACnD,IAAI,QAAQ,IAAI,IAAI,EAAE;wBACpB,QAAQ,GAAG,EAAE,CAAC;qBACf;oBACD,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACjB,8DAA8D;wBAC9D,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;4BAC1C,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;4BAE5C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gCAClF,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;4BAC3C,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBACnC;qBACF;yBAAM;wBACL,8EAA8E;wBAC9E,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;wBACnB,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;4BAC3B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gCAClF,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;4BAC3C,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,CAAC,CAAC;wBACH,8CAA8C;wBAC9C,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,EAAE;4BAC1B,kDAAkD;4BAClD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE;gCACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC;6BAChE;iCAAM;gCACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;6BACrB;yBACF;wBACD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;4BACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;yBAC1B;wBACD,qBAAqB;wBACrB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5C;wBACD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;qBAC7B;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEH,sEAAsE;QACtE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;gBAChC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;wBAChC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;wBACxB,OAAO,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChC,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,EAAE,KAAK,CAAC,CAAC;SACX;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,0DAA0D;IAC1D,oBAAoB;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,gBAAgB;QAChB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,UAAU,CAAC;YACT,wCAAwC;YACxC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,EAAE;gBAClD,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;YACD,6BAA6B;YAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,uBAAuB;YACvB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,iDAAiD;IACjD,gBAAgB;QACd,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,mEAAmE;IACnE,eAAe;QACb,iDAAiB,EAAE,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;YAClG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YAExB,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,GAAG,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;oBAC9F,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM;iBAChC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;gBACnC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;aACnC;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,SAAS;QACP,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;gBAChC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;aAChC;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAGD,kDAAkD;IAClD,QAAQ,CAAC,OAAO;QACd,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAGD,2EAA2E;IAC3E,IAAI,CAAC,IAAI;QACP,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,oCAAoC;YACpC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzD,QAAQ,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;oBAC3B,MAAM,EAAE,IAAI,CAAC,cAAc;oBAC3B,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,IAAI,CAAC,OAAO;iBACtB,CAAC,CAAC;gBAEH,mCAAmC;gBACnC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC;oBAC5D,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBACH,oBAAoB;gBACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnB,gCAAgC;gBAChC,IAAI,QAAQ,GAAG,EAAE,CAAC;gBAClB,QAAQ,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;oBAC3B,MAAM,EAAE,IAAI,CAAC,cAAc;oBAC3B,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,IAAI,CAAC,OAAO;iBACtB,CAAC,CAAC;gBACH,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAChC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACxB,oBAAoB;gBACpB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC;oBAC7C,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;oBAClC,QAAQ,EAAE,QAAQ;oBAClB,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;oBAClB,IAAI,cAAc,GAAG,OAAO,CAAC,EAAE,CAAC;oBAChC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBAClB,2CAA2C;oBAC3C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,GAAG,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;wBAC3F,cAAc;wBACd,YAAY,EAAE,CAAC;qBAChB,CAAC,CAAC;oBACH,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,GAAG,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC;wBAC3F,cAAc;wBACd,YAAY,EAAE,CAAC;qBAChB,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;SACF;IACH,CAAC;IAED,QAAQ,CAAC,MAAM;QACb,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC;IAClD,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtB,MAAM,EAAE,oBAAoB;YAC5B,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;4BAC5G,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;4BACnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;oBACL,CAAC;iBACF,EAAE;oBACD,IAAI,EAAE,eAAe;oBACrB,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;4BAClH,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;4BACnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;oBACL,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;4BACpE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;4BACnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;oBACL,CAAC;iBACF;gBACG;oBACF,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;4BAClC,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;4BACZ,IAAI,eAAe,GAAG,oBAAoB,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;4BACtG,IAAI,MAAM,GAAG,8CAA8C,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,mBAAmB,CAAC;4BAErI,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCAClC,MAAM,EAAE,eAAe;gCACvB,OAAO,EAAE,eAAe;gCACxB,OAAO,EAAE,CAAC;wCACR,IAAI,EAAE,QAAQ;wCACd,OAAO,EAAE,GAAG,EAAE;4CACZ,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;wCAC1B,CAAC;qCACF,EAAE;wCACD,IAAI,EAAE,OAAO;wCACb,OAAO,EAAE,GAAG,EAAE;4CACZ,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,MAAM,GAAG,MAAM,CAAC;4CACjD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wCACxB,CAAC;qCACF,CAAC;6BACH,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;wBAC5B,CAAC,EAAE,WAAW,CAAC,EAAE;4BACf,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC9D,CAAC,CAAC,CAAC;oBACL,CAAC;iBACF,EAAE;oBACD,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;4BACtC,IAAI,IAAI,CAAC;4BACT,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI;gCAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;;gCAClD,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;4BAC7D,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,IAAI,GAAG,kCAAkC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;4BACrJ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACvB,CAAC,EAAE,GAAG,CAAC,EAAE;4BACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACnB,CAAC,CAAC;oBACJ,CAAC;iBACF,EAAE;oBACD,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,GAAG,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBAC3B,CAAC;iBACF,CAAC;SACH,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,0BAA0B;IAC1B,YAAY,CAAC,GAAG;QACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACpB,SAAS,EAAE,2EAAc;YACzB,cAAc,EAAE;gBACd,GAAG;aACJ;SACF,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAnWQ,uDAAM;YAAE,+DAAc;YALtB,kEAAW;YAUX,yEAAgB;YAPhB,wEAAc;YADS,8DAAe;YAEtC,oEAAY;YAF4B,8DAAe;YADvD,+DAAM;YAMN,oEAAQ;YALR,oEAAqB;YAIrB,oEAAQ;YAER,0EAAW;;;0BAWjB,uDAAS,SAAC,yDAAU,EAAE,IAAI;;AAFhB,WAAW;IALvB,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,+EAAkC;;KAEnC,CAAC;mFAsBkB,uDAAM;QACP,+DAAc;QACR,kEAAW;QACd,yEAAgB;QACV,wEAAc;QACpB,8DAAe;QACX,oEAAY;QAChB,8DAAe;QAClB,+DAAM;QACJ,oEAAQ;QACL,oEAAqB;QACxB,oEAAQ;QACL,0EAAW;GAjCtB,WAAW,CAuVvB;AAvVuB;;;;;;;;;;;;;ACnBxB;AAAe,gQAAiM,OAAO,ueAAue,iBAAiB,oUAAoU,iBAAiB,+IAA+I,iBAAiB,4EAA4E,2BAA2B,0KAA0K,iBAAiB,oUAAoU,iBAAiB,+IAA+I,iBAAiB,4EAA4E,2BAA2B,kUAAkU,6VAA6V,E;;;;;;;;;;;;ACAjuF;AAAe,8EAAe,oBAAoB,iBAAiB,GAAG,6CAA6C,uUAAuU,E","file":"message-message-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagePage } from './message.page';\nimport { SharedModule } from '../services/share.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MessagePage]\n})\nexport class MessagePageModule {}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { DataService } from '../services/data.service';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { ActionSheetController, AlertController, ModalController, IonContent } from '@ionic/angular';\nimport { LoadingService } from '../services/loading.service';\nimport { ImageService } from '../services/image.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Contacts } from '@ionic-native/contacts/ngx';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { ImagemodalPage } from '../imagemodal/imagemodal.page';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n\n  @ViewChild(IonContent, null) contentArea: IonContent;\n\n  userId: any;\n  title: any;\n  message: any;\n  conversationId: any;\n  messages: any;\n  updateDateTime: any;\n  messagesToShow: any;\n  startIndex: any = -1;\n  // Set number of messages to show.\n  numberOfMessages = 10;\n  loggedInUserId: any;\n\n  // MessagePage\n  // This is the page where the user can chat with a friend.\n  constructor(\n    // public navCtrl: NavController,\n    // public navParams: NavParams,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dataProvider: DataService,\n    public firestore: AngularFirestore,\n    public loadingProvider: LoadingService,\n    public alertCtrl: AlertController,\n    public imageProvider: ImageService,\n    public modalCtrl: ModalController,\n    public camera: Camera,\n    public keyboard: Keyboard,\n    public actionSheet: ActionSheetController,\n    public contacts: Contacts,\n    public geolocation: Geolocation\n  ) { }\n\n  ngOnInit() {\n    this.scrollBottom();\n  }\n\n  ionViewDidEnter() {\n    this.userId = this.route.snapshot.params.id;\n    this.loggedInUserId = firebase.auth().currentUser.uid;\n    console.log(this.userId);\n\n    // Get friend details.\n    this.dataProvider.getUser(this.userId).snapshotChanges().subscribe((user: any) => {\n      this.title = user.payload.data().name;\n    });\n\n    // Get conversationInfo with friend.\n    // tslint:disable-next-line: max-line-length\n    this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).snapshotChanges().subscribe((conversation: any) => {\n      if (conversation.payload.data()) {\n        // User already have conversation with this friend, get conversation\n        this.conversationId = conversation.payload.data().conversationId;\n        // Get conversation\n        this.dataProvider.getConversationMessages(this.conversationId).snapshotChanges().subscribe((messagesRes: any) => {\n          let messages = messagesRes.payload.data().messages;\n          if (messages == null) {\n            messages = [];\n          }\n          if (this.messages) {\n            // Just append newly added messages to the bottom of the view.\n            if (messages.length > this.messages.length) {\n              let message = messages[messages.length - 1];\n\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                message.avatar = user.payload.data().img;\n              });\n              this.messages.push(message);\n              this.messagesToShow.push(message);\n            }\n          } else {\n            // Get all messages, this will be used as reference object for messagesToShow.\n            this.messages = [];\n            messages.forEach((message) => {\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                message.avatar = user.payload.data().img;\n              });\n              this.messages.push(message);\n            });\n            // Load messages in relation to numOfMessages.\n            if (this.startIndex === -1) {\n              // Get initial index for numberOfMessages to show.\n              if ((this.messages.length - this.numberOfMessages) > 0) {\n                this.startIndex = this.messages.length - this.numberOfMessages;\n              } else {\n                this.startIndex = 0;\n              }\n            }\n            if (!this.messagesToShow) {\n              this.messagesToShow = [];\n            }\n            // Set messagesToShow\n            for (let i = this.startIndex; i < this.messages.length; i++) {\n              this.messagesToShow.push(this.messages[i]);\n            }\n            this.loadingProvider.hide();\n          }\n        });\n      }\n    });\n\n    // Update messages' date time elapsed every minute based on Moment.js.\n    var that = this;\n    if (!that.updateDateTime) {\n      that.updateDateTime = setInterval(function () {\n        if (that.messages) {\n          that.messages.forEach((message) => {\n            let date = message.date;\n            message.date = new Date(date);\n          });\n        }\n      }, 60000);\n    }\n\n    this.scrollBottom();\n  }\n  // Load previous messages in relation to numberOfMessages.\n  loadPreviousMessages() {\n    var that = this;\n    // Show loading.\n    this.loadingProvider.show();\n    setTimeout(function () {\n      // Set startIndex to load more messages.\n      if ((that.startIndex - that.numberOfMessages) > -1) {\n        that.startIndex -= that.numberOfMessages;\n      } else {\n        that.startIndex = 0;\n      }\n      // Refresh our messages list.\n      that.messages = null;\n      that.messagesToShow = null;\n\n      that.scrollTop();\n\n      // Populate list again.\n      that.ionViewDidEnter();\n    }, 1000);\n  }\n\n  // Update messagesRead when user lefts this page.\n  ionViewWillLeave() {\n    this.setMessagesRead();\n  }\n\n  // Check if currentPage is active, then update user's messagesRead.\n  setMessagesRead() {\n    firebase.database().ref('/conversations/' + this.conversationId + '/messages').once('value', snap => {\n      console.log(snap.val());\n\n      if (snap.val() != null) {\n        this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).update({\n          messagesRead: snap.val().length\n        });\n      }\n    });\n  }\n\n  scrollBottom() {\n    console.log(\"Calling Sb\")\n    setTimeout(() => {\n      if (this.contentArea.scrollToBottom) {\n        this.contentArea.scrollToBottom();\n      }\n    }, 500);\n    this.setMessagesRead();\n  }\n\n  scrollTop() {\n    console.log(\"Calling St\")\n    setTimeout(() => {\n      if (this.contentArea.scrollToTop) {\n        this.contentArea.scrollToTop();\n      }\n    }, 500);\n  }\n\n\n  // Check if the user is the sender of the message.\n  isSender(message) {\n    if (message.sender == this.loggedInUserId) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  // Send message, if there's no conversation yet, create a new conversation.\n  send(type) {\n    if (this.message) {\n      // User entered a text on messagebox\n      if (this.conversationId) {\n        let messages = JSON.parse(JSON.stringify(this.messages));\n        messages.push({\n          date: new Date().toString(),\n          sender: this.loggedInUserId,\n          type: type,\n          message: this.message\n        });\n\n        // Update conversation on database.\n        this.dataProvider.getConversation(this.conversationId).update({\n          messages: messages\n        });\n        // Clear messagebox.\n        this.message = '';\n        this.scrollBottom();\n      } else {\n        console.log(\"else\")\n        // New Conversation with friend.\n        var messages = [];\n        messages.push({\n          date: new Date().toString(),\n          sender: this.loggedInUserId,\n          type: type,\n          message: this.message\n        });\n        var users = [];\n        users.push(this.loggedInUserId);\n        users.push(this.userId);\n        // Add conversation.\n        this.firestore.collection('conversations').add({\n          dateCreated: new Date().toString(),\n          messages: messages,\n          users: users\n        }).then((success) => {\n          let conversationId = success.id;\n          this.message = '';\n          // Add conversation reference to the users.\n          this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).set({\n            conversationId,\n            messagesRead: 1\n          });\n          this.firestore.doc('/accounts/' + this.userId + '/conversations/' + this.loggedInUserId).set({\n            conversationId,\n            messagesRead: 0\n          });\n        });\n        this.scrollBottom();\n      }\n    }\n  }\n\n  viewUser(userId) {\n    this.router.navigateByUrl('userinfo/' + userId);\n  }\n\n\n  attach() {\n    this.actionSheet.create({\n      header: 'Choose attachments',\n      buttons: [{\n        text: 'Camera',\n        handler: () => {\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.CAMERA).then((url) => {\n            this.message = url;\n            this.send(\"image\");\n          });\n        }\n      }, {\n        text: 'Photo Library',\n        handler: () => {\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.PHOTOLIBRARY).then((url) => {\n            this.message = url;\n            this.send(\"image\");\n          });\n        }\n      },\n      {\n        text: 'Video',\n        handler: () => {\n          this.imageProvider.uploadVideoMessage(this.conversationId).then(url => {\n            this.message = url;\n            this.send(\"video\");\n          });\n        }\n      }\n        , {\n        text: 'Location',\n        handler: () => {\n          this.geolocation.getCurrentPosition({\n            timeout: 5000\n          }).then(res => {\n            let locationMessage = \"Location:<br> lat:\" + res.coords.latitude + \"<br> lng:\" + res.coords.longitude;\n            let mapUrl = \"<a href='https://www.google.com/maps/search/\" + res.coords.latitude + \",\" + res.coords.longitude + \"'>View on Map</a>\";\n\n            let confirm = this.alertCtrl.create({\n              header: 'Your Location',\n              message: locationMessage,\n              buttons: [{\n                text: 'cancel',\n                handler: () => {\n                  console.log(\"canceled\");\n                }\n              }, {\n                text: 'Share',\n                handler: () => {\n                  this.message = locationMessage + \"<br>\" + mapUrl;\n                  this.send(\"location\");\n                }\n              }]\n            }).then(r => r.present());\n          }, locationErr => {\n            console.log(\"Location Error\" + JSON.stringify(locationErr));\n          });\n        }\n      }, {\n        text: 'Contact',\n        handler: () => {\n          this.contacts.pickContact().then(data => {\n            let name;\n            if (data.displayName !== null) name = data.displayName;\n            else name = data.name.givenName + \" \" + data.name.familyName;\n            this.message = \"<b>Name:</b> \" + name + \"<br><b>Mobile:</b> <a href='tel:\" + data.phoneNumbers[0].value + \"'>\" + data.phoneNumbers[0].value + \"</a>\";\n            this.send(\"contact\");\n          }, err => {\n            console.log(err);\n          })\n        }\n      }, {\n        text: 'cancel',\n        role: 'cancel',\n        handler: () => {\n          console.log(\"cancelled\");\n        }\n      }]\n    }).then(r => r.present());\n  }\n\n  // Enlarge image messages.\n  enlargeImage(img) {\n    this.modalCtrl.create({\n      component: ImagemodalPage,\n      componentProps: {\n        img\n      }\n    }).then(res => {\n      res.present();\n    });\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title (click)=\\\"viewUser(userId)\\\">{{title}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [scrollEvents]=\\\"true\\\" #content>\\n  <div class=\\\"messages\\\" #contentArea>\\n    <p class=\\\"center\\\" *ngIf=\\\"startIndex > 0\\\"><span tappable (click)=\\\"loadPreviousMessages()\\\">Load previous\\n        messages</span></p>\\n    <div *ngFor=\\\"let message of messagesToShow\\\">\\n      <div *ngIf=\\\"isSender(message)\\\" class=\\\"chatbox right sender\\\">\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\n        </div>\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\n        </div>\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\n          <video controls width=\\\"100%\\\">\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\n          </video>\\n        </div>\\n        <span>{{message.date | DateFormat}}</span>\\n      </div>\\n      <div *ngIf=\\\"!isSender(message)\\\" class=\\\"chatbox left\\\">\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\n        </div>\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\n        </div>\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\n          <video controls width=\\\"100%\\\">\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\n          </video>\\n        </div>\\n        <span>{{message.date | DateFormat}}</span>\\n      </div>\\n    </div>\\n\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-item class=\\\"bottom_bar\\\">\\n      <ion-textarea style=\\\"margin:0\\\" rows=\\\"0\\\" placeholder=\\\"Type your message\\\" [(ngModel)]=\\\"message\\\">\\n      </ion-textarea>\\n      <ion-buttons slot=\\\"end\\\" style=\\\"margin-left:4px;\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"attach()\\\">\\n          <ion-icon name=\\\"attach\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button color=\\\"primary\\\" fill=\\\"clear\\\" (click)=\\\"send('text')\\\" [disabled]=\\\"!message\\\">\\n          send\\n        </ion-button>\\n      </ion-buttons>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-footer>\";","export default \"ion-textarea {\\n  font-size: 12px;\\n  resize: both;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tZXNzYWdlL21lc3NhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXRleHRhcmVhe1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICByZXNpemU6IGJvdGg7XG59Il19 */\";"],"sourceRoot":"webpack:///"}