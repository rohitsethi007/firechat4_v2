{"version":3,"sources":["webpack:///src/app/feed/feed.page.html","webpack:///src/app/feed/feed.page.scss","webpack:///src/app/feed/feed.page.ts","webpack:///src/app/feed/feed.module.ts"],"names":["FeedPage","dataProvider","navCtrl","modalCtrl","firestore","alertCtrl","routerOutlet","loadingProvider","actionSheet","route","router","afAuth","localNotifications","fcm","plt","pushes","userNotifications","userReactions","searchMode","posts","searchPosts","memberofGroups","maxNoOfPosts","ALOGOLIA_APP_ID","ALGOLIA_API_KEY","slideOptsOne","initialSlide","slidesPerView","autoplay","ready","then","console","log","onNotification","subscribe","data","wasTapped","onTokenRefresh","token","subscribeToTopic","getToken","unsubscribeFromTopic","loggedInUserId","currentUser","uid","getCurrentUser","get","user","loggedInUser","getFeedData","firstDataSet","collection","ref","where","groups","orderBy","limit","po","lastDataSet","docs","length","loadEachPostData","post","index","i","key","push","conversation","conversationList","$key","computeUnreadMessagesCount","unreadMessagesCount","messages","conversationsInfo","messagesRead","action","create","header","backdropDismiss","mode","cssClass","buttons","text","icon","handler","newPost","newResource","newPoll","newEvent","role","r","present","createPostOptionButtons","navigateByUrl","groupId","reactionType","showSmiley","addPostReaction","totalReactionCount","removePostReaction","showHug","showCheckin","showBookmark","postIndex","findIndex","el","p","reactions","find","addedByUser","addedByKey","getCurrentUserId","react","dateCreated","Date","addedByUsername","username","addedByImg","img","addPostReactions","some","postId","getUser","update","updatePostReactions","found","undefined","values","Object","keys","map","e","reaction","filter","x","component","componentProps","modal","userId","showToast","indexOf","splice","addReports","message","doc","cancelButton","reportButton","reportPost","notificationButton","deletePostButton","deletePost","unFollowPost","followPost","event","target","disabled","nextDataSet","startAfter","onSnapshot","complete","forEach","id","showMore","startDate","date","endDate","seconds","getTime","showNewIcon","type","today","de","dateEnding","toDate","pollClosed","snapshotChanges","element","payload","foundSmiley","foundHug","foundCheckin","foundBookmark","postTags","isChecked","addOrUpdatePost","string","substring","searchTerm","tag","val","selector","template","routes","path","FeedPageModule","imports","forChild","declarations"],"mappings":"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","file":"feed-feed-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"filters-toolbar\\\">\\r\\n    <ion-row class=\\\"searchbar-row\\\" *ngIf=\\\"!searchMode\\\" align-items-center>\\r\\n    <ion-col>\\r\\n        <ion-searchbar mode=\\\"ios\\\" (ionFocus)=\\\"onFocus($event)\\\" class=\\\"searchbar\\\" placeholder=\\\"Search...\\\"></ion-searchbar>\\r\\n      </ion-col>\\r\\n      <ion-col class=\\\"call-to-action-col\\\">\\r\\n        <ion-button fill=\\\"clear\\\" color=\\\"secondary\\\" class=\\\"filters-btn\\\" routerLink=\\\"/messages\\\">\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications-outline\\\" ></ion-icon>\\r\\n          <ion-badge *ngIf=\\\"getUnreadMessagesCount() != null\\\">{{getUnreadMessagesCount()}}</ion-badge>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col class=\\\"call-to-action-col\\\">\\r\\n        <ion-button fill=\\\"clear\\\" color=\\\"secondary\\\" class=\\\"filters-btn\\\" (click)=\\\"showGroupOptions()\\\">\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"add-circle\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row class=\\\"searchbar-row\\\" *ngIf=\\\"searchMode\\\" align-items-center>\\r\\n      <ion-col>\\r\\n          <ion-searchbar mode=\\\"ios\\\" debounce=\\\"1000\\\" (ionChange)=\\\"seachFeed($event)\\\" [(ngModel)]=\\\"searchTerm\\\" (ionFocus)=\\\"onFocus($event)\\\" class=\\\"searchbar\\\" placeholder=\\\"Search...\\\"></ion-searchbar>\\r\\n        </ion-col>\\r\\n        <ion-col class=\\\"call-to-action-col\\\">\\r\\n          <ion-button fill=\\\"clear\\\" color=\\\"secondary\\\" class=\\\"filters-btn ion-text-capitalize\\\" (click)=\\\"onCancel($event)\\\">\\r\\n            Cancel\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div *ngIf=\\\"!searchMode\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"chevron-down-circle-outline\\\"\\r\\n      pullingText=\\\"Pull to refresh\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"Refreshing...\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n     <!-- Show Posts -->\\r\\n     <div *ngIf=\\\"posts && posts.length > 0\\\" >\\r\\n     <div class=\\\"listing-item\\\" *ngFor=\\\"let item of posts\\\" >\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-row>\\r\\n            <ion-col size=10>\\r\\n           <ion-card-subtitle class=\\\"addedBy\\\">\\r\\n            <img class=\\\"addedByImg\\\" (click)=\\\"viewUser(item.addedByUser.addedByKey)\\\" src=\\\"{{item.addedByUser.addedByImg}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" /> \\r\\n             <p><a class=\\\"addedByTitle\\\" (click)=\\\"viewUser(item.addedByUser.addedByKey)\\\" ><b>{{item.addedByUser.addedByUsername}}</b></a><!-- <img *ngIf=\\\"item.showNewIcon\\\" class=\\\"newIcon\\\" src=\\\"./assets/icon/new.svg\\\" />  -->\\r\\n              <br/>\\r\\n             <span class=\\\"addedByDate\\\">posted {{item.date.toDate() | DateFormat}}</span><br/>\\r\\n            <a (click)=\\\"viewGroup(item.groupId)\\\" class=\\\"addedByTitle\\\">in <b>{{item.groupName}}</b></a></p>\\r\\n          </ion-card-subtitle>\\r\\n        </ion-col>\\r\\n        <ion-col size=2>\\r\\n          <ion-buttons>\\r\\n            <ion-button (click)=\\\"showPostOptions(item)\\\">\\r\\n              <ion-icon slot=\\\"end\\\" name=\\\"chevron-down-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-buttons>\\r\\n        </ion-col>\\r\\n        </ion-row>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'general'\\\">\\r\\n          <div>\\r\\n            <div>\\r\\n              <ion-slides class=\\\"slider\\\" pager=\\\"true\\\" [options]=\\\"slideOptsOne\\\" #slideWithNav>\\r\\n              <ion-slide *ngFor=\\\"let s of item.postMedia\\\">\\r\\n                <div class=\\\"bgSizeContain\\\" \\r\\n                [ngStyle]=\\\"{'background-image':'url('+s+')'}\\\">\\r\\n              </div>\\r\\n              </ion-slide>\\r\\n            </ion-slides>\\r\\n            </div>\\r\\n          <ion-label  *ngIf=\\\"!item.showMore\\\">\\r\\n            <span (click)=\\\"viewPost(item)\\\"><b>{{item.title}}.</b> {{trimString(item.data.message, 100)}}</span> \\r\\n            <a class=\\\"show-more\\\" (click)=\\\"item.showMore = !item.showMore\\\">...Show more</a><br/></ion-label>\\r\\n          <ion-label (click)=\\\"viewPost(item)\\\"  *ngIf=\\\"item.showMore\\\"><b>{{item.title}}.</b> {{item.data.message}} <br/></ion-label>\\r\\n        </div>\\r\\n          <div class=\\\"tags-wrapper\\\">\\r\\n          <ion-row>\\r\\n            <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n              <span (click)=\\\"searchTag(tag, item)\\\" class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n            </div>\\r\\n          </ion-row>\\r\\n          </div>\\r\\n          <div class=\\\"reactions\\\">\\r\\n          <ion-row >\\r\\n            <ion-col size=3>\\r\\n              <ion-buttons>\\r\\n                <ion-button (click)=\\\"submitReactionPost(item, 'Thanks')\\\">\\r\\n               <div *ngIf=\\\"item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/smile-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\r\\n               <div *ngIf=\\\"!item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/smile.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\r\\n              </ion-button>\\r\\n              </ion-buttons> \\r\\n            </ion-col>\\r\\n            <ion-col size=3>\\r\\n              <ion-buttons>\\r\\n                <ion-button (click)=\\\"submitReactionPost(item, 'Hug')\\\">\\r\\n               <div *ngIf=\\\"item.showHug\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/hug-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Hug</span></div> \\r\\n               <div *ngIf=\\\"!item.showHug\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/hug.svg\\\" ></ion-icon> <span class=\\\"text\\\">Hug</span></div> \\r\\n              </ion-button>\\r\\n              </ion-buttons> \\r\\n            </ion-col>\\r\\n            <ion-col size=2></ion-col>\\r\\n            <ion-col size=2>\\r\\n              <ion-buttons>\\r\\n                <ion-button (click)=\\\"showReactionsList(item)\\\">\\r\\n              <div><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/smile-active.svg\\\" class=\\\"icon\\\"></ion-icon><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/hug-active.svg\\\" class=\\\"icon\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReactionCount}}</span></div>\\r\\n            </ion-button>\\r\\n          </ion-buttons> \\r\\n            </ion-col>\\r\\n            <ion-col size=2>\\r\\n              <ion-buttons>\\r\\n                <ion-button>\\r\\n              <div><ion-icon size=\\\"small\\\" class=\\\"icon\\\" name=\\\"chatbox-outline\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReviewCount}}</span></div>\\r\\n            </ion-button>\\r\\n          </ion-buttons> \\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          </div>\\r\\n        </ion-card-content>\\r\\n\\r\\n        <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'event'\\\">\\r\\n          <div (click)=\\\"viewPost(item)\\\" *ngIf=\\\"!item.showMore\\\">\\r\\n          <b>{{item.title}}.</b> <br/>{{item.data.eventDate}} at {{item.data.eventTime}}<br/><br/>\\r\\n          <a class=\\\"show-more\\\" (click)=\\\"item.showMore = !item.showMore\\\">...Show more</a>\\r\\n          </div>\\r\\n          <div (click)=\\\"viewPost(item)\\\" *ngIf=\\\"item.showMore\\\">\\r\\n            <b>{{item.title}}.</b> <br/>{{item.data.eventDate}} at {{item.data.eventTime}}<br/><br/>\\r\\n              {{item.data.address}}<br/><br/>\\r\\n              {{item.data.link}}<br/>\\r\\n              {{item.data.message}}\\r\\n            </div>\\r\\n          <div class=\\\"tags-wrapper\\\">\\r\\n            <ion-row>\\r\\n              <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n                <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n              </div>\\r\\n            </ion-row>\\r\\n            </div>\\r\\n          <div class=\\\"reactions\\\">\\r\\n            <ion-row>\\r\\n              <ion-col size=3>\\r\\n                <ion-buttons>\\r\\n                  <ion-button (click)=\\\"submitReactionPost(item, 'Thanks')\\\">\\r\\n                  <div *ngIf=\\\"item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/smile-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\r\\n                  <div *ngIf=\\\"!item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/smile.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\r\\n                </ion-button>\\r\\n                </ion-buttons> \\r\\n              </ion-col>\\r\\n              <ion-col size=3>\\r\\n                <ion-buttons>\\r\\n                  <ion-button (click)=\\\"submitReactionPost(item, 'Checkin')\\\">\\r\\n                  <div *ngIf=\\\"item.showCheckin\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/checkin-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Checkin</span></div> \\r\\n                  <div *ngIf=\\\"!item.showCheckin\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/checkin.svg\\\" ></ion-icon> <span class=\\\"text\\\">Checkin</span></div> \\r\\n                </ion-button>\\r\\n                </ion-buttons> \\r\\n              </ion-col>\\r\\n              <ion-col size=2></ion-col>\\r\\n              <ion-col size=2>\\r\\n                      <ion-buttons>\\r\\n                        <ion-button (click)=\\\"showReactionsList(item)\\\">\\r\\n                      <div><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/smile-active.svg\\\" class=\\\"icon\\\"></ion-icon><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/checkin-active.svg\\\" class=\\\"icon\\\"></ion-icon><span class=\\\"text\\\">{{item.totalReactionCount}}</span></div>\\r\\n                    </ion-button>\\r\\n                  </ion-buttons> \\r\\n              </ion-col>\\r\\n              <ion-col size=2>\\r\\n                      <ion-buttons>\\r\\n                        <ion-button>\\r\\n                          <div><ion-icon size=\\\"small\\\" class=\\\"icon\\\" name=\\\"chatbox-outline\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReviewCount}}</span></div>\\r\\n                        </ion-button>\\r\\n                  </ion-buttons> \\r\\n              </ion-col>\\r\\n             </ion-row>\\r\\n         </div>\\r\\n        </ion-card-content>\\r\\n\\r\\n        <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'poll'\\\" >\\r\\n          <div (click)=\\\"viewPost(item)\\\">\\r\\n          <b>{{item.title}}.</b><br/>\\r\\n          <ion-row *ngFor=\\\"let pollOption of item.data.pollOptions\\\">\\r\\n            <ion-col >\\r\\n               <div><ion-icon class=\\\"poll-icon\\\" name=\\\"checkbox-outline\\\"></ion-icon> <span>{{pollOption.name}}</span></div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </div>\\r\\n        <div class=\\\"tags-wrapper\\\">\\r\\n          <ion-row>\\r\\n            <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n              <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n            </div>\\r\\n          </ion-row>\\r\\n          </div>\\r\\n\\r\\n                <ion-row class=\\\"info-row\\\" >\\r\\n           <ion-col size=\\\"8\\\">\\r\\n                     <span class=\\\"text\\\" *ngIf=\\\"!item.pollClosed\\\">Poll ends {{item.data.dateEnding.toDate() | DateFormat}}</span> \\r\\n                     <span class=\\\"text\\\" *ngIf=\\\"item.pollClosed\\\">Poll closed</span> \\r\\n                  </ion-col>\\r\\n            <ion-col size=\\\"1\\\">\\r\\n            </ion-col>\\r\\n                  <ion-col size=\\\"3\\\">\\r\\n                    <div><span class=\\\"text\\\">{{item.totalPollCount}} voted</span></div>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n        </ion-card-content>\\r\\n        \\r\\n        <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'resource'\\\">\\r\\n          <div (click)=\\\"viewPost(item)\\\">\\r\\n          <b>{{item.title}}.</b><br/>\\r\\n          <div *ngIf=\\\"item?.data.type == 'contact'\\\">\\r\\n            {{item.data.name}}<br/>\\r\\n            {{item.data.address}}<br/><br/>\\r\\n            {{item.data.email}}<br/>\\r\\n            {{item.data.phones}}<br/>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"item?.data.type == 'upload'\\\">\\r\\n            <div *ngIf=\\\"item.data.uploadtype == 'location'\\\" [innerHtml]=\\\"item.data.url\\\"></div>\\r\\n            <div *ngIf=\\\"item.data.uploadtype == 'contact'\\\">\\r\\n            {{item.data.name}}<br/>\\r\\n            {{item.data.address}}<br/>\\r\\n            {{item.data.phones}}<br/>\\r\\n            {{item.data.email}}<br/>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"item.data.uploadtype == 'image'\\\">\\r\\n            <img src=\\\"{{item.data.resolvedurl}}\\\" />\\r\\n            </div>\\r\\n            <div *ngIf=\\\"item.data.uploadtype == 'video'\\\">\\r\\n              <video controls width=\\\"100%\\\" src=\\\"{{item.data.resolvedurl}}\\\" ></video>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"item?.data.type == 'weblink'\\\">\\r\\n          {{item.data.metatitle}}<br/>\\r\\n          <img [src]=\\\"item.data.metaicon\\\"/> \\r\\n          {{item.data.metadescription}}<br/><br/>\\r\\n          <a href=\\\"{{item.data.metasite}}\\\">{{item.data.metasite}}</a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"tags-wrapper\\\">\\r\\n          <ion-row>\\r\\n            <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n              <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n            </div>\\r\\n          </ion-row>\\r\\n          </div>\\r\\n          <div class=\\\"reactions\\\">\\r\\n             <ion-row>\\r\\n              <ion-col size=3>\\r\\n                <ion-buttons>\\r\\n                <ion-button (click)=\\\"submitReactionPost(item, 'Thanks')\\\">\\r\\n               <div *ngIf=\\\"item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/smile-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\r\\n               <div *ngIf=\\\"!item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/smile.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\r\\n                </ion-button>\\r\\n                </ion-buttons> \\r\\n              </ion-col>\\r\\n              <ion-col size=3>\\r\\n                   <ion-buttons>\\r\\n                   <ion-button (click)=\\\"submitReactionPost(item, 'Bookmark')\\\">\\r\\n                  <div *ngIf=\\\"item.showBookmark\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/bookmark-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Bookmark</span></div> \\r\\n                  <div *ngIf=\\\"!item.showBookmark\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/bookmark.svg\\\" ></ion-icon> <span class=\\\"text\\\">Bookmark</span></div> \\r\\n                   </ion-button>\\r\\n                   </ion-buttons> \\r\\n              </ion-col>\\r\\n            <ion-col size=2></ion-col>\\r\\n            <ion-col size=2>\\r\\n                   <ion-buttons>\\r\\n                   <ion-button (click)=\\\"showReactionsList(item)\\\">\\r\\n                   <div><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/bookmark-active.svg\\\" class=\\\"icon\\\"></ion-icon><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/smile-active.svg\\\" class=\\\"icon\\\"></ion-icon><span class=\\\"text\\\">{{item.totalReactionCount}}</span></div>\\r\\n                 </ion-button>\\r\\n                 </ion-buttons> \\r\\n                 </ion-col>\\r\\n                 <ion-col size=2>\\r\\n                   <ion-buttons>\\r\\n                   <ion-button>\\r\\n                    <div><ion-icon size=\\\"small\\\" class=\\\"icon\\\" name=\\\"chatbox-outline\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReviewCount}}</span></div>\\r\\n                  </ion-button>\\r\\n                 </ion-buttons> \\r\\n                 </ion-col>\\r\\n            </ion-row>\\r\\n          \\r\\n          </div>\\r\\n        </ion-card-content>\\r\\n        <!-- Dont touch the tags below this line-->\\r\\n      </ion-card>\\r\\n     </div>\\r\\n     </div>\\r\\n     <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\r\\n      <ion-infinite-scroll-content\\r\\n        loadingSpinner=\\\"bubbles\\\"\\r\\n        loadingText=\\\"Loading more data...\\\">\\r\\n      </ion-infinite-scroll-content>\\r\\n    </ion-infinite-scroll>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"searchMode\\\">\\r\\n    <div *ngIf=\\\"searchPosts && searchPosts.length > 0\\\" >\\r\\n      <div class=\\\"listing-item\\\" *ngFor=\\\"let item of searchPosts\\\" >\\r\\n       <ion-card>\\r\\n         <ion-card-header>\\r\\n           <ion-row>\\r\\n             <ion-col size=10>\\r\\n            <ion-card-subtitle class=\\\"searchaddedBy\\\">\\r\\n             <img class=\\\"searchaddedByImg\\\" src=\\\"{{item.addedByUser.addedByImg}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" /> \\r\\n              <p><a class=\\\"searchaddedByTitle\\\" (click)=\\\"viewUser(item.addedByUser.addedByKey)\\\" ><b>{{item.addedByUser.addedByUsername}}</b></a>\\r\\n              <span class=\\\"searchaddedByDate\\\">posted {{item.date | DateFormat}}</span><br/>\\r\\n             <a (click)=\\\"viewGroup(item.groupId)\\\" class=\\\"searchaddedByTitle\\\">in <b>{{item.groupName}}</b></a></p>\\r\\n           </ion-card-subtitle>\\r\\n         </ion-col>\\r\\n         <ion-col size=2>\\r\\n           <ion-badge class=\\\"badge\\\" *ngIf=\\\"item.type === 'general'\\\" color=\\\"secondary\\\">Post</ion-badge>\\r\\n          <ion-badge class=\\\"badge\\\" *ngIf=\\\"item.type === 'event'\\\" color=\\\"warning\\\">Event</ion-badge>\\r\\n          <ion-badge class=\\\"badge\\\" *ngIf=\\\"item.type === 'poll'\\\" color=\\\"medium\\\">Poll</ion-badge>\\r\\n          <ion-badge class=\\\"badge\\\" *ngIf=\\\"item.type === 'resource'\\\" color=\\\"dark\\\">Resource</ion-badge> \\r\\n       </ion-col>\\r\\n         </ion-row>\\r\\n         </ion-card-header>\\r\\n         <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'general'\\\">\\r\\n           <div>\\r\\n           <ion-label>\\r\\n             <span (click)=\\\"viewPost(item)\\\"><b>{{item.title}}.</b> {{trimString(item.data.message, 100)}}</span> \\r\\n          </ion-label>\\r\\n         </div>\\r\\n           <div class=\\\"tags-wrapper\\\">\\r\\n           <ion-row>\\r\\n             <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n               <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n             </div>\\r\\n           </ion-row>\\r\\n           </div>\\r\\n         </ion-card-content>\\r\\n \\r\\n         <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'event'\\\">\\r\\n           <div (click)=\\\"viewPost(item)\\\" *ngIf=\\\"!item.showMore\\\">\\r\\n           <b>{{item.title}}.</b> {{item.data.eventDate}} at {{item.data.eventTime}}\\r\\n           </div>\\r\\n           <div class=\\\"tags-wrapper\\\">\\r\\n             <ion-row>\\r\\n               <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n                 <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n               </div>\\r\\n             </ion-row>\\r\\n             </div>\\r\\n         </ion-card-content>\\r\\n \\r\\n         <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'poll'\\\" >\\r\\n           <div (click)=\\\"viewPost(item)\\\">\\r\\n           <b>{{item.title}}.</b><br/>\\r\\n         </div>\\r\\n         <div class=\\\"tags-wrapper\\\">\\r\\n           <ion-row>\\r\\n             <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n               <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n             </div>\\r\\n           </ion-row>\\r\\n           </div>\\r\\n         </ion-card-content>\\r\\n         \\r\\n         <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'resource'\\\">\\r\\n           <div (click)=\\\"viewPost(item)\\\">\\r\\n           <b>{{item.title}}.</b><br/>\\r\\n           <div *ngIf=\\\"item?.data.type == 'weblink'\\\">\\r\\n           {{item.data.metatitle}}<br/>\\r\\n           </div>\\r\\n         </div>\\r\\n         <div class=\\\"tags-wrapper\\\">\\r\\n           <ion-row>\\r\\n             <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\r\\n               <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\r\\n             </div>\\r\\n           </ion-row>\\r\\n           </div>\\r\\n         </ion-card-content>\\r\\n         <!-- Dont touch the tags below this line-->\\r\\n       </ion-card>\\r\\n      </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \":host {\\n  --page-margin: var(--app-narrow-margin);\\n  --page-background: var(--app-background);\\n}\\n\\nion-searchbar {\\n  --border-radius: 30px;\\n}\\n\\n.filters-toolbar {\\n  --padding-start: var(--page-margin);\\n  --padding-end: var(--page-margin);\\n}\\n\\n.filters-toolbar .searchbar-row {\\n  --ion-grid-column-padding: 0px;\\n}\\n\\n.filters-toolbar .searchbar-row .searchbar {\\n  padding: 0px;\\n  height: 30px;\\n  border-radius: 90px;\\n}\\n\\n.filters-toolbar .searchbar-row .call-to-action-col {\\n  max-width: -webkit-fit-content;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  flex-shrink: 0;\\n  flex-grow: 0;\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\n.filters-toolbar .searchbar-row .call-to-action-col .filters-btn {\\n  --padding-start: 6px;\\n  --padding-end: 6px;\\n  margin: 0px;\\n  font-size: 15px;\\n  height: initial;\\n}\\n\\n.listing-item {\\n  background-color: var(--page-background);\\n}\\n\\n.icon {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\n.poll-icon {\\n  display: inline-block;\\n  vertical-align: middle;\\n  padding-right: 5px;\\n}\\n\\n.text {\\n  display: inline-block;\\n  vertical-align: middle;\\n  padding-left: 3px;\\n  text-transform: capitalize !important;\\n  font-size: 12px;\\n}\\n\\n.addedByTitle {\\n  margin-left: 10px;\\n  line-height: 5px;\\n  text-decoration: none;\\n}\\n\\n.addedByDate {\\n  margin-left: 10px;\\n  font-style: italic;\\n  font-size: 12px;\\n}\\n\\n.addedByImg {\\n  width: 45px;\\n  height: 45px;\\n  float: left;\\n  vertical-align: middle;\\n  border-radius: 50%;\\n}\\n\\n.badge {\\n  margin-top: 20px;\\n  padding: 5px;\\n}\\n\\n.searchaddedByTitle {\\n  margin-left: 10px;\\n  line-height: 5px;\\n  text-decoration: none;\\n  font-size: 12px;\\n}\\n\\n.searchaddedByDate {\\n  margin-left: 10px;\\n  font-style: italic;\\n  font-size: 12px;\\n}\\n\\n.searchaddedByImg {\\n  width: 35px;\\n  height: 35px;\\n  float: left;\\n  vertical-align: middle;\\n  border-radius: 50%;\\n}\\n\\n.newIcon {\\n  margin-left: 10px;\\n  height: 40px;\\n  vertical-align: middle;\\n}\\n\\n.message {\\n  font-family: \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, \\\"Roboto\\\", \\\"Segoe UI\\\", Arial, sans-serif;\\n  font-weight: 400;\\n  font-size: 14px;\\n  line-height: 19px;\\n  -webkit-font-smoothing: subpixel-antialiased;\\n  -moz-osx-font-smoothing: auto;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.message .show-more {\\n  font-family: \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, \\\"Roboto\\\", \\\"Segoe UI\\\", Arial, sans-serif;\\n  font-weight: 300;\\n  font-size: 14px;\\n  line-height: 19px;\\n  -webkit-font-smoothing: subpixel-antialiased;\\n  -moz-osx-font-smoothing: auto;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.message .slider {\\n  margin-bottom: 5px;\\n}\\n\\n.message .slider .bgSizeContain {\\n  background-repeat: no-repeat;\\n  background-position: center center;\\n  background-size: 100%;\\n  width: 100%;\\n  height: 200px;\\n  text-shadow: white 0px 0px 2px;\\n  font-size: 16px;\\n  border-radius: 10px;\\n}\\n\\n.message .reactions {\\n  margin-bottom: 0px;\\n  margin-left: -10px;\\n}\\n\\n.message .tags-wrapper {\\n  padding-top: 5px;\\n}\\n\\n.message .tags-wrapper .tags {\\n  padding-right: 5px;\\n}\\n\\n.message .tags-wrapper .tags .item-rating {\\n  background-color: rgba(var(--page-color-rgb), 0.35);\\n  padding-right: 15px;\\n  font-size: 12px;\\n  font-weight: bold;\\n  width: 100%;\\n  display: block;\\n  text-align: center;\\n  color: #aa6c39;\\n}\\n\\nion-slides {\\n  height: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmVlZC9mZWVkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNLLHVDQUFBO0VBQ0Esd0NBQUE7QUFDTDs7QUFFRTtFQUNFLHFCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQ0FBQTtFQUNBLGlDQUFBO0FBQ0o7O0FBRUk7RUFDRSw4QkFBQTtBQUFOOztBQUVNO0VBQ0UsWUFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtBQUFSOztBQU9NO0VBQ0UsOEJBQUE7RUFBQSwyQkFBQTtFQUFBLHNCQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFFQSxhQUFBO0VBQ0EseUJBQUE7QUFOUjs7QUFRUTtFQUNFLG9CQUFBO0VBQ0Esa0JBQUE7RUFFQSxXQUFBO0VBQ0EsZUFBQTtFQUVBLGVBQUE7QUFSVjs7QUFlQTtFQUNFLHdDQUFBO0FBWkY7O0FBZUE7RUFDRSxxQkFBQTtFQUNBLHNCQUFBO0FBWkY7O0FBZUM7RUFDQyxxQkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFaRjs7QUFlQztFQUNFLHFCQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtFQUNBLHFDQUFBO0VBQ0EsZUFBQTtBQVpIOztBQWNDO0VBQ0UsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FBWEg7O0FBY0M7RUFDQyxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQVhGOztBQWNBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQVhKOztBQWVFO0VBQ0UsZ0JBQUE7RUFDQSxZQUFBO0FBWko7O0FBZUU7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBWko7O0FBZUU7RUFDQyxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQVpIOztBQWVDO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQVpMOztBQWVFO0VBQ0UsaUJBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7QUFaSjs7QUFjRTtFQUNFLGtHQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSw0Q0FBQTtFQUNBLDZCQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQVhKOztBQWNJO0VBQ0Usa0dBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLDRDQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FBWk47O0FBY0k7RUFDRSxrQkFBQTtBQVpOOztBQWFNO0VBQ0UsNEJBQUE7RUFDQSxrQ0FBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtFQUNBLGVBQUE7RUFHQSxtQkFBQTtBQVhSOztBQWVJO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtBQWJOOztBQWVJO0VBQ0UsZ0JBQUE7QUFiTjs7QUFlTTtFQUNFLGtCQUFBO0FBYlI7O0FBZU07RUFDRSxtREFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUFiUjs7QUFtQkU7RUFDRSxZQUFBO0FBaEJKIiwiZmlsZSI6InNyYy9hcHAvZmVlZC9mZWVkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgICAtLXBhZ2UtbWFyZ2luOiB2YXIoLS1hcHAtbmFycm93LW1hcmdpbik7XHJcbiAgICAgLS1wYWdlLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kKTtcclxuICB9XHJcbiAgXHJcbiAgaW9uLXNlYXJjaGJhciB7XHJcbiAgICAtLWJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbiAgfVxyXG5cclxuLmZpbHRlcnMtdG9vbGJhciB7XHJcbiAgICAtLXBhZGRpbmctc3RhcnQ6IHZhcigtLXBhZ2UtbWFyZ2luKTtcclxuICAgIC0tcGFkZGluZy1lbmQ6IHZhcigtLXBhZ2UtbWFyZ2luKTtcclxuICAgIC8vIC0tcGFkZGluZy10b3A6IHZhcigtLXBhZ2UtbWFyZ2luKTtcclxuXHJcbiAgICAuc2VhcmNoYmFyLXJvdyB7XHJcbiAgICAgIC0taW9uLWdyaWQtY29sdW1uLXBhZGRpbmc6IDBweDtcclxuICBcclxuICAgICAgLnNlYXJjaGJhciB7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIGhlaWdodDozMHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDkwcHg7XHJcbiAgICAgICAgLy8gb3ZlcnJpZGUgSW9uaWMgZml4ZWQgaGVpZ2h0XHJcbiAgICAgICAgLy8gaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIC8vIExlYXJuIG1vcmUgYWJvdXQgQ1NTIGNvbnRhaW4gcHJvcGVydHkgaGVyZTogaHR0cHM6Ly90ZXJtdmFkZXIuZ2l0aHViLmlvL2Nzcy1jb250YWluL1xyXG4gICAgICAgIC8vICBjb250YWluOiBjb250ZW50O1xyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIC5jYWxsLXRvLWFjdGlvbi1jb2wge1xyXG4gICAgICAgIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICAgICAgZmxleC1zaHJpbms6IDA7XHJcbiAgICAgICAgZmxleC1ncm93OiAwO1xyXG4gIFxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBcclxuICAgICAgICAuZmlsdGVycy1idG4ge1xyXG4gICAgICAgICAgLS1wYWRkaW5nLXN0YXJ0OiA2cHg7XHJcbiAgICAgICAgICAtLXBhZGRpbmctZW5kOiA2cHg7XHJcbiAgXHJcbiAgICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICAgIC8vIG92ZXJyaWRlIElvbmljIGZpeGVkIGhlaWdodFxyXG4gICAgICAgICAgaGVpZ2h0OiBpbml0aWFsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICB9XHJcbiAgICBcclxuLmxpc3RpbmctaXRlbSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcGFnZS1iYWNrZ3JvdW5kKTtcclxuIH1cclxuXHJcbi5pY29uIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuIH1cclxuIFxyXG4gLnBvbGwtaWNvbiB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgcGFkZGluZy1yaWdodDogNXB4O1xyXG4gfVxyXG5cclxuIC50ZXh0e1xyXG4gICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgIHBhZGRpbmctbGVmdDogM3B4O1xyXG4gICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZSAhaW1wb3J0YW50O1xyXG4gICBmb250LXNpemU6IDEycHg7XHJcbiB9XHJcbiAuYWRkZWRCeVRpdGxlIHtcclxuICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgIGxpbmUtaGVpZ2h0OiA1cHg7XHJcbiAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAvLyAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuIH1cclxuIC5hZGRlZEJ5RGF0ZSB7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICB9XHJcbiAgXHJcbi5hZGRlZEJ5SW1nIHtcclxuICAgIHdpZHRoOiA0NXB4O1xyXG4gICAgaGVpZ2h0OiA0NXB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIH1cclxuXHJcblxyXG4gIC5iYWRnZSB7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gIH1cclxuXHJcbiAgLnNlYXJjaGFkZGVkQnlUaXRsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgIGxpbmUtaGVpZ2h0OiA1cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgIC8vICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gIH1cclxuICAuc2VhcmNoYWRkZWRCeURhdGUge1xyXG4gICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICBmb250LXNpemU6IDEycHg7XHJcbiAgIH1cclxuICAgXHJcbiAuc2VhcmNoYWRkZWRCeUltZyB7XHJcbiAgICAgd2lkdGg6IDM1cHg7XHJcbiAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICB9XHJcblxyXG4gIC5uZXdJY29uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcbiAgLm1lc3NhZ2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdIZWx2ZXRpY2FOZXVlJywgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCAnUm9ib3RvJywgJ1NlZ29lIFVJJywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDE5cHg7XHJcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBzdWJwaXhlbC1hbnRpYWxpYXNlZDtcclxuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgXHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIFxyXG5cclxuICAgIC5zaG93LW1vcmUge1xyXG4gICAgICBmb250LWZhbWlseTogJ0hlbHZldGljYU5ldWUnLCAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsICdSb2JvdG8nLCAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMTlweDtcclxuICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogc3VicGl4ZWwtYW50aWFsaWFzZWQ7XHJcbiAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuOyBcclxuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB9XHJcbiAgICAuc2xpZGVyIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAuYmdTaXplQ29udGFpbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgICAgIHRleHQtc2hhZG93OiB3aGl0ZSAwcHggMHB4IDJweDtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIC1tb3otYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5yZWFjdGlvbnMge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcclxuICAgIH0gXHJcbiAgICAudGFncy13cmFwcGVyIHtcclxuICAgICAgcGFkZGluZy10b3A6IDVweDtcclxuICAgICBcclxuICAgICAgLnRhZ3Mge1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcclxuXHJcbiAgICAgIC5pdGVtLXJhdGluZyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSh2YXIoLS1wYWdlLWNvbG9yLXJnYiksIC4zNSk7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGNvbG9yOiAjYWE2YzM5O1xyXG4gICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlvbi1zbGlkZXMge1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gIH1cclxuIl19 */\";","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { NavController, ActionSheetController, AlertController, ModalController, IonRouterOutlet, IonInfiniteScroll } from '@ionic/angular';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\r\n\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { NgAnalyzeModulesHost } from '@angular/compiler';\r\nimport { ReactionListModalPage } from '../reaction-list-modal/reaction-list-modal.page';\r\nimport * as firebase from 'firebase';\r\nimport { FCM } from '@ionic-native/fcm/ngx';\r\nimport { Platform } from '@ionic/angular';\r\nimport algoliasearch from 'algoliasearch';\r\nimport { constants } from 'perf_hooks';\r\n\r\n@Component({\r\n  selector: 'app-feed',\r\n  templateUrl: './feed.page.html',\r\n  styleUrls: ['./feed.page.scss'],\r\n})\r\nexport class FeedPage implements OnInit {\r\n  @ViewChild(IonInfiniteScroll, {static: true}) infiniteScroll: IonInfiniteScroll;\r\n  [x: string]: any;\r\n  pushes: any = [];\r\n  unreadMessagesCount: any;\r\n  friendRequestCount: any;\r\n  unreadGroupMessagesCount: any;\r\n  groupList: any;\r\n  groupsInfo: any;\r\n  conversationList: any;\r\n  conversationsInfo: any;\r\n  userNotifications: any = [];\r\n  userReactions: any = [];\r\n  searchMode = false;\r\n  searchTerm: any;\r\n\r\n  private title: any;\r\n  private groupId: any;\r\n  private posts: any = [];\r\n  private searchPosts: any = [];\r\n  private memberofGroups: any = [];\r\n  private loggedInUser: any;\r\n  private loggedInUserId: any;\r\n  private firstDataSet: any;\r\n  private lastDataSet: any;\r\n  private maxNoOfPosts: any = 1000;\r\n\r\n  // algoliasearch\r\n  client: any;\r\n  index: any;\r\n  ALOGOLIA_APP_ID = 'DNTXC08EBF';\r\n  ALGOLIA_API_KEY = '4768de6e8b67959c064c0bf89443d449';\r\n\r\n  slideOptsOne = {\r\n    initialSlide: 0,\r\n    slidesPerView: 1,\r\n    autoplay: false\r\n   };\r\n  constructor(\r\n    public dataProvider: DataService,\r\n    public navCtrl: NavController,\r\n    public modalCtrl: ModalController,\r\n    public firestore: AngularFirestore,\r\n    public alertCtrl: AlertController,\r\n    private routerOutlet: IonRouterOutlet,\r\n    public loadingProvider: LoadingService,\r\n    public actionSheet: ActionSheetController,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private afAuth: AngularFireAuth,\r\n    private localNotifications: LocalNotifications,\r\n    private fcm: FCM,\r\n    public plt: Platform\r\n    ) {\r\n      this.plt.ready()\r\n      .then(() => {\r\n        console.log('platform ready in Feed page');\r\n        this.fcm.onNotification().subscribe(data => {\r\n          if (data.wasTapped) {\r\n            console.log(\"Received in background\");\r\n          } else {\r\n            console.log(\"Received in foreground\");\r\n          };\r\n        });\r\n\r\n        this.fcm.onTokenRefresh().subscribe(token => {\r\n          // Register your new token in your back-end if you want\r\n          // backend.registerToken(token);\r\n          console.log('fcm token', token);\r\n        });\r\n      });\r\n\r\n      // this.client = algoliasearch(this.ALOGOLIA_APP_ID, this.ALGOLIA_API_KEY, {protocol: 'https'});\r\n      // this.index = this.client.initIndex('posts');\r\n    \r\n    }\r\n\r\n    subscribeToTopic() {\r\n      this.fcm.subscribeToTopic('enappd');\r\n    }\r\n    getToken() {\r\n      this.fcm.getToken().then(token => {\r\n        // Register your new token in your back-end if you want\r\n        // backend.registerToken(token);\r\n      });\r\n    }\r\n    unsubscribeFromTopic() {\r\n      this.fcm.unsubscribeFromTopic('enappd');\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.loggedInUserId = firebase.auth().currentUser.uid;\r\n   // Get Posts\r\n    this.dataProvider.getCurrentUser().get().subscribe((user) => {\r\n     this.userReactions = user.data().userReactions;\r\n     this.userNotifications = user.data().userNotifications;\r\n     this.loggedInUser = user.data();\r\n     this.getFeedData();\r\n    });\r\n  }\r\n\r\n  getFeedData() {\r\n    this.firstDataSet = this.firestore.collection('posts').ref\r\n    .where('groupId', 'in', this.loggedInUser.groups)\r\n    .orderBy('date', 'desc')\r\n    .limit(5);\r\n    this.firstDataSet.get().then((po: any) => {\r\n    this.lastDataSet = po.docs[po.docs.length - 1];\r\n    this.posts = [];\r\n    this.loadEachPostData(po);\r\n});\r\n  }\r\n  addOrUpdatePost(post) {\r\n    if (!this.posts) {\r\n      this.posts = [post];\r\n    } else {\r\n      let index = -1;\r\n      for (let i = 0; i < this.posts.length; i++) {\r\n        if (this.posts[i].key == post.key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.posts[index] = post;\r\n      } else {\r\n        this.posts.push(post);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // Add or update conversaion for real-time sync of unreadMessagesCount.\r\n  addOrUpdateConversation(conversation) {\r\n    if (!this.conversationList) {\r\n      this.conversationList = [conversation];\r\n    } else {\r\n      let index = -1;\r\n      for (let i = 0; i < this.conversationList.length; i++) {\r\n        if (this.conversationList[i].$key == conversation.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.conversationList[index] = conversation;\r\n      } else {\r\n        this.conversationList.push(conversation);\r\n      }\r\n    }\r\n    this.computeUnreadMessagesCount();\r\n  }\r\n\r\n  // Compute all conversation's unreadMessages.\r\n  computeUnreadMessagesCount() {\r\n    this.unreadMessagesCount = 0;\r\n    if (this.conversationList) {\r\n      for (let i = 0; i < this.conversationList.length; i++) {\r\n        this.unreadMessagesCount += this.conversationList[i].messages.length - this.conversationsInfo[i].messagesRead;\r\n        if (this.unreadMessagesCount == 0) {\r\n          this.unreadMessagesCount = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUnreadMessagesCount() {\r\n    if (this.unreadMessagesCount) {\r\n      if (this.unreadMessagesCount > 0) {\r\n        return this.unreadMessagesCount;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  showGroupOptions() {\r\n    const action = this.actionSheet.create({\r\n      header: 'Create a new ...',\r\n      backdropDismiss: true,\r\n      mode: 'md',\r\n      cssClass: 'GroupAction',\r\n      buttons: [{\r\n        text: 'Post',\r\n        icon: 'chatbubbles-outline',\r\n        cssClass: 'actionicon',\r\n        handler: () => {\r\n          this.newPost();\r\n        }\r\n      }, {\r\n        text: 'Resource',\r\n        icon: 'document-outline',\r\n        handler: () => {\r\n          this.newResource();\r\n        }\r\n      }, {\r\n        text: 'Poll',\r\n        icon: 'podium-outline',\r\n        handler: () => {\r\n          this.newPoll();\r\n        }\r\n      }, {\r\n        text: 'Event',\r\n        icon: 'calendar-outline',\r\n        cssClass: 'cancelAction',\r\n        handler: () => {\r\n          this.newEvent();\r\n        }\r\n      }, {\r\n        text: 'Cancel',\r\n        icon: 'close',\r\n        role: 'cancel',\r\n        handler: () => {\r\n          console.log('Cancel clicked');\r\n        }\r\n      }]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  showPostOptions(post) {\r\n    const action = this.actionSheet.create({\r\n      header: 'Post options',\r\n      backdropDismiss: true,\r\n      mode: 'md',\r\n      cssClass: 'GroupAction',\r\n      buttons: this.createPostOptionButtons(post)\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  newPoll() {\r\n    this.router.navigateByUrl('/new-poll/' + this.groupId);\r\n  }\r\n\r\n  newPost() {\r\n    this.router.navigateByUrl('/new-post/' + this.groupId);\r\n  }\r\n\r\n  newResource() {\r\n    this.router.navigateByUrl('/new-resource/' + this.groupId);\r\n  }\r\n\r\n  newEvent() {\r\n    this.router.navigateByUrl('/new-event/' + this.groupId);\r\n  }\r\n\r\n  submitReactionPost(post, reactionType) {\r\n    switch (reactionType) {\r\n      case 'Thanks': {\r\n        if (!post.showSmiley) {\r\n          this.addPostReaction(post, reactionType);\r\n          post.showSmiley = true;\r\n          post.totalReactionCount += 1;\r\n        } else {\r\n          this.removePostReaction(post, reactionType);\r\n          post.showSmiley = false;\r\n          post.totalReactionCount -= 1;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'Hug': {\r\n        if (!post.showHug) {\r\n          this.addPostReaction(post, reactionType);\r\n          post.showHug = true;\r\n          post.totalReactionCount += 1;\r\n        } else {\r\n          this.removePostReaction(post, reactionType);\r\n          post.showHug = false;\r\n          post.totalReactionCount -= 1;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'Checkin': {\r\n        if (!post.showCheckin) {\r\n          this.addPostReaction(post, reactionType);\r\n          post.showCheckin = true;\r\n          post.totalReactionCount += 1;\r\n        } else {\r\n          this.removePostReaction(post, reactionType);\r\n          post.showCheckin = false;\r\n          post.totalReactionCount -= 1;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'Bookmark': {\r\n        if (!post.showBookmark) {\r\n          this.addPostReaction(post, reactionType);\r\n          post.showBookmark = true;\r\n          post.totalReactionCount += 1;\r\n        } else {\r\n          this.removePostReaction(post, reactionType);\r\n          post.showBookmark = false;\r\n          post.totalReactionCount -= 1;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  addPostReaction(post, reactionType) {\r\n    // first find the post in the collection\r\n    const postIndex = this.posts.findIndex(el => el.key ===  post.key);\r\n    const p = this.posts[postIndex];\r\n\r\n    const r = p.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId());\r\n\r\n    if (!r) {\r\n      console.log('here:', r);\r\n\r\n      const react = {\r\n        dateCreated: new Date(),\r\n        addedByUser: {\r\n                      addedByKey: this.dataProvider.getCurrentUserId(),\r\n                      addedByUsername: this.loggedInUser.username,\r\n                      addedByImg: this.loggedInUser.img\r\n                    },\r\n        reactionType: [reactionType]\r\n      };\r\n\r\n      this.dataProvider.addPostReactions(post.key, react).then(() => {\r\n        // Update user notifications.\r\n        if (!this.userNotifications.some(p => p !== this.postId)) {\r\n          this.userNotifications.push(this.postId);\r\n          this.dataProvider.getUser(this.loggedInUserId).update({\r\n            userNotifications: this.userNotifications\r\n          });\r\n        }\r\n\r\n        // Update user activity.\r\n        if (!this.userReactions.some(p => p !== this.postId)) {\r\n          this.userReactions.push(this.postId);\r\n          this.dataProvider.getUser(this.loggedInUserId).update({\r\n            userReactions: this.userReactions\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      r.reactionType.push(reactionType);\r\n      this.dataProvider.updatePostReactions(post.key, r);\r\n    }\r\n  }\r\n\r\n  removePostReaction(post, reactionType) {\r\n    // first find the post in the collection\r\n    const postIndex = this.posts.findIndex(el => el.key ===  post.key);\r\n    const p = this.posts[postIndex];\r\n\r\n    const found = false;\r\n    if (p.reactions !== undefined) {\r\n      const values = Object.keys(p.reactions).map( function(e) {\r\n        return p.reactions[e];\r\n      });\r\n\r\n      const reaction = post.reactions.find(\r\n        el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId());\r\n\r\n      if (reaction.reactionType.length === 1 \r\n        && reaction.reactionType.some(e => e.reactionType === reactionType)) {\r\n        this.dataProvider.removePostReaction(post.key, reaction.key);\r\n      } else {\r\n        reaction.reactionType = reaction.reactionType.filter(x => x.reactionType !== reactionType);\r\n        this.dataProvider.updatePostReactions(post.key, reaction);\r\n      }\r\n    }\r\n  }\r\n\r\n  async showReactionsList(post) {\r\n    if (post.totalReactionCount === 0) {\r\n      return;\r\n    }\r\n   // first find the post in the collection\r\n    const postIndex = this.posts.findIndex(el => el.key ===  post.key);\r\n    const p = this.posts[postIndex];\r\n    const modal = await this.modalCtrl.create({\r\n      component: ReactionListModalPage,\r\n      componentProps: {\r\n        reactions: p.reactions\r\n      }\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  viewPost(post) {\r\n    this.router.navigateByUrl('post/' + post.key);\r\n  }\r\n\r\n\r\n  viewUser(userId) {\r\n    this.router.navigateByUrl('/profile/' + userId);\r\n  }\r\n\r\n  viewGroup(groupId) {\r\n    this.router.navigateByUrl('/group/' + groupId);\r\n  }\r\n\r\n  followPost(post) {\r\n    if (!this.userNotifications) {\r\n      this.userNotifications = [post.key];\r\n    } else {\r\n      this.userNotifications.push(post.key);\r\n    }\r\n\r\n    this.dataProvider.getUser(this.loggedInUserId).update({\r\n      userNotifications: this.userNotifications\r\n    }).then(() => {\r\n      this.loadingProvider.showToast('You will be notified when there are new replies');\r\n    });\r\n  }\r\n\r\n  unFollowPost(post) {\r\n    const index = this.userNotifications.indexOf(post.key, 0);\r\n    if (index > -1) {\r\n      this.userNotifications.splice(index, 1);\r\n    }\r\n\r\n    this.dataProvider.getUser(this.loggedInUserId).update({\r\n      userNotifications: this.userNotifications\r\n    }).then(() => {\r\n      this.loadingProvider.showToast('You won\\'t get notifications for this post');\r\n    });\r\n  }\r\n\r\n  reportPost(post) {\r\n    this.dataProvider.addReports(this.loggedInUserId, post).then(() => {\r\n      this.loadingProvider.showToast('Thank you for reporting the post.');\r\n    });\r\n  }\r\n\r\n  deletePost(post) {\r\n    this.alertCtrl.create({\r\n      header: 'Delete Post',\r\n      message: 'Are you sure you want to delete this post?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: data => {\r\n             this.firestore.doc('posts/' + post.key).delete();\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  createPostOptionButtons(post) {\r\n    const buttons = [];\r\n    \r\n    const cancelButton = {\r\n      text: 'Cancel',\r\n      icon: 'close',\r\n      role: 'cancel',\r\n      handler: () => {\r\n        console.log('Cancel clicked');\r\n      }\r\n    };\r\n\r\n    const reportButton = {\r\n      text: 'Report Post',\r\n      icon: 'flag-outline',\r\n      handler: () => {\r\n        this.reportPost(post);\r\n       }\r\n      };\r\n    let notificationButton = {};\r\n\r\n    if (post.addedByUser.addedByKey === this.loggedInUserId) {\r\n      const deletePostButton = {\r\n        text: 'Delete Post',\r\n        icon: 'trash-outline',\r\n        cssClass: 'actionicon',\r\n        handler: () => {\r\n          this.deletePost(post);\r\n        }\r\n      };\r\n      buttons.push(deletePostButton);\r\n    } else {\r\n      if (this.userNotifications && this.userNotifications.some(el => el === post.key)) {\r\n        notificationButton = {\r\n            text: 'Turn Off Notifications',\r\n            icon: 'notifications-off-outline',\r\n            cssClass: 'actionicon',\r\n            handler: () => {\r\n              this.unFollowPost(post);\r\n            }\r\n          };\r\n      } else {\r\n        notificationButton = {\r\n          text: 'Turn On Notifications',\r\n          icon: 'notifications-outline',\r\n          cssClass: 'actionicon',\r\n          handler: () => {\r\n            this.followPost(post);\r\n          }\r\n        };\r\n      }\r\n      buttons.push(notificationButton);\r\n  }\r\n    buttons.push(reportButton);\r\n    buttons.push(cancelButton);\r\n    return buttons;\r\n  }\r\n\r\n  loadData(event) {\r\n    if ( this.posts.length > this.maxNoOfPosts ) {\r\n      event.target.disabled = true;\r\n    } else {\r\n      if (this.lastDataSet) {\r\n      this.nextDataSet = this.firestore.collection('posts').ref\r\n                          .where('groupId', 'in', this.loggedInUser.groups)\r\n                          .orderBy('date', 'desc')\r\n                          .startAfter(this.lastDataSet).limit(5);\r\n      this.nextDataSet.onSnapshot((po: any) => {\r\n      this.lastDataSet = po.docs[po.docs.length - 1];\r\n      console.log('po.docs.length', po.docs.length);\r\n      if (po.docs.length > 0) {\r\n        this.loadEachPostData(po);\r\n      }\r\n      event.target.complete();\r\n        });\r\n      } else {\r\n        event.target.complete();\r\n      }\r\n    }\r\n  }\r\n\r\n  loadEachPostData(po: any) {\r\n    po.forEach(p => {\r\n      let post: any;\r\n      post = p.data();\r\n      post.key = p.id;\r\n      post.showMore = false;\r\n      const startDate = new Date(post.date);\r\n    // Do your operations\r\n      const endDate   = new Date();\r\n      const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\r\n      if (seconds > 120) {\r\n      post.showNewIcon = false;\r\n    } else {\r\n      post.showNewIcon = true;\r\n    }\r\n\r\n      if (post.type === 'poll') {\r\n        const today = new Date();\r\n        const de = post.data.dateEnding.toDate();\r\n        if (post.de < today) {\r\n          post.pollClosed = true;\r\n        } else {\r\n          post.pollClosed = false;\r\n        }\r\n      }\r\n      // get reactions list\r\n      this.firestore.collection('posts').doc(post.key).collection('reactions').snapshotChanges().subscribe((reactions: any) => {\r\n        post.reactions = [];\r\n        reactions.forEach(element => {\r\n        const reaction = element.payload.doc.data();\r\n        reaction.key = element.payload.doc.id;\r\n        post.reactions.push(reaction);\r\n      });\r\n\r\n        // Check for Thanks\r\n        if (reactions) {\r\n        let foundSmiley = false;\r\n        if (post.reactions !== undefined) {\r\n             const r = post.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId());\r\n             console.log('found reactions', r);\r\n             foundSmiley = r.reactionType.some(r => r === 'Thanks');\r\n          }\r\n        if (foundSmiley) {\r\n            post.showSmiley = true;\r\n          } else {\r\n            post.showSmiley = false;\r\n          }\r\n          // Check for Hugs\r\n        let foundHug = false;\r\n        if (post.reactions !== undefined) {\r\n            foundHug = post.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId()).reactionType\r\n                                        .some(r => r === 'Hug');\r\n          }\r\n        if (foundHug) {\r\n            post.showHug = true;\r\n          } else {\r\n            post.showHug = false;\r\n          }\r\n\r\n        // Check for Checkin\r\n        let foundCheckin = false;\r\n        if (post.reactions !== undefined) {\r\n          foundCheckin = post.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId()).reactionType\r\n                                        .some(r => r === 'Checkin');\r\n          }\r\n        if (foundCheckin) {\r\n            post.showCheckin = true;\r\n          } else {\r\n            post.showCheckin = false;\r\n          }\r\n\r\n        // Check for Bookmark\r\n        let foundBookmark = false;\r\n        if (post.reactions !== undefined) {\r\n          foundBookmark = post.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId()).reactionType\r\n                                        .some(r => r === 'Bookmark');\r\n          }\r\n        if (foundBookmark) {\r\n            post.showBookmark = true;\r\n          } else {\r\n            post.showBookmark = false;\r\n          }\r\n      }\r\n      });\r\n      post.postTags = post.postTags.filter(x => x.isChecked !== false);\r\n      this.addOrUpdatePost(post);\r\n    });\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.getFeedData();\r\n    event.target.complete();\r\n  }\r\n\r\n  trimString(string, length) {\r\n    return string.length > length\r\n      ? string.substring(0, length) + \"...\"\r\n      : string;\r\n  }\r\n\r\n  onFocus(event) {\r\n    if (!this.searchMode) {\r\n      this.searchMode = true;\r\n    }\r\n  }\r\n\r\n  onCancel(event) {\r\n    this.searchMode = false;\r\n    this.searchPosts = [];\r\n    this.searchTerm = '';\r\n  }\r\n\r\n  seachFeed(event) {\r\n    // console.log('searching for ..', this.searchTerm );\r\n    // this.index.search('', {\r\n    //   query: this.searchTerm\r\n    // }).then((data) => {\r\n    //   this.searchPosts = data.hits;\r\n    // });\r\n    this.searchPosts = this.posts;\r\n  }\r\n\r\n  searchTag(tag, post) {\r\n    this.searchMode = true;\r\n    this.searchTerm = tag.val;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from '../services/share.module';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../components/components.module';\nimport { FeedPage } from './feed.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FeedPage]\n})\nexport class FeedPageModule {}\n"]}