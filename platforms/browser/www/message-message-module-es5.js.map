{"version":3,"sources":["webpack:///src/app/message/message.module.ts","webpack:///src/app/message/message.page.ts","webpack:///src/app/message/message.page.html","webpack:///src/app/message/message.page.scss"],"names":["routes","path","component","MessagePageModule","imports","forChild","declarations","MessagePage","router","route","dataProvider","firestore","loadingProvider","alertCtrl","imageProvider","modalCtrl","camera","keyboard","actionSheet","contacts","geolocation","startIndex","numberOfMessages","scrollBottom","userId","snapshot","params","id","loggedInUserId","currentUser","uid","console","log","getUser","snapshotChanges","subscribe","user","title","payload","data","name","doc","conversation","conversationId","getConversationMessages","messagesRes","messages","length","message","sender","avatar","img","push","messagesToShow","forEach","i","hide","that","updateDateTime","setInterval","date","Date","show","setTimeout","scrollTop","ionViewDidEnter","setMessagesRead","ref","once","snap","val","update","messagesRead","contentArea","scrollToBottom","scrollToTop","type","JSON","parse","stringify","toString","getConversation","users","collection","add","dateCreated","then","success","set","navigateByUrl","create","header","buttons","text","handler","uploadPhotoMessage","PictureSourceType","CAMERA","url","send","PHOTOLIBRARY","uploadVideoMessage","getCurrentPosition","timeout","res","locationMessage","coords","latitude","longitude","mapUrl","confirm","r","present","locationErr","pickContact","displayName","givenName","familyName","phoneNumbers","value","err","role","componentProps","selector","template"],"mappings":"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","file":"message-message-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MessagePage } from './message.page';\r\nimport { SharedModule } from '../services/share.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MessagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [MessagePage]\r\n})\r\nexport class MessagePageModule {}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\nimport { DataService } from '../services/data.service';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { ActionSheetController, AlertController, ModalController, IonContent } from '@ionic/angular';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { ImageService } from '../services/image.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Contacts } from '@ionic-native/contacts/ngx';\r\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { ImagemodalPage } from '../imagemodal/imagemodal.page';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.page.html',\r\n  styleUrls: ['./message.page.scss'],\r\n})\r\nexport class MessagePage implements OnInit {\r\n\r\n  @ViewChild(IonContent, null) contentArea: IonContent;\r\n\r\n  userId: any;\r\n  title: any;\r\n  message: any;\r\n  conversationId: any;\r\n  messages: any;\r\n  updateDateTime: any;\r\n  messagesToShow: any;\r\n  startIndex: any = -1;\r\n  // Set number of messages to show.\r\n  numberOfMessages = 10;\r\n  loggedInUserId: any;\r\n\r\n  // MessagePage\r\n  // This is the page where the user can chat with a friend.\r\n  constructor(\r\n    // public navCtrl: NavController,\r\n    // public navParams: NavParams,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public dataProvider: DataService,\r\n    public firestore: AngularFirestore,\r\n    public loadingProvider: LoadingService,\r\n    public alertCtrl: AlertController,\r\n    public imageProvider: ImageService,\r\n    public modalCtrl: ModalController,\r\n    public camera: Camera,\r\n    public keyboard: Keyboard,\r\n    public actionSheet: ActionSheetController,\r\n    public contacts: Contacts,\r\n    public geolocation: Geolocation\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.scrollBottom();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userId = this.route.snapshot.params.id;\r\n    this.loggedInUserId = firebase.auth().currentUser.uid;\r\n    console.log(this.userId);\r\n\r\n    // Get friend details.\r\n    this.dataProvider.getUser(this.userId).snapshotChanges().subscribe((user: any) => {\r\n      this.title = user.payload.data().name;\r\n    });\r\n\r\n    // Get conversationInfo with friend.\r\n    // tslint:disable-next-line: max-line-length\r\n    this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).snapshotChanges().subscribe((conversation: any) => {\r\n      if (conversation.payload.data()) {\r\n        // User already have conversation with this friend, get conversation\r\n        this.conversationId = conversation.payload.data().conversationId;\r\n        // Get conversation\r\n        this.dataProvider.getConversationMessages(this.conversationId).snapshotChanges().subscribe((messagesRes: any) => {\r\n          let messages = messagesRes.payload.data().messages;\r\n          if (messages == null) {\r\n            messages = [];\r\n          }\r\n          if (this.messages) {\r\n            // Just append newly added messages to the bottom of the view.\r\n            if (messages.length > this.messages.length) {\r\n              let message = messages[messages.length - 1];\r\n\r\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\r\n                message.avatar = user.payload.data().img;\r\n              });\r\n              this.messages.push(message);\r\n              this.messagesToShow.push(message);\r\n            }\r\n          } else {\r\n            // Get all messages, this will be used as reference object for messagesToShow.\r\n            this.messages = [];\r\n            messages.forEach((message) => {\r\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\r\n                message.avatar = user.payload.data().img;\r\n              });\r\n              this.messages.push(message);\r\n            });\r\n            // Load messages in relation to numOfMessages.\r\n            if (this.startIndex === -1) {\r\n              // Get initial index for numberOfMessages to show.\r\n              if ((this.messages.length - this.numberOfMessages) > 0) {\r\n                this.startIndex = this.messages.length - this.numberOfMessages;\r\n              } else {\r\n                this.startIndex = 0;\r\n              }\r\n            }\r\n            if (!this.messagesToShow) {\r\n              this.messagesToShow = [];\r\n            }\r\n            // Set messagesToShow\r\n            for (let i = this.startIndex; i < this.messages.length; i++) {\r\n              this.messagesToShow.push(this.messages[i]);\r\n            }\r\n            this.loadingProvider.hide();\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Update messages' date time elapsed every minute based on Moment.js.\r\n    var that = this;\r\n    if (!that.updateDateTime) {\r\n      that.updateDateTime = setInterval(function () {\r\n        if (that.messages) {\r\n          that.messages.forEach((message) => {\r\n            let date = message.date;\r\n            message.date = new Date(date);\r\n          });\r\n        }\r\n      }, 60000);\r\n    }\r\n\r\n    this.scrollBottom();\r\n  }\r\n  // Load previous messages in relation to numberOfMessages.\r\n  loadPreviousMessages() {\r\n    var that = this;\r\n    // Show loading.\r\n    this.loadingProvider.show();\r\n    setTimeout(function () {\r\n      // Set startIndex to load more messages.\r\n      if ((that.startIndex - that.numberOfMessages) > -1) {\r\n        that.startIndex -= that.numberOfMessages;\r\n      } else {\r\n        that.startIndex = 0;\r\n      }\r\n      // Refresh our messages list.\r\n      that.messages = null;\r\n      that.messagesToShow = null;\r\n\r\n      that.scrollTop();\r\n\r\n      // Populate list again.\r\n      that.ionViewDidEnter();\r\n    }, 1000);\r\n  }\r\n\r\n  // Update messagesRead when user lefts this page.\r\n  ionViewWillLeave() {\r\n    this.setMessagesRead();\r\n  }\r\n\r\n  // Check if currentPage is active, then update user's messagesRead.\r\n  setMessagesRead() {\r\n    firebase.database().ref('/conversations/' + this.conversationId + '/messages').once('value', snap => {\r\n      console.log(snap.val());\r\n\r\n      if (snap.val() != null) {\r\n        this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).update({\r\n          messagesRead: snap.val().length\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  scrollBottom() {\r\n    console.log(\"Calling Sb\")\r\n    setTimeout(() => {\r\n      if (this.contentArea.scrollToBottom) {\r\n        this.contentArea.scrollToBottom();\r\n      }\r\n    }, 500);\r\n    this.setMessagesRead();\r\n  }\r\n\r\n  scrollTop() {\r\n    console.log(\"Calling St\")\r\n    setTimeout(() => {\r\n      if (this.contentArea.scrollToTop) {\r\n        this.contentArea.scrollToTop();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n\r\n  // Check if the user is the sender of the message.\r\n  isSender(message) {\r\n    if (message.sender == this.loggedInUserId) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  // Send message, if there's no conversation yet, create a new conversation.\r\n  send(type) {\r\n    if (this.message) {\r\n      // User entered a text on messagebox\r\n      if (this.conversationId) {\r\n        let messages = JSON.parse(JSON.stringify(this.messages));\r\n        messages.push({\r\n          date: new Date().toString(),\r\n          sender: this.loggedInUserId,\r\n          type: type,\r\n          message: this.message\r\n        });\r\n\r\n        // Update conversation on database.\r\n        this.dataProvider.getConversation(this.conversationId).update({\r\n          messages: messages\r\n        });\r\n        // Clear messagebox.\r\n        this.message = '';\r\n        this.scrollBottom();\r\n      } else {\r\n        console.log(\"else\")\r\n        // New Conversation with friend.\r\n        var messages = [];\r\n        messages.push({\r\n          date: new Date().toString(),\r\n          sender: this.loggedInUserId,\r\n          type: type,\r\n          message: this.message\r\n        });\r\n        var users = [];\r\n        users.push(this.loggedInUserId);\r\n        users.push(this.userId);\r\n        // Add conversation.\r\n        this.firestore.collection('conversations').add({\r\n          dateCreated: new Date().toString(),\r\n          messages: messages,\r\n          users: users\r\n        }).then((success) => {\r\n          let conversationId = success.id;\r\n          this.message = '';\r\n          // Add conversation reference to the users.\r\n          this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).set({\r\n            conversationId,\r\n            messagesRead: 1\r\n          });\r\n          this.firestore.doc('/accounts/' + this.userId + '/conversations/' + this.loggedInUserId).set({\r\n            conversationId,\r\n            messagesRead: 0\r\n          });\r\n        });\r\n        this.scrollBottom();\r\n      }\r\n    }\r\n  }\r\n\r\n  viewUser(userId) {\r\n    this.router.navigateByUrl('userinfo/' + userId);\r\n  }\r\n\r\n\r\n  attach() {\r\n    this.actionSheet.create({\r\n      header: 'Choose attachments',\r\n      buttons: [{\r\n        text: 'Camera',\r\n        handler: () => {\r\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.CAMERA).then((url) => {\r\n            this.message = url;\r\n            this.send(\"image\");\r\n          });\r\n        }\r\n      }, {\r\n        text: 'Photo Library',\r\n        handler: () => {\r\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.PHOTOLIBRARY).then((url) => {\r\n            this.message = url;\r\n            this.send(\"image\");\r\n          });\r\n        }\r\n      },\r\n      {\r\n        text: 'Video',\r\n        handler: () => {\r\n          this.imageProvider.uploadVideoMessage(this.conversationId).then(url => {\r\n            this.message = url;\r\n            this.send(\"video\");\r\n          });\r\n        }\r\n      }\r\n        , {\r\n        text: 'Location',\r\n        handler: () => {\r\n          this.geolocation.getCurrentPosition({\r\n            timeout: 5000\r\n          }).then(res => {\r\n            let locationMessage = \"Location:<br> lat:\" + res.coords.latitude + \"<br> lng:\" + res.coords.longitude;\r\n            let mapUrl = \"<a href='https://www.google.com/maps/search/\" + res.coords.latitude + \",\" + res.coords.longitude + \"'>View on Map</a>\";\r\n\r\n            let confirm = this.alertCtrl.create({\r\n              header: 'Your Location',\r\n              message: locationMessage,\r\n              buttons: [{\r\n                text: 'cancel',\r\n                handler: () => {\r\n                  console.log(\"canceled\");\r\n                }\r\n              }, {\r\n                text: 'Share',\r\n                handler: () => {\r\n                  this.message = locationMessage + \"<br>\" + mapUrl;\r\n                  this.send(\"location\");\r\n                }\r\n              }]\r\n            }).then(r => r.present());\r\n          }, locationErr => {\r\n            console.log(\"Location Error\" + JSON.stringify(locationErr));\r\n          });\r\n        }\r\n      }, {\r\n        text: 'Contact',\r\n        handler: () => {\r\n          this.contacts.pickContact().then(data => {\r\n            let name;\r\n            if (data.displayName !== null) name = data.displayName;\r\n            else name = data.name.givenName + \" \" + data.name.familyName;\r\n            this.message = \"<b>Name:</b> \" + name + \"<br><b>Mobile:</b> <a href='tel:\" + data.phoneNumbers[0].value + \"'>\" + data.phoneNumbers[0].value + \"</a>\";\r\n            this.send(\"contact\");\r\n          }, err => {\r\n            console.log(err);\r\n          })\r\n        }\r\n      }, {\r\n        text: 'cancel',\r\n        role: 'cancel',\r\n        handler: () => {\r\n          console.log(\"cancelled\");\r\n        }\r\n      }]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Enlarge image messages.\r\n  enlargeImage(img) {\r\n    this.modalCtrl.create({\r\n      component: ImagemodalPage,\r\n      componentProps: {\r\n        img\r\n      }\r\n    }).then(res => {\r\n      res.present();\r\n    });\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title (click)=\\\"viewUser(userId)\\\">{{title}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [scrollEvents]=\\\"true\\\" #content>\\r\\n  <div class=\\\"messages\\\" #contentArea>\\r\\n    <p class=\\\"center\\\" *ngIf=\\\"startIndex > 0\\\"><span tappable (click)=\\\"loadPreviousMessages()\\\">Load previous\\r\\n        messages</span></p>\\r\\n    <div *ngFor=\\\"let message of messagesToShow\\\">\\r\\n      <div *ngIf=\\\"isSender(message)\\\" class=\\\"chatbox right sender\\\">\\r\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\r\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\r\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\r\\n          <video controls width=\\\"100%\\\">\\r\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\r\\n          </video>\\r\\n        </div>\\r\\n        <span>{{message.date | DateFormat}}</span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!isSender(message)\\\" class=\\\"chatbox left\\\">\\r\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\r\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\r\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\r\\n          <video controls width=\\\"100%\\\">\\r\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\r\\n          </video>\\r\\n        </div>\\r\\n        <span>{{message.date | DateFormat}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-item class=\\\"bottom_bar\\\">\\r\\n      <ion-textarea style=\\\"margin:0\\\" rows=\\\"0\\\" placeholder=\\\"Type your message\\\" [(ngModel)]=\\\"message\\\">\\r\\n      </ion-textarea>\\r\\n      <ion-buttons slot=\\\"end\\\" style=\\\"margin-left:4px;\\\">\\r\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"attach()\\\">\\r\\n          <ion-icon name=\\\"attach\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-button color=\\\"primary\\\" fill=\\\"clear\\\" (click)=\\\"send('text')\\\" [disabled]=\\\"!message\\\">\\r\\n          send\\r\\n        </ion-button>\\r\\n      </ion-buttons>\\r\\n    </ion-item>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\";","export default \"ion-textarea {\\n  font-size: 12px;\\n  resize: both;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tZXNzYWdlL21lc3NhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXRleHRhcmVhe1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgcmVzaXplOiBib3RoO1xyXG59Il19 */\";"]}