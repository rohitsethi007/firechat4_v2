{"version":3,"sources":["src/app/message/message.page.html","src/app/message/message.module.ts","src/app/message/message.page.scss","src/app/message/message.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title (click)=\\\"viewUser(userId)\\\">{{title}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [scrollEvents]=\\\"true\\\" #content>\\n  <div class=\\\"messages\\\" #contentArea>\\n    <p class=\\\"center\\\" *ngIf=\\\"startIndex > 0\\\"><span tappable (click)=\\\"loadPreviousMessages()\\\">Load previous\\n        messages</span></p>\\n    <div *ngFor=\\\"let message of messagesToShow\\\">\\n      <div *ngIf=\\\"isSender(message)\\\" class=\\\"chatbox right sender\\\">\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\n        </div>\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\n        </div>\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\n          <video controls width=\\\"100%\\\">\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\n          </video>\\n        </div>\\n        <span>{{message.date | DateFormat}}</span>\\n      </div>\\n      <div *ngIf=\\\"!isSender(message)\\\" class=\\\"chatbox left\\\">\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\n        </div>\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\n        </div>\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\n          <video controls width=\\\"100%\\\">\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\n          </video>\\n        </div>\\n        <span>{{message.date | DateFormat}}</span>\\n      </div>\\n    </div>\\n\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-item class=\\\"bottom_bar\\\">\\n      <ion-textarea style=\\\"margin:0\\\" rows=\\\"0\\\" placeholder=\\\"Type your message\\\" [(ngModel)]=\\\"message\\\">\\n      </ion-textarea>\\n      <ion-buttons slot=\\\"end\\\" style=\\\"margin-left:4px;\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"attach()\\\">\\n          <ion-icon name=\\\"attach\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button color=\\\"primary\\\" fill=\\\"clear\\\" (click)=\\\"send('text')\\\" [disabled]=\\\"!message\\\">\\n          send\\n        </ion-button>\\n      </ion-buttons>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-footer>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagePage } from './message.page';\nimport { SharedModule } from '../services/share.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MessagePage]\n})\nexport class MessagePageModule {}\n","export default \"ion-textarea {\\n  font-size: 12px;\\n  resize: both;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yaXRhc2V0aGkvRG9jdW1lbnRzL0dpdEh1Yi9maXJlY2hhdDRfdjIvc3JjL2FwcC9tZXNzYWdlL21lc3NhZ2UucGFnZS5zY3NzIiwic3JjL2FwcC9tZXNzYWdlL21lc3NhZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2UvbWVzc2FnZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tdGV4dGFyZWF7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHJlc2l6ZTogYm90aDtcbn0iLCJpb24tdGV4dGFyZWEge1xuICBmb250LXNpemU6IDEycHg7XG4gIHJlc2l6ZTogYm90aDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { DataService } from '../services/data.service';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { ActionSheetController, AlertController, ModalController, IonContent } from '@ionic/angular';\nimport { LoadingService } from '../services/loading.service';\nimport { ImageService } from '../services/image.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Contacts } from '@ionic-native/contacts/ngx';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { ImagemodalPage } from '../imagemodal/imagemodal.page';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n\n  @ViewChild(IonContent, null) contentArea: IonContent;\n\n  userId: any;\n  title: any;\n  message: any;\n  conversationId: any;\n  messages: any;\n  updateDateTime: any;\n  messagesToShow: any;\n  startIndex: any = -1;\n  // Set number of messages to show.\n  numberOfMessages = 10;\n  loggedInUserId: any;\n\n  // MessagePage\n  // This is the page where the user can chat with a friend.\n  constructor(\n    // public navCtrl: NavController,\n    // public navParams: NavParams,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dataProvider: DataService,\n    public firestore: AngularFirestore,\n    public loadingProvider: LoadingService,\n    public alertCtrl: AlertController,\n    public imageProvider: ImageService,\n    public modalCtrl: ModalController,\n    public camera: Camera,\n    public keyboard: Keyboard,\n    public actionSheet: ActionSheetController,\n    public contacts: Contacts,\n    public geolocation: Geolocation\n  ) { }\n\n  ngOnInit() {\n    this.scrollBottom();\n  }\n\n  ionViewDidEnter() {\n    this.userId = this.route.snapshot.params.id;\n    this.loggedInUserId = firebase.auth().currentUser.uid;\n    console.log(this.userId);\n\n    // Get friend details.\n    this.dataProvider.getUser(this.userId).snapshotChanges().subscribe((user: any) => {\n      this.title = user.payload.data().name;\n    });\n\n    // Get conversationInfo with friend.\n    // tslint:disable-next-line: max-line-length\n    this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).snapshotChanges().subscribe((conversation: any) => {\n      if (conversation.payload.data()) {\n        // User already have conversation with this friend, get conversation\n        this.conversationId = conversation.payload.data().conversationId;\n        // Get conversation\n        this.dataProvider.getConversationMessages(this.conversationId).snapshotChanges().subscribe((messagesRes: any) => {\n          let messages = messagesRes.payload.data().messages;\n          if (messages == null) {\n            messages = [];\n          }\n          if (this.messages) {\n            // Just append newly added messages to the bottom of the view.\n            if (messages.length > this.messages.length) {\n              let message = messages[messages.length - 1];\n\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                message.avatar = user.payload.data().img;\n              });\n              this.messages.push(message);\n              this.messagesToShow.push(message);\n            }\n          } else {\n            // Get all messages, this will be used as reference object for messagesToShow.\n            this.messages = [];\n            messages.forEach((message) => {\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                message.avatar = user.payload.data().img;\n              });\n              this.messages.push(message);\n            });\n            // Load messages in relation to numOfMessages.\n            if (this.startIndex === -1) {\n              // Get initial index for numberOfMessages to show.\n              if ((this.messages.length - this.numberOfMessages) > 0) {\n                this.startIndex = this.messages.length - this.numberOfMessages;\n              } else {\n                this.startIndex = 0;\n              }\n            }\n            if (!this.messagesToShow) {\n              this.messagesToShow = [];\n            }\n            // Set messagesToShow\n            for (let i = this.startIndex; i < this.messages.length; i++) {\n              this.messagesToShow.push(this.messages[i]);\n            }\n            this.loadingProvider.hide();\n          }\n        });\n      }\n    });\n\n    // Update messages' date time elapsed every minute based on Moment.js.\n    var that = this;\n    if (!that.updateDateTime) {\n      that.updateDateTime = setInterval(function () {\n        if (that.messages) {\n          that.messages.forEach((message) => {\n            let date = message.date;\n            message.date = new Date(date);\n          });\n        }\n      }, 60000);\n    }\n\n    // this.scrollBottom();\n  }\n  // Load previous messages in relation to numberOfMessages.\n  loadPreviousMessages() {\n    var that = this;\n    // Show loading.\n    this.loadingProvider.show();\n    setTimeout(function () {\n      // Set startIndex to load more messages.\n      if ((that.startIndex - that.numberOfMessages) > -1) {\n        that.startIndex -= that.numberOfMessages;\n      } else {\n        that.startIndex = 0;\n      }\n      // Refresh our messages list.\n      that.messages = null;\n      that.messagesToShow = null;\n\n      that.scrollTop();\n\n      // Populate list again.\n      that.ionViewDidEnter();\n    }, 1000);\n  }\n\n  // Update messagesRead when user lefts this page.\n  ionViewWillLeave() {\n    this.setMessagesRead();\n  }\n\n  // Check if currentPage is active, then update user's messagesRead.\n  setMessagesRead() {\n    firebase.database().ref('/conversations/' + this.conversationId + '/messages').once('value', snap => {\n      console.log(snap.val());\n\n      if (snap.val() != null) {\n        this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).update({\n          messagesRead: snap.val().length\n        });\n      }\n    });\n  }\n\n  scrollBottom() {\n    console.log(\"Calling Sb\")\n    setTimeout(() => {\n      if (this.contentArea.scrollToBottom) {\n        this.contentArea.scrollToBottom();\n      }\n    }, 500);\n    this.setMessagesRead();\n  }\n\n  scrollTop() {\n    console.log(\"Calling St\")\n    setTimeout(() => {\n      if (this.contentArea.scrollToTop) {\n        this.contentArea.scrollToTop();\n      }\n    }, 500);\n  }\n\n\n  // Check if the user is the sender of the message.\n  isSender(message) {\n    if (message.sender == this.loggedInUserId) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  // Send message, if there's no conversation yet, create a new conversation.\n  send(type) {\n    if (this.message) {\n      // User entered a text on messagebox\n      if (this.conversationId) {\n        let messages = JSON.parse(JSON.stringify(this.messages));\n        messages.push({\n          date: new Date().toString(),\n          sender: this.loggedInUserId,\n          type: type,\n          message: this.message\n        });\n\n        // Update conversation on database.\n        this.dataProvider.getConversation(this.conversationId).update({\n          messages: messages\n        });\n        // Clear messagebox.\n        this.message = '';\n        this.scrollBottom();\n      } else {\n        console.log(\"else\")\n        // New Conversation with friend.\n        var messages = [];\n        messages.push({\n          date: new Date().toString(),\n          sender: this.loggedInUserId,\n          type: type,\n          message: this.message\n        });\n        var users = [];\n        users.push(this.loggedInUserId);\n        users.push(this.userId);\n        // Add conversation.\n        this.firestore.collection('conversations').add({\n          dateCreated: new Date().toString(),\n          messages: messages,\n          users: users\n        }).then((success) => {\n          let conversationId = success.id;\n          this.message = '';\n          // Add conversation reference to the users.\n          this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).set({\n            conversationId,\n            messagesRead: 1\n          });\n          this.firestore.doc('/accounts/' + this.userId + '/conversations/' + this.loggedInUserId).set({\n            conversationId,\n            messagesRead: 0\n          });\n        });\n        this.scrollBottom();\n      }\n    }\n  }\n\n  viewUser(userId) {\n    this.router.navigateByUrl('userinfo/' + userId);\n  }\n\n\n  attach() {\n    this.actionSheet.create({\n      header: 'Choose attachments',\n      buttons: [{\n        text: 'Camera',\n        handler: () => {\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.CAMERA).then((url) => {\n            this.message = url;\n            this.send(\"image\");\n          });\n        }\n      }, {\n        text: 'Photo Library',\n        handler: () => {\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.PHOTOLIBRARY).then((url) => {\n            this.message = url;\n            this.send(\"image\");\n          });\n        }\n      },\n      {\n        text: 'Video',\n        handler: () => {\n          this.imageProvider.uploadVideoMessage(this.conversationId).then(url => {\n            this.message = url;\n            this.send(\"video\");\n          });\n        }\n      }\n        , {\n        text: 'Location',\n        handler: () => {\n          this.geolocation.getCurrentPosition({\n            timeout: 5000\n          }).then(res => {\n            let locationMessage = \"Location:<br> lat:\" + res.coords.latitude + \"<br> lng:\" + res.coords.longitude;\n            let mapUrl = \"<a href='https://www.google.com/maps/search/\" + res.coords.latitude + \",\" + res.coords.longitude + \"'>View on Map</a>\";\n\n            let confirm = this.alertCtrl.create({\n              header: 'Your Location',\n              message: locationMessage,\n              buttons: [{\n                text: 'cancel',\n                handler: () => {\n                  console.log(\"canceled\");\n                }\n              }, {\n                text: 'Share',\n                handler: () => {\n                  this.message = locationMessage + \"<br>\" + mapUrl;\n                  this.send(\"location\");\n                }\n              }]\n            }).then(r => r.present());\n          }, locationErr => {\n            console.log(\"Location Error\" + JSON.stringify(locationErr));\n          });\n        }\n      }, {\n        text: 'Contact',\n        handler: () => {\n          this.contacts.pickContact().then(data => {\n            let name;\n            if (data.displayName !== null) name = data.displayName;\n            else name = data.name.givenName + \" \" + data.name.familyName;\n            this.message = \"<b>Name:</b> \" + name + \"<br><b>Mobile:</b> <a href='tel:\" + data.phoneNumbers[0].value + \"'>\" + data.phoneNumbers[0].value + \"</a>\";\n            this.send(\"contact\");\n          }, err => {\n            console.log(err);\n          })\n        }\n      }, {\n        text: 'cancel',\n        role: 'cancel',\n        handler: () => {\n          console.log(\"cancelled\");\n        }\n      }]\n    }).then(r => r.present());\n  }\n\n  // Enlarge image messages.\n  enlargeImage(img) {\n    this.modalCtrl.create({\n      component: ImagemodalPage,\n      componentProps: {\n        img: img\n      }\n    }).then(res => {\n      res.present();\n    })\n    // let imageModal = this.modalCtrl.create(ImageModalPage, { img: img });\n    // imageModal.present();\n  }\n\n\n}\n"],"sourceRoot":"webpack:///","file":"message-message-module-es5.js"}