{"version":3,"sources":["webpack:///src/app/forgot/forgot.page.scss","webpack:///src/app/forgot/forgot.page.ts","webpack:///src/app/forgot/forgot.module.ts","webpack:///src/app/forgot/forgot.page.html"],"names":["ForgotPage","loginService","formBuilder","submitAttempt","errorMessages","myForm","group","email","emailValidator","controls","valid","reset","selector","template","routes","path","component","ForgotPageModule","imports","forChild","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFA,UAAU;AAQrB,4BACUC,YADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,eAAAD,YAAA,GAAAA,YAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AALV,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,aAAA,GAAqB,EAArB;AAOE,eAAKA,aAAL,GAAqB,qEAAUA,aAA/B;AACA,eAAKC,MAAL,GAAc,KAAKH,WAAL,CAAiBI,KAAjB,CAAuB;AACnCC,iBAAK,EAAE,qEAAUC;AADkB,WAAvB,CAAd;AAGD;;AAjBoB;AAAA;AAAA,qCAmBV,CACV;AApBoB;AAAA;AAAA,kCAsBb;AACN,iBAAKL,aAAL,GAAqB,IAArB;;AACA,gBAAI,KAAKE,MAAL,CAAYI,QAAZ,CAAqBF,KAArB,CAA2BG,KAA/B,EAAsC;AACpC,mBAAKT,YAAL,CAAkBU,KAAlB,CAAwB,KAAKJ,KAA7B;AACD;AACF;AA3BoB;;AAAA;AAAA,S;;;;gBAVd;;gBAEA;;;;AAQIP,gBAAU,6DALtB,gEAAU;AACTY,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR,oEAFS;;AAAA,OAAV,CAKsB,E,+EASG,oE,EACD,0D,EAVF,GAAVb,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,UAAMc,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAiBaC,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAV5B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaC,QAAb,CAAsBL,MAAtB,CALO,CADD;AAQRM,oBAAY,EAAE,CAAC,uDAAD;AARN,OAAT,CAU4B,GAAhBH,gBAAgB,CAAhB;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA","file":"forgot-forgot-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC9mb3Jnb3QucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../services/login.service';\n\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Validator } from 'src/environments/validator';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.page.html',\n  styleUrls: ['./forgot.page.scss'],\n})\nexport class ForgotPage implements OnInit {\n\n  email: any;\n  password: any;\n  myForm: FormGroup;\n  submitAttempt = false;\n  errorMessages: any = [];\n\n  constructor(\n    private loginService: LoginService,\n    private formBuilder: FormBuilder\n  ) {\n\n    this.errorMessages = Validator.errorMessages\n    this.myForm = this.formBuilder.group({\n      email: Validator.emailValidator,\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  reset() {\n    this.submitAttempt = true;\n    if (this.myForm.controls.email.valid) {\n      this.loginService.reset(this.email);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPage } from './forgot.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ForgotPage]\n})\nexport class ForgotPageModule { }\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Reset Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"center ion-padding\\\">\\n    <img src=\\\"assets/images/logo.png\\\" style=\\\"width:80px;height:80px;\\\" />\\n  </div>\\n  <form [formGroup]=\\\"myForm\\\">\\n    <ion-list lines=\\\"none\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Email</ion-label>\\n        <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" email=\\\"true\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n        <div *ngFor=\\\"let validation of errorMessages.email\\\">\\n          <p class=\\\"error\\\"\\n            *ngIf=\\\"myForm.get('email').hasError(validation.type) && (myForm.get('email').dirty || myForm.get('email').touched || submitAttempt) \\\">\\n            {{validation.message}}\\n          </p>\\n        </div>\\n      </ion-item>\\n      <div class=\\\"item-padding\\\">\\n        <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"reset()\\\">\\n          Reset Password\\n        </ion-button>\\n      </div>\\n    </ion-list>\\n  </form>\\n</ion-content>\";"]}