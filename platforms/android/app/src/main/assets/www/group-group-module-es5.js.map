{"version":3,"sources":["webpack:///src/app/group/group.page.scss","webpack:///src/app/group/group.module.ts","webpack:///src/app/group/group.page.ts","webpack:///src/app/group/group.page.html"],"names":["routes","path","component","GroupPageModule","imports","forChild","declarations","GroupPage","dataProvider","navCtrl","modalCtrl","firestore","alertCtrl","imageProvider","loadingProvider","camera","keyboard","actionSheet","contacts","geolocation","route","router","popoverCtrl","startIndex","scrollDirection","numberOfMessages","polls","resources","events","loggedInUserIsMember","resourceTags","notifications","toggled","posts","numberOfPosts","maxNoOfPosts","maxNoOfEvents","maxNoOfPolls","maxNoOfResources","loggedInUserId","currentUser","uid","event","emojitext","show","tab","title","getCurrentUser","get","subscribe","user","loggedInUser","data","getGroupDetailsandPosts","hide","messages","setMessagesRead","doc","groupId","update","messagesRead","length","keyCode","that","setTimeout","content","nativeElement","scrollBottom","scrollHeight","scrollTop","message","sender","type","userId","navigateByUrl","JSON","parse","stringify","push","date","Date","toString","getGroup","img","action","create","header","buttons","text","handler","uploadGroupPhotoMessage","PictureSourceType","CAMERA","then","url","sendPhotoMessage","PHOTOLIBRARY","uploadGroupVideoMessage","sendVideoMessage","getCurrentPosition","timeout","res","locationMessage","coords","latitude","longitude","mapUrl","confirm","send","r","present","locationErr","pickContact","displayName","phoneNumbers","value","err","role","$event","presentPopover","alert","group","members","name","icon","back","myEvent","ev","target","getBoundingClientRect","top","center","y","left","x","componentProps","translucent","popover","snapshot","params","id","subscription","snapshotChanges","payload","forEach","memberId","getUser","member","key","$key","addUpdateOrRemoveMember","getGroupMessages","messagesRes","undefined","avatar","messagesToShow","i","getGroupMembers","memberIdsRes","memberIds","includes","updateDateTime","setInterval","exists","firstDataSetPost","collection","ref","where","orderBy","limit","onSnapshot","po","lastDataSetPost","docs","loadEachPostData","post","p","startDate","endDate","seconds","getTime","showNewIcon","reactions","element","reaction","foundSmiley","find","el","addedByUser","addedByKey","getCurrentUserId","reactionType","some","showSmiley","foundHug","showHug","postTags","filter","isChecked","addOrUpdatePost","indexOf","groupMembers","index","index1","j","splice","getGroupDetailsandMessages","getPolls","getResources","getEvents","firstDataSetPoll","lastDataSetPoll","loadEachPollData","addOrUpdatePoll","poll","resource","firstDataSetResources","lastDataSetResources","loadEachResourceData","foundBookmark","showBookmark","addOrUpdateResource","firstDataSetEvent","lastDataSetEvent","loadEachEventData","foundCheckin","showCheckin","addOrUpdateEvent","totalPollCount","pollOptions","dateCreated","backdropDismiss","mode","cssClass","newPost","newResource","newPoll","newEvent","addPostReaction","totalReactionCount","removePostReaction","postIndex","findIndex","react","addedByUsername","username","addedByImg","addPostReactions","FieldValue","arrayUnion","increment","found","values","Object","keys","map","e","arrayRemove","modal","createPostOptionButtons","showToast","addReports","cancelButton","reportButton","reportPost","notificationButton","deletePostButton","deletePost","unFollowPost","followPost","disabled","nextDataSetPost","startAfter","complete","nextDataSetPoll","nextDataSetEvent","nextDataSetResources","selector","template"],"mappings":"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","file":"group-group-module-es5.js","sourcesContent":["export default \":host {\\n  --page-margin: var(--app-fair-margin);\\n  --page-background: var(--app-background);\\n  --page-rating-2-color: #aa6c39;\\n  --page-rating-1-color: #bbb2b2;\\n}\\n\\n.tab-title {\\n  size: 9px;\\n}\\n\\nion-segment-button {\\n  background-color: var(--page-background);\\n}\\n\\n.filters-toolbar {\\n  --padding-start: var(--page-margin);\\n  --padding-end: var(--page-margin);\\n  --padding-top: var(--page-margin);\\n  --padding-bottom: var(--page-margin);\\n  --border-style: 10px;\\n}\\n\\n.filters-toolbar .searchbar-row {\\n  --ion-grid-column-padding: 0px;\\n}\\n\\n.filters-toolbar .searchbar-row ion-searchbar.items-searchbar {\\n  padding: 0px;\\n  height: 100%;\\n  contain: content;\\n}\\n\\n.filters-toolbar .searchbar-row .call-to-action-col {\\n  max-width: -webkit-fit-content;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  flex-shrink: 0;\\n  flex-grow: 0;\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\n.filters-toolbar .searchbar-row .call-to-action-col .filters-btn {\\n  --padding-start: 6px;\\n  --padding-end: 6px;\\n  margin: 0px;\\n  font-size: 15px;\\n  height: initial;\\n}\\n\\n.listing-item {\\n  background-color: var(--page-background);\\n}\\n\\n.icon {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\n.text {\\n  display: inline-block;\\n  vertical-align: middle;\\n  padding-left: 3px;\\n  text-transform: capitalize !important;\\n}\\n\\n.addedByTitle {\\n  margin-left: 10px;\\n  line-height: 5px;\\n  text-decoration: none;\\n}\\n\\n.addedByDate {\\n  margin-left: 10px;\\n  font-style: italic;\\n}\\n\\n.addedByImg {\\n  width: 50px;\\n  float: left;\\n  vertical-align: middle;\\n}\\n\\n.newIcon {\\n  margin-left: 10px;\\n  height: 40px;\\n  vertical-align: middle;\\n}\\n\\n.message {\\n  font-family: \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, \\\"Roboto\\\", \\\"Segoe UI\\\", Arial, sans-serif;\\n  font-weight: 400;\\n  font-size: 14px;\\n  line-height: 19px;\\n  -webkit-font-smoothing: subpixel-antialiased;\\n  -moz-osx-font-smoothing: auto;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.message .slider {\\n  margin-bottom: 5px;\\n}\\n\\n.message .slider .bgSizeContain {\\n  background-repeat: no-repeat;\\n  background-position: center center;\\n  background-size: 100%;\\n  width: 100%;\\n  height: 200px;\\n  text-shadow: white 0px 0px 2px;\\n  font-size: 16px;\\n  border-radius: 10px;\\n}\\n\\n.message .reactions {\\n  margin-bottom: 0px;\\n  margin-left: -10px;\\n}\\n\\n.message .tags-wrapper {\\n  padding-top: 5px;\\n}\\n\\n.message .tags-wrapper .tags {\\n  padding-right: 5px;\\n}\\n\\n.message .tags-wrapper .tags .item-rating {\\n  background-color: rgba(var(--page-color-rgb), 0.35);\\n  padding-right: 15px;\\n  font-size: 12px;\\n  font-weight: bold;\\n  width: 100%;\\n  display: block;\\n  text-align: center;\\n  color: #aa6c39;\\n}\\n\\n.group-info {\\n  margin: var(--page-margin) var(--page-margin) var(--page-margin) var(--page-margin);\\n}\\n\\n.group-info .group-name {\\n  padding-top: var(--page-margin);\\n  padding-bottom: var(--page-margin);\\n  font-family: \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, \\\"Roboto\\\", \\\"Segoe UI\\\", Arial, sans-serif;\\n  text-align: left;\\n  font-weight: bold;\\n  font-size: 19px;\\n}\\n\\n.group-info .group-tags {\\n  padding-bottom: calc(var(--page-margin) / 3);\\n}\\n\\n.group-info .group-tags .tags {\\n  padding-right: 5px;\\n}\\n\\n.group-info .group-tags .tags .item-rating {\\n  background-color: rgba(var(--page-color-rgb), 0.35);\\n  padding-right: calc(var(--page-margin) / 2);\\n  font-size: 14px;\\n  font-weight: bold;\\n  width: 100%;\\n  display: block;\\n  text-align: center;\\n}\\n\\n.group-info .group-tags .tags .item-rating[ratingBase=\\\"0\\\"] {\\n  color: var(--page-rating-1-color);\\n}\\n\\n.group-info .group-tags .tags .item-rating[ratingBase=\\\"1\\\"] {\\n  color: var(--page-rating-2-color);\\n}\\n\\n.group-info .group-member-name {\\n  padding-left: var(--page-margin);\\n}\\n\\n.empty-list {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3JvdXAvZ3JvdXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUNBQUE7RUFDQSx3Q0FBQTtFQUNBLDhCQUFBO0VBQ0EsOEJBQUE7QUFDRjs7QUFDQTtFQUNFLFNBQUE7QUFFRjs7QUFBQTtFQUNFLHdDQUFBO0FBR0Y7O0FBQUE7RUFDRSxtQ0FBQTtFQUNBLGlDQUFBO0VBQ0EsaUNBQUE7RUFDQSxvQ0FBQTtFQUNBLG9CQUFBO0FBR0Y7O0FBREU7RUFDRSw4QkFBQTtBQUdKOztBQURJO0VBQ0UsWUFBQTtFQUVBLFlBQUE7RUFFQSxnQkFBQTtBQUNOOztBQUVJO0VBRUUsOEJBQUE7RUFBQSwyQkFBQTtFQUFBLHNCQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFFQSxhQUFBO0VBQ0EseUJBQUE7QUFGTjs7QUFJTTtFQUNFLG9CQUFBO0VBQ0Esa0JBQUE7RUFFQSxXQUFBO0VBQ0EsZUFBQTtFQUVBLGVBQUE7QUFKUjs7QUFXQTtFQUNBLHdDQUFBO0FBUkE7O0FBV0E7RUFDQSxxQkFBQTtFQUNBLHNCQUFBO0FBUkE7O0FBV0E7RUFDQyxxQkFBQTtFQUNBLHNCQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQ0FBQTtBQVJEOztBQVVBO0VBQ0MsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FBUEQ7O0FBU0E7RUFDQSxpQkFBQTtFQUNDLGtCQUFBO0FBTkQ7O0FBUUE7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUNBLHNCQUFBO0FBTEY7O0FBT0E7RUFDRSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtBQUpGOztBQU1BO0VBQ0Usa0dBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLDRDQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FBSEY7O0FBS0U7RUFDRSxrQkFBQTtBQUhKOztBQUlJO0VBQ0UsNEJBQUE7RUFDQSxrQ0FBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtFQUNBLGVBQUE7RUFHQSxtQkFBQTtBQUZOOztBQU1FO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtBQUpKOztBQU1FO0VBQ0UsZ0JBQUE7QUFKSjs7QUFNSTtFQUNFLGtCQUFBO0FBSk47O0FBTUk7RUFDRSxtREFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUFKTjs7QUFVQTtFQUNFLG1GQUFBO0FBUEY7O0FBV0U7RUFDRSwrQkFBQTtFQUNBLGtDQUFBO0VBQ0Esa0dBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtBQVRKOztBQVdFO0VBQ0UsNENBQUE7QUFUSjs7QUFXSTtFQUNFLGtCQUFBO0FBVE47O0FBV0k7RUFFRSxtREFBQTtFQU1RLDJDQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQWZkOztBQWdCYztFQUNFLGlDQUFBO0FBZGhCOztBQWdCYztFQUNFLGlDQUFBO0FBZGhCOztBQXFCRTtFQUNFLGdDQUFBO0FBbkJKOztBQXVCQTtFQUNFLGtCQUFBO0FBcEJGIiwiZmlsZSI6InNyYy9hcHAvZ3JvdXAvZ3JvdXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAtLXBhZ2UtbWFyZ2luOiB2YXIoLS1hcHAtZmFpci1tYXJnaW4pO1xuICAtLXBhZ2UtYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQpO1xuICAtLXBhZ2UtcmF0aW5nLTItY29sb3I6ICNhYTZjMzk7XG4gIC0tcGFnZS1yYXRpbmctMS1jb2xvcjogI2JiYjJiMjtcbn1cbi50YWItdGl0bGUge1xuICBzaXplOiA5cHg7XG59XG5pb24tc2VnbWVudC1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wYWdlLWJhY2tncm91bmQpO1xufVxuXG4uZmlsdGVycy10b29sYmFyIHtcbiAgLS1wYWRkaW5nLXN0YXJ0OiB2YXIoLS1wYWdlLW1hcmdpbik7XG4gIC0tcGFkZGluZy1lbmQ6IHZhcigtLXBhZ2UtbWFyZ2luKTtcbiAgLS1wYWRkaW5nLXRvcDogdmFyKC0tcGFnZS1tYXJnaW4pO1xuICAtLXBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWdlLW1hcmdpbik7XG4gIC0tYm9yZGVyLXN0eWxlOiAxMHB4O1xuXG4gIC5zZWFyY2hiYXItcm93IHtcbiAgICAtLWlvbi1ncmlkLWNvbHVtbi1wYWRkaW5nOiAwcHg7XG5cbiAgICBpb24tc2VhcmNoYmFyLml0ZW1zLXNlYXJjaGJhciB7XG4gICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAvLyBvdmVycmlkZSBJb25pYyBmaXhlZCBoZWlnaHRcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIC8vIExlYXJuIG1vcmUgYWJvdXQgQ1NTIGNvbnRhaW4gcHJvcGVydHkgaGVyZTogaHR0cHM6Ly90ZXJtdmFkZXIuZ2l0aHViLmlvL2Nzcy1jb250YWluL1xuICAgICAgY29udGFpbjogY29udGVudDtcbiAgICB9XG5cbiAgICAuY2FsbC10by1hY3Rpb24tY29sIHtcbiAgICAgIC8vcGFkZGluZy1pbmxpbmUtc3RhcnQ6IHZhcigtLXBhZ2UtbWFyZ2luKTtcbiAgICAgIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICBmbGV4LXNocmluazogMDtcbiAgICAgIGZsZXgtZ3JvdzogMDtcblxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG5cbiAgICAgIC5maWx0ZXJzLWJ0biB7XG4gICAgICAgIC0tcGFkZGluZy1zdGFydDogNnB4O1xuICAgICAgICAtLXBhZGRpbmctZW5kOiA2cHg7XG5cbiAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgICAgLy8gb3ZlcnJpZGUgSW9uaWMgZml4ZWQgaGVpZ2h0XG4gICAgICAgIGhlaWdodDogaW5pdGlhbDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuXG4ubGlzdGluZy1pdGVtIHtcbmJhY2tncm91bmQtY29sb3I6IHZhcigtLXBhZ2UtYmFja2dyb3VuZCk7XG59XG5cbi5pY29uIHtcbmRpc3BsYXk6IGlubGluZS1ibG9jaztcbnZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi50ZXh0e1xuIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuIHBhZGRpbmctbGVmdDogM3B4O1xuIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplICFpbXBvcnRhbnQ7XG59XG4uYWRkZWRCeVRpdGxlIHtcbiBtYXJnaW4tbGVmdDogMTBweDtcbiBsaW5lLWhlaWdodDogNXB4O1xuIHRleHQtZGVjb3JhdGlvbjogbm9uZSBcbn1cbi5hZGRlZEJ5RGF0ZSB7XG5tYXJnaW4tbGVmdDogMTBweDtcbiBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uYWRkZWRCeUltZyB7XG4gIHdpZHRoOiA1MHB4O1xuICBmbG9hdDogbGVmdDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi5uZXdJY29uIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi5tZXNzYWdlIHtcbiAgZm9udC1mYW1pbHk6ICdIZWx2ZXRpY2FOZXVlJywgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCAnUm9ib3RvJywgJ1NlZ29lIFVJJywgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IHN1YnBpeGVsLWFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogYXV0bztcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG4gIC5zbGlkZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAuYmdTaXplQ29udGFpbiB7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgIHRleHQtc2hhZG93OiB3aGl0ZSAwcHggMHB4IDJweDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgIC1tb3otYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIH1cbiAgfVxuXG4gIC5yZWFjdGlvbnMge1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gIH0gXG4gIC50YWdzLXdyYXBwZXIge1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICBcbiAgICAudGFncyB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG5cbiAgICAuaXRlbS1yYXRpbmcge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSh2YXIoLS1wYWdlLWNvbG9yLXJnYiksIC4zNSk7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgY29sb3I6ICNhYTZjMzk7XG4gICAgfVxuICAgIH1cbiAgfVxufVxuXG4uZ3JvdXAtaW5mbyB7XG4gIG1hcmdpbjogdmFyKC0tcGFnZS1tYXJnaW4pIHZhcigtLXBhZ2UtbWFyZ2luKSB2YXIoLS1wYWdlLW1hcmdpbikgdmFyKC0tcGFnZS1tYXJnaW4pO1xuICAuZ3JvdXAtaW1nIHtcblxuICB9XG4gIC5ncm91cC1uYW1lIHtcbiAgICBwYWRkaW5nLXRvcDogdmFyKC0tcGFnZS1tYXJnaW4pO1xuICAgIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWdlLW1hcmdpbik7XG4gICAgZm9udC1mYW1pbHk6ICdIZWx2ZXRpY2FOZXVlJywgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCAnUm9ib3RvJywgJ1NlZ29lIFVJJywgQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDE5cHg7XG4gIH1cbiAgLmdyb3VwLXRhZ3Mge1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKHZhcigtLXBhZ2UtbWFyZ2luKSAvIDMpO1xuICAgXG4gICAgLnRhZ3Mge1xuICAgICAgcGFkZGluZy1yaWdodDogNXB4O1xuXG4gICAgLml0ZW0tcmF0aW5nIHtcbiAgICAgIC8vIERlZmF1bHQgYmFja2dyb3VuZFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSh2YXIoLS1wYWdlLWNvbG9yLXJnYiksIC4zNSk7XG4gICAgICAgICAgICAgIC8vIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHRlc3QpO1xuICAgICAgICAgICAgICAvLyBib3JkZXItcmFkaXVzOiB2YXIoLS1hcHAtbmFycm93LXJhZGl1cyk7XG4gICAgICAgICAgICAgIC8vIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLXBhZ2UtbWFyZ2luKSAvIDEpO1xuICAgICAgICAgICAgICAvL3BhZGRpbmctYm90dG9tOiBjYWxjKHZhcigtLXBhZ2UtbWFyZ2luKSAvIDMpO1xuICAgICAgICAgICAgICAvLyBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tcGFnZS1tYXJnaW4pIC8gMik7XG4gICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IGNhbGModmFyKC0tcGFnZS1tYXJnaW4pIC8gMik7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAmW3JhdGluZ0Jhc2U9XCIwXCJdIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogdmFyKC0tcGFnZS1yYXRpbmctMS1jb2xvcik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgJltyYXRpbmdCYXNlPVwiMVwiXSB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLXBhZ2UtcmF0aW5nLTItY29sb3IpO1xuICAgICAgICAgICAgICB9XG4gICAgfVxuXG4gICAgfVxuICB9XG5cbiAgLmdyb3VwLW1lbWJlci1uYW1lIHtcbiAgICBwYWRkaW5nLWxlZnQ6IHZhcigtLXBhZ2UtbWFyZ2luKTtcbiAgfVxufVxuXG4uZW1wdHktbGlzdCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { GroupPage } from './group.page';\nimport { SharedModule } from '../services/share.module';\nimport { ComponentsModule } from '../components/components.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    ComponentsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GroupPage]\n})\nexport class GroupPageModule {}\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { NavController, ActionSheetController, AlertController,\n  ModalController, PopoverController, IonInfiniteScroll } from '@ionic/angular';\nimport { Contacts } from '@ionic-native/contacts/ngx';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { LoadingService } from '../services/loading.service';\nimport { ImageService } from '../services/image.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport * as firebase from 'firebase';\n\nimport { PopoverPage } from '../popover/popover.page';\nimport { TagModalPage } from '../tag-modal/tag-modal.page';\nimport { ReactionListModalPage } from '../reaction-list-modal/reaction-list-modal.page';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.page.html',\n  styleUrls: ['./group.page.scss'],\n})\nexport class GroupPage implements OnInit {\n\n  @ViewChild('content', null) content: ElementRef;\n  @ViewChild(IonInfiniteScroll, {static: true}) infiniteScroll: IonInfiniteScroll;\n  title: any;\n  groupId: any;\n  message: any;\n  messages: any;\n  updateDateTime: any;\n  subscription: any;\n  messagesToShow: any;\n  startIndex: any = -1;\n  scrollDirection: any = 'bottom';\n  // Set number of messages to show.\n  numberOfMessages = 10;\n  private polls: any = [];\n  private resources: any = [];\n  private events: any = [];\n  private tab: any;\n  private group: any;\n  private user: any;\n  private groupMembers: any;\n  private loggedInUserIsMember: any = 'false';\n  private resourceTags: any = [];\n  private eventTags: any;\n  private alert: any;\n  private loggedInUserId: any;\n  private loggedInUser: any;\n  notifications: any = [];\n\n  private toggled = false;\n  private emojitext: string;\n\n  // posts\n  private posts: any = [];\n  private postsToShow: any;\n  private numberOfPosts = 10;\n\n  // infinite scroll data\n  private firstDataSetPost: any;\n  private lastDataSetPost: any;\n  private maxNoOfPosts: any = 1000;\n  private nextDataSetPost: firebase.firestore.Query;\n\n  private firstDataSetEvent: any;\n  private lastDataSetEvent: any;\n  private maxNoOfEvents: any = 1000;\n  private nextDataSetEvent: firebase.firestore.Query;\n\n\n  private firstDataSetPoll: any;\n  private lastDataSetPoll: any;\n  private maxNoOfPolls: any = 1000;\n  private nextDataSetPoll: firebase.firestore.Query;\n\n\n  private firstDataSetResources: any;\n  private lastDataSetResources: any;\n  private maxNoOfResources: any = 1000;\n  private nextDataSetResources: firebase.firestore.Query;\n\n  // GroupPage\n  // This is the page where the user can chat with other group members and view group info.\n  constructor(\n    public dataProvider: DataService,\n    public navCtrl: NavController,\n    public modalCtrl: ModalController,\n    public firestore: AngularFirestore,\n    public alertCtrl: AlertController,\n    public imageProvider: ImageService,\n    public loadingProvider: LoadingService,\n    public camera: Camera,\n    public keyboard: Keyboard,\n    public actionSheet: ActionSheetController,\n    public contacts: Contacts,\n    public geolocation: Geolocation,\n    private route: ActivatedRoute,\n    private router: Router,\n\n    public popoverCtrl: PopoverController\n  ) {\n    this.loggedInUserId = firebase.auth().currentUser.uid;\n  }\n\n  handleSelection(event) {\n    this.emojitext = this.emojitext + ' ' + event.char;\n  }\n\n  ngOnInit() {\n    this.loadingProvider.show();\n    this.tab = 'posts';\n    this.title = 'Posts';\n\n    this.loggedInUserId = firebase.auth().currentUser.uid;\n    // Get Posts\n    this.dataProvider.getCurrentUser().get().subscribe((user) => {\n      // this.userReactions = user.data().userReactions;\n      // this.userNotifications = user.data().userNotifications;\n      this.loggedInUser = user.data();\n      this.getGroupDetailsandPosts();\n    });\n\n\n    this.loadingProvider.hide();\n  }\n\n  ionViewDidEnter() { }\n\n  // Update messagesRead when user lefts this page.\n  ionViewWillLeave() {\n    if (this.messages) {\n      this.setMessagesRead(this.messages);\n    }\n  }\n\n  // Check if currentPage is active, then update user's messagesRead.\n  setMessagesRead(messages) {\n    // if (this.navCtrl.getActive().instance instanceof GroupPage) {\n    // Update user's messagesRead on database.\n    this.firestore.doc('/accounts/' + firebase.auth().currentUser.uid + '/groups/' + this.groupId).update({\n      messagesRead: this.messages.length\n    });\n    // }\n  }\n\n  // Check if 'return' button is pressed and send the message.\n  onType(keyCode) {\n    if (keyCode == 13) {\n      // this.keyboard.close();\n      // this.send();\n    }\n  }\n\n  // Scroll to bottom of page after a short delay.\n  scrollBottom() {\n    const that = this;\n    setTimeout(function() {\n      that.content.nativeElement.scrollBottom = that.content.nativeElement.scrollHeight;\n    }, 300);\n  }\n\n  // Scroll to top of the page after a short delay.\n  scrollTop() {\n    const that = this;\n    setTimeout(function() {\n      that.content.nativeElement.scrollTop = that.content.nativeElement.scrollHeight;\n    }, 300);\n  }\n\n  // Scroll depending on the direction.\n  doScroll() {\n    if (this.scrollDirection === 'bottom') {\n      this.scrollBottom();\n    } else if (this.scrollDirection === 'top') {\n      this.scrollTop();\n    }\n  }\n\n  // Check if the user is the sender of the message.\n  isSender(message) {\n    if (message.sender === firebase.auth().currentUser.uid) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Check if the message is a system message.\n  isSystemMessage(message) {\n    if (message.type === 'system') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // View user info\n  viewUser(userId) {\n    this.router.navigateByUrl('/userinfo/' + userId);\n  }\n\n  // Send text message to the group.\n  send(type) {\n    // Clone an instance of messages object so it will not directly be updated.\n    // The messages object should be updated by our observer declared on ionViewDidLoad.\n    const messages = JSON.parse(JSON.stringify(this.messages));\n\n    messages.push({\n      date: new Date().toString(),\n      sender: firebase.auth().currentUser.uid,\n      // tslint:disable-next-line: object-literal-shorthand\n      type: type,\n      message: this.message\n    });\n\n    // Update group messages.\n    this.dataProvider.getGroup(this.groupId).update({\n      // tslint:disable-next-line: object-literal-shorthand\n      messages: messages\n    });\n    // Clear messagebox.\n    this.message = '';\n  }\n\n  // Enlarge image messages.\n  enlargeImage(img) {\n    // let imageModal = this.modalCtrl.create(\"ImageModalPage\", { img: img });\n    // imageModal.present();\n  }\n\n  attach() {\n    const action = this.actionSheet.create({\n      header: 'Choose attachments',\n      buttons: [{\n        text: 'Camera',\n        handler: () => {\n          this.imageProvider.uploadGroupPhotoMessage(this.groupId, this.camera.PictureSourceType.CAMERA).then((url) => {\n            // Process image message.\n            this.sendPhotoMessage(url);\n          });\n        }\n      }, {\n        text: 'Photo Library',\n        handler: () => {\n          this.imageProvider.uploadGroupPhotoMessage(this.groupId, this.camera.PictureSourceType.PHOTOLIBRARY).then((url) => {\n            // Process image message.\n            this.sendPhotoMessage(url);\n          });\n        }\n      }, {\n        text: 'Video',\n        handler: () => {\n          this.imageProvider.uploadGroupVideoMessage(this.groupId).then(url => {\n            this.sendVideoMessage(url);\n          });\n        }\n      }, {\n        text: 'Location',\n        handler: () => {\n          this.geolocation.getCurrentPosition({\n            timeout: 2000\n          }).then(res => {\n            const locationMessage = 'current location: lat:' + res.coords.latitude + ' lng:' + res.coords.longitude;\n            const mapUrl = '<a href=\\'https://www.google.com/maps/search/' + res.coords.latitude + ',' + res.coords.longitude + '\\'>View on Map</a>';\n            const confirm = this.alertCtrl.create({\n              header: 'Your Location',\n              message: locationMessage,\n              buttons: [{\n                text: 'cancel',\n                handler: () => {\n                }\n              }, {\n                text: 'Share',\n                handler: () => {\n                  this.message = locationMessage + '<br>' + mapUrl;\n                  this.send('location');\n                }\n              }]\n            }).then(r => r.present());\n          }, locationErr => {\n          });\n        }\n      }, {\n        text: 'Contact',\n        handler: () => {\n          this.contacts.pickContact().then(data => {\n            this.message = '<b>Name:</b> ' + data.displayName + '<br><b>Mobile:</b> <a href=\\'tel:' + data.phoneNumbers[0].value + '\\'>' + data.phoneNumbers[0].value + '</a>';\n            this.send('contact');\n          }, err => {\n          });\n        }\n      }, {\n        text: 'cancel',\n        role: 'cancel',\n        handler: () => {\n        }\n      }]\n    }).then(r => r.present());\n  }\n\n  takePhoto() {\n    this.imageProvider.uploadGroupPhotoMessage(this.groupId, this.camera.PictureSourceType.CAMERA).then((url) => {\n      // Process image message.\n      this.sendPhotoMessage(url);\n    });\n  }\n\n  // Process photoMessage on database.\n  sendPhotoMessage(url) {\n    const messages = JSON.parse(JSON.stringify(this.messages));\n    messages.push({\n      date: new Date().toString(),\n      sender: firebase.auth().currentUser.uid,\n      type: 'image',\n      url\n    });\n    this.dataProvider.getGroup(this.groupId).update({\n      messages\n    });\n    this.message = '';\n  }\n\n  sendVideoMessage(url) {\n    const messages = JSON.parse(JSON.stringify(this.messages));\n    messages.push({\n      date: new Date().toString(),\n      sender: firebase.auth().currentUser.uid,\n      type: 'video',\n      url\n    });\n    this.dataProvider.getGroup(this.groupId).update({\n      messages\n    });\n    this.message = '';\n  }\n\n  // View group info.\n  groupInfo() {\n    this.router.navigateByUrl('/groupinfo/' + this.groupId);\n  }\n\n  // Controller Functions\n  onPress($event) {\n  }\n\n  onPressUp(event, message) {\n    this.presentPopover(event, message);\n  }\n\n  async joinGroup() {\n    this.alert = this.alertCtrl.create({\n      header: 'Join Group',\n      message: 'Are you sure you want to join this group?',\n      buttons: [\n        {\n          text: 'Cancel'\n        },\n        {\n          text: 'Join',\n          handler: data => {\n            // Proceed\n            this.loadingProvider.show();\n\n            // Add groupInfo to each friend added to the group.\n            this.firestore.doc('/accounts/' + firebase.auth().currentUser.uid + '/groups/' + this.groupId).update({\n              messagesRead: 0\n            });\n            // Add friend as members of the group.\n            this.group.members.push(firebase.auth().currentUser.uid);\n            // Add system message that the members are added to the group.\n            this.group.messages.push({\n              date: new Date().toString(),\n              sender: firebase.auth().currentUser.uid,\n              type: 'system',\n              message: this.user.name + ' has joined the group.',\n              icon: 'md-contacts'\n            });\n\n            // Update group data on the database.\n            this.dataProvider.getGroup(this.groupId).update({\n              members: this.group.members,\n              messages: this.group.messages\n            }).then(() => {\n              // Back.\n              this.loadingProvider.hide();\n              this.navCtrl.back();\n            });\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n  async presentPopover(myEvent: any, message) {\n    let ev: any;\n    ev = {\n      target: {\n        getBoundingClientRect: () => {\n          return {\n            top: myEvent.center.y,\n            left: myEvent.center.x\n          };\n        }\n      }\n    };\n    const popover = await this.popoverCtrl.create({\n      component: PopoverPage,\n      componentProps: { message, groupId: this.groupId },\n      event: ev,\n      translucent: true\n    });\n    return await popover.present();\n  }\n\n  getGroupDetailsandMessages() {\n    // Get group details\n\n    this.groupId = this.route.snapshot.params.id;\n    this.subscription = this.dataProvider.getGroup(this.groupId).snapshotChanges().subscribe((group: any) => {\n      this.group = group.payload.data();\n      this.title = group.payload.data().name;\n\n        // Get Group Members\n      if (this.group.members) {\n          this.group.members.forEach((memberId) => {\n            this.dataProvider.getUser(memberId).snapshotChanges().subscribe((member: any) => {\n              if (member.key != null) {\n                member = { $key: member.key, ...member.payload.data() };\n                this.addUpdateOrRemoveMember(member);\n              }\n            });\n          });\n        }\n\n        // Get group messages\n      this.dataProvider.getGroupMessages(this.groupId).snapshotChanges().subscribe((messagesRes: any) => {\n          let messages = messagesRes.payload.data();\n          if (messages == null || messages == undefined) { messages = []; }\n\n          if (this.messages != null && this.messages != undefined) {\n            // Just append newly added messages to the bottom of the view.\n\n            if (messages.length > this.messages.length) {\n              const message = messages[messages.length - 1];\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                message.avatar = user.payload.data().img;\n              });\n              this.messages.push(message);\n              // Also append to messagesToShow.\n              this.messagesToShow.push(message);\n              // Reset scrollDirection to bottom.\n              this.scrollDirection = 'bottom';\n            }\n          } else {\n            // Get all messages, this will be used as reference object for messagesToShow.\n            this.messages = [];\n            messages.forEach((message) => {\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                if (user.key != null) {\n                  message.avatar = user.payload.data().img;\n                }\n              });\n              this.messages.push(message);\n            });\n            // Load messages in relation to numOfMessages.\n            if (this.startIndex === -1) {\n              // Get initial index for numberOfMessages to show.\n              if ((this.messages.length - this.numberOfMessages) > 0) {\n                this.startIndex = this.messages.length - this.numberOfMessages;\n              } else {\n                this.startIndex = 0;\n              }\n            }\n            if (!this.messagesToShow) {\n              this.messagesToShow = [];\n            }\n            // Set messagesToShow\n            for (let i = this.startIndex; i < this.messages.length; i++) {\n              this.messagesToShow.push(this.messages[i]);\n            }\n            this.loadingProvider.hide();\n          }\n        });\n\n      this.dataProvider.getGroupMembers(this.groupId).snapshotChanges().subscribe((memberIdsRes: any) => {\n          const memberIds = memberIdsRes.payload.data();\n          if (memberIds.includes(firebase.auth().currentUser.uid)) {\n            this.loggedInUserIsMember = true;\n          } else {\n            this.loggedInUserIsMember = false;\n          }\n\n        });\n\n    });\n\n    // Update messages' date time elapsed every minute based on Moment.js.\n    const that = this;\n    if (!that.updateDateTime) {\n      that.updateDateTime = setInterval(() => {\n        if (that.messages) {\n          that.messages.forEach((message) => {\n            const date = message.date;\n            message.date = new Date(date);\n          });\n        }\n      }, 60000);\n    }\n  }\n\n  getGroupDetailsandPosts() {\n    // Get group details\n    this.posts = [];\n    this.groupId = this.route.snapshot.params.id;\n    this.subscription = this.dataProvider.getGroup(this.groupId).snapshotChanges().subscribe((group: any) => {\n\n    this.group = group.payload.data();\n    this.title = group.payload.data().name;\n\n    // Get Group Members\n    if (this.group.members) {\n      this.group.members.forEach((memberId) => {\n        this.dataProvider.getUser(memberId).snapshotChanges().subscribe((member: any) => {\n          if (member.payload.exists) {\n            member = { $key: member.payload.id, ...member.payload.data() };\n            this.addUpdateOrRemoveMember(member);\n          }\n        });\n      });\n    }\n\n        // Get group posts\n    this.firstDataSetPost = this.firestore.collection('posts').ref\n        .where('groupId', '==', this.groupId)\n        .where('type', '==', 'general')\n        .orderBy('date', 'desc')\n        .limit(5);\n\n    this.firstDataSetPost.onSnapshot((po) => {\n      this.lastDataSetPost = po.docs[po.docs.length - 1];\n      this.posts = [];\n      this.loadEachPostData(po);\n      });\n    });\n\n    // Update messages' date time elapsed every minute based on Moment.js.\n    const that = this;\n    if (!that.updateDateTime) {\n      that.updateDateTime = setInterval(() => {\n        if (that.posts) {\n          that.posts.forEach((post) => {\n            const date = post.date;\n            post.date = new Date(date);\n          });\n        }\n      }, 60000);\n    }\n  }\n\n  loadEachPostData(po: any) {\n    po.forEach((p) => {\n      let post: any;\n      post = p.data();\n      post.key = p.id;\n      const startDate = new Date(post.date);\n    // Do your operations\n      const endDate   = new Date();\n      const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n      if (seconds > 120) {\n      post.showNewIcon = false;\n    } else {\n      post.showNewIcon = true;\n    }\n      // get reactions list\n      this.firestore.collection('posts').doc(post.key).collection('reactions').snapshotChanges().subscribe((reactions: any) => {\n        post.reactions = [];\n        reactions.forEach(element => {\n        let reaction = element.payload.doc.data();\n        reaction.key = element.payload.doc.id;\n        post.reactions.push(reaction);\n      });\n\n        // Check for Thanks\n        if (reactions.length > 0) {\n        let foundSmiley = false;\n        if (post.reactions !== undefined) {\n            let r = post.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId());\n            foundSmiley = r.reactionType.some(r => r === 'Thanks');\n          }\n        if (foundSmiley) {\n            post.showSmiley = true;\n          } else {\n            post.showSmiley = false;\n          }\n          // Check for Hugs\n        let foundHug = false;\n        if (post.reactions !== undefined) {\n            let r = post.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId())\n            foundHug = r.reactionType.some(r => r === 'Hug');\n          }\n        if (foundHug) {\n            post.showHug = true;\n          } else {\n            post.showHug = false;\n          }\n      }\n     });\n      post.postTags = post.postTags.filter(x => x.isChecked !== false);\n      this.addOrUpdatePost(post);\n    });\n  }\n\n  addUpdateOrRemoveMember(member) {\n    if (this.group) {\n      if (this.group.members.indexOf(member.$key) > -1) {\n        // User exists in the group.\n        if (!this.groupMembers) {\n          this.groupMembers = [member];\n        } else {\n          let index = -1;\n          for (let i = 0; i < this.groupMembers.length; i++) {\n            if (this.groupMembers[i].$key === member.$key) {\n              index = i;\n            }\n          }\n          // Add/Update User.\n          if (index > -1) {\n            this.groupMembers[index] = member;\n          } else {\n            this.groupMembers.push(member);\n          }\n        }\n      } else {\n        // User already left the group, remove member from list.\n        let index1 = -1;\n        for (let j = 0; j < this.groupMembers.length; j++) {\n          if (this.groupMembers[j].$key === member.$key) {\n            index1 = j;\n          }\n        }\n        if (index1 > -1) {\n          this.groupMembers.splice(index1, 1);\n        }\n      }\n    }\n  }\n\n  segmentChanged($event) {\n    if (this.tab === 'groups') {\n      this.title = this.group.name; this.getGroupDetailsandMessages();\n    } else if (this.tab === 'posts') {\n      this.title = this.group.name; this.getGroupDetailsandPosts();\n    } else if (this.tab === 'polls') {\n      this.title = this.group.name; this.getPolls();\n    } else if (this.tab === 'resources') {\n      this.title = this.group.name; this.getResources();\n    } else if (this.tab === 'events') {\n      this.title = this.group.name; this.getEvents();\n    } else if (this.tab === 'groupInfo') {\n      this.title = this.group.name;\n    }\n  }\n\n  getPolls() {\n        // Get group posts\n    this.firstDataSetPoll = this.firestore.collection('posts').ref\n                              .where('groupId', '==', this.groupId)\n                              .where('type', '==', 'poll')\n                              .orderBy('date', 'desc')\n                              .limit(5);\n    // Get group posts\n    this.firstDataSetPoll\n    .onSnapshot((po) => {\n      this.lastDataSetPoll = po.docs[po.docs.length - 1];\n      this.polls = [];\n      this.loadEachPollData(po);\n      });\n  }\n\n  loadEachPollData(po: any) {\n    po.forEach((p) => {\n      let post: any;\n      post = p.data();\n      post.key = p.id;\n      const startDate = new Date(post.date);\n    // Do your operations\n      const endDate   = new Date();\n      const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n      if (seconds > 120) {\n      post.showNewIcon = false;\n    } else {\n      post.showNewIcon = true;\n    }\n      post.postTags = post.postTags.filter(x => x.isChecked !== false);\n      this.addOrUpdatePoll(post);\n    });\n  }\n\n  viewPoll(poll) {\n    this.router.navigateByUrl('post/' + poll.key);\n  }\n\n  viewResource(resource) {\n    this.router.navigateByUrl('post/' + resource.key);\n  }\n\n  viewPost(post) {\n    this.router.navigateByUrl('post/' + post.key);\n\n  }\n\n  viewEvent(event) {\n    this.router.navigateByUrl('post/' + event.key);\n  }\n\n  newPoll() {\n    this.router.navigateByUrl('/new-poll/' + this.groupId);\n  }\n\n  newPost() {\n    this.router.navigateByUrl('/new-post/' + this.groupId);\n  }\n\n  newResource() {\n    this.router.navigateByUrl('/new-resource/' + this.groupId);\n  }\n\n  newEvent() {\n    this.router.navigateByUrl('/new-event/' + this.groupId);\n  }\n\n  getResources() {\n    // Get group posts\n    this.firstDataSetResources = this.firestore.collection('posts').ref\n    .where('groupId', '==', this.groupId)\n    .where('type', '==', 'resource')\n    .orderBy('date', 'desc')\n    .limit(5);\n    // Get group posts\n    this.firstDataSetResources\n        .onSnapshot((po) => {\n    this.lastDataSetResources = po.docs[po.docs.length - 1];\n    this.resources = [];\n    this.loadEachResourceData(po);\n    });\n  }\n\n  loadEachResourceData(po: any) {\n    po.forEach((p) => {\n      let post: any;\n      post = p.data();\n      post.key = p.id;\n      const startDate = new Date(post.date);\n    // Do your operations\n      const endDate   = new Date();\n      const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n      if (seconds > 120) {\n      post.showNewIcon = false;\n    } else {\n      post.showNewIcon = true;\n    }\n      // get reactions list\n      this.firestore.collection('posts').doc(post.key).collection('reactions').snapshotChanges().subscribe((reactions: any) => {\n        post.reactions = [];\n        reactions.forEach(element => {\n        let reaction = element.payload.doc.data();\n        reaction.key = element.payload.doc.id;\n        post.reactions.push(reaction);\n      });\n\n        // Check for Thanks\n        if (reactions) {\n        let foundSmiley = false;\n        if (post.reactions !== undefined) {\n            foundSmiley = post.reactions.some(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId() \n                                          && el.reactionType === 'Thanks');\n          }\n        if (foundSmiley) {\n            post.showSmiley = true;\n          } else {\n            post.showSmiley = false;\n          }\n        // Check for Bookmark\n        let foundBookmark = false;\n        if (post.reactions !== undefined) {\n          foundBookmark = post.reactions.some(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId() \n                                        && el.reactionType === 'Bookmark');\n          }\n        if (foundBookmark) {\n            post.showBookmark = true;\n          } else {\n            post.showBookmark = false;\n          }\n      }\n      });\n      post.postTags = post.postTags.filter(x => x.isChecked !== false);\n      this.addOrUpdateResource(post);\n    });\n  }\n\n  getEvents() {\n    // Get group posts\n    this.firstDataSetEvent = this.firestore.collection('posts').ref\n    .where('groupId', '==', this.groupId)\n    .where('type', '==', 'event')\n    .orderBy('date', 'desc')\n    .limit(5);\n    // Get group posts\n    this.firstDataSetEvent\n        .onSnapshot((po) => {\n    this.lastDataSetEvent = po.docs[po.docs.length - 1];\n    this.events = [];\n    this.loadEachEventData(po);\n    });\n  }\n\n  loadEachEventData(po: any) {\n    po.forEach((p) => {\n      let post: any;\n      post = p.data();\n      post.key = p.id;\n      const startDate = new Date(post.date);\n    // Do your operations\n      const endDate   = new Date();\n      const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n      if (seconds > 120) {\n      post.showNewIcon = false;\n    } else {\n      post.showNewIcon = true;\n    }\n      // get reactions list\n      this.firestore.collection('posts').doc(post.key).collection('reactions').snapshotChanges().subscribe((reactions: any) => {\n        post.reactions = [];\n        reactions.forEach(element => {\n        let reaction = element.payload.doc.data();\n        reaction.key = element.payload.doc.id;\n        post.reactions.push(reaction);\n      });\n\n        // Check for Thanks\n        if (reactions) {\n        let foundSmiley = false;\n        if (post.reactions !== undefined) {\n            foundSmiley = post.reactions.some(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId() \n                                          && el.reactionType === 'Thanks');\n          }\n        if (foundSmiley) {\n            post.showSmiley = true;\n          } else {\n            post.showSmiley = false;\n          }\n         // Check for Checkin\n        let foundCheckin = false;\n        if (post.reactions !== undefined) {\n          foundCheckin = post.reactions.some(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId() \n                                        && el.reactionType === 'Checkin');\n          }\n        if (foundCheckin) {\n            post.showCheckin = true;\n          } else {\n            post.showCheckin = false;\n          }\n\n      }\n      });\n      post.postTags = post.postTags.filter(x => x.isChecked !== false);\n      this.addOrUpdateEvent(post);\n    });\n  }\n\n  addOrUpdatePoll(poll) {\n    let totalPollCount = 0;\n    // Add total poll count\n    if (poll.pollOptions) {\n      poll.pollOptions.forEach(element => {\n        if (element.members !== undefined) {\n        totalPollCount = totalPollCount + element.members.length;\n        }\n      });\n    }\n    poll.totalPollCount = totalPollCount;\n\n    // Add NEW Icon\n    const startDate = new Date(poll.dateCreated);\n    const endDate   = new Date();\n    const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n\n    if (seconds > 120) {\n      poll.showNewIcon = false;\n    } else {\n      poll.showNewIcon = true;\n    }\n\n    if (!this.polls) {\n      this.polls = [poll];\n    } else {\n      let index = -1;\n      for (let i = 0; i < this.polls.length; i++) {\n        if (this.polls[i].key == poll.key) {\n          index = i;\n        }\n      }\n      if (index > -1) {\n        this.polls[index] = poll;\n      } else {\n        this.polls.push(poll);\n      }\n    }\n  }\n\n  addOrUpdateResource(resource) {\n    // Add NEW Icon\n    const startDate = new Date(resource.dateCreated);\n    const endDate   = new Date();\n    const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n\n    if (seconds > 120) {\n      resource.showNewIcon = false;\n    } else {\n      resource.showNewIcon = true;\n    }\n\n    if (!this.resources) {\n      this.resources = [resource];\n    } else {\n      let index = -1;\n      for (let i = 0; i < this.resources.length; i++) {\n        if (this.resources[i].key == resource.key) {\n          index = i;\n        }\n      }\n      if (index > -1) {\n        this.resources[index] = resource;\n      } else {\n        this.resources.push(resource);\n      }\n    }\n  }\n\n  addOrUpdatePost(post) {\n    if (!this.posts) {\n      this.posts = [post];\n    } else {\n      let index = -1;\n      for (let i = 0; i < this.posts.length; i++) {\n        if (this.posts[i].key == post.key) {\n          index = i;\n        }\n      }\n      if (index > -1) {\n        this.posts[index] = post;\n      } else {\n        this.posts.push(post);\n      }\n    }\n\n  }\n\n  addOrUpdateEvent(event) {\n    // Add NEW Icon\n    const startDate = new Date(event.dateCreated);\n    const endDate   = new Date();\n    const seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n\n    if (seconds > 120) {\n      event.showNewIcon = false;\n    } else {\n      event.showNewIcon = true;\n    }\n\n    if (!this.events) {\n      this.events = [event];\n    } else {\n      let index = -1;\n      for (let i = 0; i < this.events.length; i++) {\n        if (this.events[i].key === event.key) {\n          index = i;\n        }\n      }\n      if (index > -1) {\n        this.events[index] = event;\n      } else {\n        this.events.push(event);\n      }\n    }\n  }\n\n  showGroupOptions() {\n  const action = this.actionSheet.create({\n    header: 'Create a new ...',\n    backdropDismiss: true,\n    mode: 'md',\n    cssClass: 'GroupAction',\n    buttons: [{\n      text: 'Post',\n      icon: 'chatbubbles',\n      handler: () => {\n        this.newPost();\n      }\n    }, {\n      text: 'Resource',\n      icon: 'document',\n      handler: () => {\n        this.newResource();\n      }\n    }, {\n      text: 'Poll',\n      icon: 'podium',\n      handler: () => {\n        this.newPoll();\n      }\n    }, {\n      text: 'Event',\n      icon: 'calendar',\n      cssClass: 'cancelAction',\n      handler: () => {\n        this.newEvent();\n      }\n    }]\n  }).then(r => r.present());\n  }\n\n  submitReactionPost(post, reactionType) {\n    switch (reactionType) {\n      case 'Thanks': {\n        if (!post.showSmiley) {\n          this.addPostReaction(post, reactionType);\n          post.showSmiley = true;\n          post.totalReactionCount += 1;\n        } else {\n          this.removePostReaction(post, reactionType);\n          post.showSmiley = false;\n          post.totalReactionCount -= 1;\n        }\n        break;\n      }\n\n      case 'Hug': {\n        if (!post.showHug) {\n          this.addPostReaction(post, reactionType);\n          post.showHug = true;\n          post.totalReactionCount += 1;\n        } else {\n          this.removePostReaction(post, reactionType);\n          post.showHug = false;\n          post.totalReactionCount -= 1;\n        }\n        break;\n      }\n\n      case 'Checkin': {\n        if (!post.showCheckin) {\n          this.addPostReaction(post, reactionType);\n          post.showCheckin = true;\n          post.totalReactionCount += 1;\n        } else {\n          this.removePostReaction(post, reactionType);\n          post.showCheckin = false;\n          post.totalReactionCount -= 1;\n        }\n        break;\n      }\n\n      case 'Bookmark': {\n        if (!post.showBookmark) {\n          this.addPostReaction(post, reactionType);\n          post.showBookmark = true;\n          post.totalReactionCount += 1;\n        } else {\n          this.removePostReaction(post, reactionType);\n          post.showBookmark = false;\n          post.totalReactionCount -= 1;\n        }\n        break;\n      }\n    }\n  }\n\n  addPostReaction(post, reactionType) {\n    // first find the post in the collection\n    let postIndex: any;\n    let p: any;\n    if (post.type === 'general') {\n      postIndex = this.posts.findIndex(el => el.key ===  post.key);\n      p = this.posts[postIndex];\n    } else if (post.type === 'event') {\n      postIndex = this.events.findIndex(el => el.key ===  post.key);\n      p = this.events[postIndex];\n    } else if (post.type === 'poll') {\n      postIndex = this.polls.findIndex(el => el.key ===  post.key);\n      p = this.polls[postIndex];\n    } else if (post.type === 'resource') {\n      postIndex = this.resources.findIndex(el => el.key ===  post.key);\n      p = this.resources[postIndex];\n    }\n    const r = p.reactions.find(el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId());\n\n    if (!r) {\n      const react = {\n        dateCreated: new Date(),\n        addedByUser: {\n                      addedByKey: this.dataProvider.getCurrentUserId(),\n                      addedByUsername: this.loggedInUser.username,\n                      addedByImg: this.loggedInUser.img\n                    },\n        reactionType: [reactionType]\n      };\n\n      this.dataProvider.addPostReactions(post.key, react).then(() => {\n        // // Update user notifications.\n        // if (!this.userNotifications.some(p => p !== this.postId)) {\n        //   this.userNotifications.push(this.postId);\n        //   this.dataProvider.getUser(this.loggedInUserId).update({\n        //     userNotifications: this.userNotifications\n        //   });\n        // }\n\n        // // Update user activity.\n        // if (!this.userReactions && this.userReactions.some(p => p !== this.postId)) {\n        //   this.userReactions.push(this.postId);\n        //   this.dataProvider.getUser(this.loggedInUserId).update({\n        //     userReactions: this.userReactions\n        //   });\n        // }\n      });\n    } else {\n      this.firestore.collection('posts').doc(post.key).collection('reactions').doc(r.key).update({\n        reactionType: firebase.firestore.FieldValue.arrayUnion(reactionType)\n    }).then(() => {\n      const increment = firebase.firestore.FieldValue.increment(1);\n      this.firestore.collection('posts').doc(post.key).update({\n        totalReactionCount : increment\n      });\n    });\n    }\n  }\n\n  removePostReaction(post, reactionType) {\n    let postIndex: any;\n    let p: any;\n    if (post.type === 'general') {\n      postIndex = this.posts.findIndex(el => el.key ===  post.key);\n      p = this.posts[postIndex];\n    } else if (post.type === 'event') {\n      postIndex = this.events.findIndex(el => el.key ===  post.key);\n      p = this.events[postIndex];\n    } else if (post.type === 'poll') {\n      postIndex = this.polls.findIndex(el => el.key ===  post.key);\n      p = this.polls[postIndex];\n    } else if (post.type === 'resource') {\n      postIndex = this.resources.findIndex(el => el.key ===  post.key);\n      p = this.resources[postIndex];\n    }\n\n    const found = false;\n    if (p.reactions !== undefined) {\n      const values = Object.keys(p.reactions).map( function(e) {\n        return p.reactions[e];\n      });\n\n      const reaction = p.reactions.find(\n        el => el.addedByUser.addedByKey === this.dataProvider.getCurrentUserId());\n\n      if (reaction.reactionType.length === 1 \n        && reaction.reactionType.some(e => e === reactionType)) {\n        this.dataProvider.removePostReaction(post.key, reaction.key);\n      } else {\n        // reaction.reactionType = reaction.reactionType.filter(x => x !== reactionType);\n        // this.dataProvider.updatePostReactions(post.key, reaction, true);\n        this.firestore.collection('posts').doc(post.key).collection('reactions').doc(reaction.key).update({\n          reactionType: firebase.firestore.FieldValue.arrayRemove(reactionType)\n      }).then(() => {\n        const increment = firebase.firestore.FieldValue.increment(-1);\n        this.firestore.collection('posts').doc(post.key).update({\n          totalReactionCount : increment\n        });\n      });\n      }\n    }\n  }\n\n  async showReactionsList(post) {\n    if (post.totalReactionCount === 0) {\n      return;\n    }\n  // first find the post in the collection\n    let postIndex: any;\n    let p: any;\n    if (post.type === 'general') {\n      postIndex = this.posts.findIndex(el => el.key ===  post.key);\n      p = this.posts[postIndex];\n    } else if (post.type === 'event') {\n      postIndex = this.events.findIndex(el => el.key ===  post.key);\n      p = this.events[postIndex];\n    } else if (post.type === 'poll') {\n      postIndex = this.polls.findIndex(el => el.key ===  post.key);\n      p = this.polls[postIndex];\n    } else if (post.type === 'resource') {\n      postIndex = this.resources.findIndex(el => el.key ===  post.key);\n      p = this.resources[postIndex];\n    }\n\n    const modal = await this.modalCtrl.create({\n      component: ReactionListModalPage,\n      componentProps: {\n        reactions: p.reactions\n      }\n    });\n    return await modal.present();\n  }\n\n  showPostOptions(post) {\n    const action = this.actionSheet.create({\n      header: 'Post options',\n      backdropDismiss: true,\n      mode: 'md',\n      cssClass: 'GroupAction',\n      buttons: this.createPostOptionButtons(post)\n    }).then(r => r.present());\n  }\n\n  followPost(post) {\n    if (!this.notifications) {\n      this.notifications = [post.key];\n    } else {\n      this.notifications.push(post.key);\n    }\n\n    this.dataProvider.getUser(this.loggedInUserId).update({\n      notifications: this.notifications\n    }).then(() => {\n      this.loadingProvider.showToast('You will be notified when there are new replies');\n    });\n  }\n\n  unFollowPost(post) {\n    const index = this.notifications.indexOf(post.key, 0);\n    if (index > -1) {\n      this.notifications.splice(index, 1);\n    }\n\n    this.dataProvider.getUser(this.loggedInUserId).update({\n      notifications: this.notifications\n    }).then(() => {\n      this.loadingProvider.showToast('You won\\'t get notifications for this post');\n    });\n  }\n\n  reportPost(post) {\n    this.dataProvider.addReports(this.loggedInUserId, post).then(() => {\n      this.loadingProvider.showToast('Thank you for reporting the post.');\n    });\n  }\n\n  deletePost(post) {\n    this.alertCtrl.create({\n      header: 'Delete Post',\n      message: 'Are you sure you want to delete this post?',\n      buttons: [\n        {\n          text: 'Cancel'\n        },\n        {\n          text: 'Yes',\n          handler: data => {\n            this.firestore.doc('posts/' + post.key).delete();\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n  createPostOptionButtons(post) {\n    let buttons = [];\n    \n    let cancelButton = {\n      text: 'Cancel',\n      icon: 'close',\n      role: 'cancel',\n      handler: () => {\n      }\n    };\n\n    let reportButton = {\n      text: 'Report Post',\n      icon: 'flag-outline',\n      handler: () => {\n        this.reportPost(post);\n      }\n      };\n    let notificationButton = {};\n\n    if (post.addedByUser.addedByKey === this.loggedInUserId) {\n      const deletePostButton = {\n        text: 'Delete Post',\n        icon: 'trash-outline',\n        cssClass: 'actionicon',\n        handler: () => {\n          this.deletePost(post);\n        }\n      };\n      buttons.push(deletePostButton);\n    } else {\n      if (this.notifications && this.notifications.some(el => el === post.key)) {\n        notificationButton = {\n            text: 'Turn Off Notifications',\n            icon: 'notifications-off-outline',\n            cssClass: 'actionicon',\n            handler: () => {\n              this.unFollowPost(post);\n            }\n          };\n      } else {\n        notificationButton = {\n          text: 'Turn On Notifications',\n          icon: 'notifications-outline',\n          cssClass: 'actionicon',\n          handler: () => {\n            this.followPost(post);\n          }\n        };\n      }\n      buttons.push(notificationButton);\n  }\n    buttons.push(reportButton);\n    buttons.push(cancelButton);\n    return buttons;\n  }\n\n  loadDataPosts(event) {\n    if ( this.posts.length > this.maxNoOfPosts ) {\n      event.target.disabled = true;\n    } else {\n      if (this.lastDataSetPost) {\n      this.nextDataSetPost = this.firestore.collection('posts').ref\n                          .where('groupId', '==', this.groupId)\n                          .where('type', '==', 'general')\n                          .orderBy('date', 'desc')\n                          .startAfter(this.lastDataSetPost).limit(5);\n      this.nextDataSetPost.onSnapshot((po: any) => {\n      this.lastDataSetPost = po.docs[po.docs.length - 1];\n      if (po.docs.length > 0) {\n        this.loadEachPostData(po);\n      }\n      event.target.complete();\n        });\n      } else {\n        event.target.complete();\n      }\n    }\n  }\n\n  loadDataPolls(event) {\n    if ( this.polls.length > this.maxNoOfPolls ) {\n      event.target.disabled = true;\n    } else {\n      if (this.lastDataSetPoll) {\n      this.nextDataSetPoll = this.firestore.collection('posts').ref\n                          .where('groupId', '==', this.groupId)\n                          .where('type', '==', 'poll')\n                          .orderBy('date', 'desc')\n                          .startAfter(this.lastDataSetPoll).limit(5);\n      this.nextDataSetPoll.onSnapshot((po: any) => {\n      this.lastDataSetPoll = po.docs[po.docs.length - 1];\n      if (po.docs.length > 0) {\n        this.loadEachPollData(po);\n      }\n      event.target.complete();\n        });\n      } else {\n        event.target.complete();\n      }\n    }\n  }\n\n  loadDataEvents(event) {\n    if ( this.events.length > this.maxNoOfEvents ) {\n      event.target.disabled = true;\n    } else {\n      if (this.lastDataSetEvent) {\n      this.nextDataSetEvent = this.firestore.collection('posts').ref\n                          .where('groupId', '==', this.groupId)\n                          .where('type', '==', 'event')\n                          .orderBy('date', 'desc')\n                          .startAfter(this.lastDataSetEvent).limit(5);\n      this.nextDataSetEvent.onSnapshot((po: any) => {\n      this.lastDataSetEvent = po.docs[po.docs.length - 1];\n      if (po.docs.length > 0) {\n        this.loadEachEventData(po);\n      }\n      event.target.complete();\n        });\n      } else {\n        event.target.complete();\n      }\n    }\n  }\n\n  loadDataResources(event) {\n    if ( this.events.length > this.maxNoOfResources ) {\n      event.target.disabled = true;\n    } else {\n      if (this.lastDataSetResources) {\n      this.nextDataSetResources = this.firestore.collection('posts').ref\n                          .where('groupId', '==', this.groupId)\n                          .where('type', '==', 'resource')\n                          .orderBy('date', 'desc')\n                          .startAfter(this.lastDataSetResources).limit(5);\n      this.nextDataSetResources.onSnapshot((po: any) => {\n      this.lastDataSetResources = po.docs[po.docs.length - 1];\n      if (po.docs.length > 0) {\n        this.loadEachResourceData(po);\n      }\n      event.target.complete();\n        });\n      } else {\n        event.target.complete();\n      }\n    }\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title (click)=\\\"groupInfo()\\\">{{title}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\"> \\n      <ion-button *ngIf=\\\"loggedInUserIsMember == true\\\" (click)=\\\"showGroupOptions()\\\" ><ion-icon name=\\\"ellipsis-vertical\\\"></ion-icon></ion-button>\\n   <ion-button *ngIf=\\\"loggedInUserIsMember == false\\\" (click)=\\\"joinGroup()\\\" >Join Group</ion-button>\\n    <ion-button *ngIf=\\\"loggedInUserIsMember == true && tab=='posts'\\\" (click)=\\\"newPost()\\\" ><ion-icon name=\\\"add-circle-outline\\\"></ion-icon></ion-button>\\n    <ion-button *ngIf=\\\"loggedInUserIsMember == true && tab=='polls'\\\" (click)=\\\"newPoll()\\\" ><ion-icon name=\\\"add-circle-outline\\\"></ion-icon></ion-button>\\n\\t\\t<ion-button *ngIf=\\\"loggedInUserIsMember == true && tab=='resources'\\\" (click)=\\\"newResource()\\\" ><ion-icon name=\\\"add-circle-outline\\\"></ion-icon></ion-button>\\n\\t\\t<ion-button *ngIf=\\\"loggedInUserIsMember == true && tab=='events'\\\" (click)=\\\"newEvent()\\\" ><ion-icon name=\\\"add-circle-outline\\\"></ion-icon></ion-button>\\n\\t</ion-buttons>\\n\\n  </ion-toolbar>\\n\\n  <ion-segment value=\\\"posts\\\" color=\\\"secondary\\\" [(ngModel)]=\\\"tab\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\n\\t\\t<!-- <ion-segment-button value=\\\"group\\\">\\n  \\t\\t\\t<ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\n    </ion-segment-button> -->\\n\\t\\t<!-- <ion-segment-button value=\\\"groupInfo\\\">\\n      <ion-icon name=\\\"ellipsis-vertical\\\"></ion-icon>\\n\\t\\t</ion-segment-button> -->\\n    <ion-segment-button value=\\\"posts\\\">\\n      <ion-icon size=\\\"medium\\\" name=\\\"chatbubbles\\\"></ion-icon>\\n      <!-- <span class=\\\"tab-title\\\">Posts</span> -->\\n    </ion-segment-button>\\n\\t\\t<ion-segment-button value=\\\"polls\\\">\\n      <ion-icon size=\\\"medium\\\" name=\\\"podium\\\"></ion-icon>\\n      <!-- <span class=\\\"tab-title\\\">Polls</span> -->\\n\\t\\t</ion-segment-button>\\n\\t\\t<ion-segment-button value=\\\"resources\\\">\\n      <ion-icon size=\\\"medium\\\" name=\\\"library\\\"></ion-icon>\\n      <!-- <span class=\\\"tab-title\\\">Resources</span> -->\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"events\\\">\\n      <ion-icon size=\\\"medium\\\" name=\\\"calendar\\\"></ion-icon>\\n      <!-- <span class=\\\"tab-title\\\">Events</span> -->\\n    </ion-segment-button>\\n</ion-segment>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <div [ngSwitch]=\\\"tab\\\" >\\n\\n  <div *ngSwitchCase=\\\"'posts'\\\">\\n    <!-- No Posts to show -->\\n     <div class=\\\"empty-list\\\" *ngIf=\\\"posts && posts.length == 0\\\">\\n     <h1><ion-icon name=\\\"chatbubbles-outline\\\"></ion-icon></h1>\\n     <p>No new Posts added to this group.</p>\\n     </div>\\n     <!-- Show Posts -->\\n     <div *ngIf=\\\"posts && posts.length > 0\\\" >\\n     <div class=\\\"listing-item\\\" *ngFor=\\\"let item of posts\\\" >\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-row>\\n            <ion-col size=10>\\n           <ion-card-subtitle class=\\\"addedBy\\\">\\n            <img class=\\\"addedByImg\\\" src=\\\"{{item.avatar}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" /> \\n             <p><a class=\\\"addedByTitle\\\" (click)=\\\"viewUser(item.addedByUser.addedByKey)\\\" ><b>{{item.addedByUser.addedByUsername}}</b></a><!-- <img *ngIf=\\\"item.showNewIcon\\\" class=\\\"newIcon\\\" src=\\\"./assets/icon/new.svg\\\" />  -->\\n              <br/>\\n             <span class=\\\"addedByDate\\\">posted {{item.date.toDate() | DateFormat}}</span><br/>\\n            <a (click)=\\\"viewGroup(item.groupId)\\\" class=\\\"addedByTitle\\\">in <b>{{item.groupName}}</b></a></p>\\n          </ion-card-subtitle>\\n        </ion-col>\\n        <ion-col size=2>\\n          <ion-buttons>\\n            <ion-button (click)=\\\"showPostOptions(item)\\\">\\n              <ion-icon slot=\\\"end\\\" name=\\\"chevron-down-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n        </ion-col>\\n        </ion-row>\\n        </ion-card-header>\\n        <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'general'\\\">\\n          <div (click)=\\\"viewPost(item)\\\">\\n            <div>\\n              <ion-slides class=\\\"slider\\\" pager=\\\"true\\\" [options]=\\\"slideOptsOne\\\" #slideWithNav>\\n              <ion-slide *ngFor=\\\"let s of item.postMedia\\\">\\n                <div class=\\\"bgSizeContain\\\" \\n                [ngStyle]=\\\"{'background-image':'url('+s+')'}\\\">\\n              </div>\\n              </ion-slide>\\n            </ion-slides>\\n            </div>\\n          <ion-label><b>{{item.title}}.</b> {{item.data.message}} <br/></ion-label>\\n        </div>\\n          <div class=\\\"tags-wrapper\\\">\\n          <ion-row>\\n            <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\n              <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\n            </div>\\n          </ion-row>\\n          </div>\\n          <div class=\\\"reactions\\\">\\n          <ion-row >\\n            <ion-col size=3>\\n              <ion-buttons>\\n                <ion-button (click)=\\\"submitReactionPost(item, 'Thanks')\\\">\\n               <div *ngIf=\\\"item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/smile-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\n               <div *ngIf=\\\"!item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/smile.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\n              </ion-button>\\n              </ion-buttons> \\n            </ion-col>\\n            <ion-col size=3>\\n              <ion-buttons>\\n                <ion-button (click)=\\\"submitReactionPost(item, 'Hug')\\\">\\n               <div *ngIf=\\\"item.showHug\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/hug-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Hug</span></div> \\n               <div *ngIf=\\\"!item.showHug\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/hug.svg\\\" ></ion-icon> <span class=\\\"text\\\">Hug</span></div> \\n              </ion-button>\\n              </ion-buttons> \\n            </ion-col>\\n            <ion-col size=2></ion-col>\\n            <ion-col size=2>\\n              <ion-buttons>\\n                <ion-button (click)=\\\"showReactionsList(item)\\\">\\n              <div><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/smile-active.svg\\\" class=\\\"icon\\\"></ion-icon><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/hug-active.svg\\\" class=\\\"icon\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReactionCount}}</span></div>\\n            </ion-button>\\n          </ion-buttons> \\n            </ion-col>\\n            <ion-col size=2>\\n              <ion-buttons>\\n                <ion-button>\\n              <div><ion-icon size=\\\"small\\\" class=\\\"icon\\\" name=\\\"chatbox-outline\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReviewCount}}</span></div>\\n            </ion-button>\\n          </ion-buttons> \\n            </ion-col>\\n          </ion-row>\\n          </div>\\n        </ion-card-content>\\n      </ion-card>\\n    </div>\\n     </div>\\n    </div>\\n     <div *ngSwitchCase=\\\"'polls'\\\">\\n    <!-- No polls to show -->\\n     <div class=\\\"empty-list\\\" *ngIf=\\\"polls && polls.length == 0\\\">\\n     <h1><ion-icon name=\\\"md-chatbubbles\\\"></ion-icon></h1>\\n     <p>No new polls yet.</p>\\n     </div>\\n     <!-- Show polls -->\\n     <div *ngIf=\\\"polls && polls.length > 0\\\">\\n      <div class=\\\"listing-item\\\" *ngFor=\\\"let item of polls\\\">\\n     <ion-card>\\n      <ion-card-header>\\n        <ion-row>\\n          <ion-col size=10>\\n         <ion-card-subtitle class=\\\"addedBy\\\">\\n          <img class=\\\"addedByImg\\\" src=\\\"{{item.avatar}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" /> \\n           <p><a class=\\\"addedByTitle\\\" (click)=\\\"viewUser(item.addedByUser.addedByKey)\\\" ><b>{{item.addedByUser.addedByUsername}}</b></a><!-- <img *ngIf=\\\"item.showNewIcon\\\" class=\\\"newIcon\\\" src=\\\"./assets/icon/new.svg\\\" />  -->\\n            <br/>\\n           <span class=\\\"addedByDate\\\">posted {{item.date.toDate() | DateFormat}}</span><br/>\\n          <a (click)=\\\"viewGroup(item.groupId)\\\" class=\\\"addedByTitle\\\">in <b>{{item.groupName}}</b></a></p>\\n        </ion-card-subtitle>\\n      </ion-col>\\n      <ion-col size=2>\\n        <ion-buttons>\\n          <ion-button (click)=\\\"showPostOptions(item)\\\">\\n            <ion-icon slot=\\\"end\\\" name=\\\"chevron-down-outline\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n      </ion-col>\\n      </ion-row>\\n      </ion-card-header>\\n\\n      <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'poll'\\\" >\\n        <div (click)=\\\"viewPoll(item)\\\">\\n        <b>{{item.title}}.</b><br/>\\n        <ion-row  *ngFor=\\\"let pollOption of item.data.pollOptions\\\">\\n          <ion-col >\\n             <div><ion-icon class=\\\"poll-icon\\\" name=\\\"checkbox-outline\\\"></ion-icon> <span>{{pollOption.name}}</span></div>\\n          </ion-col>\\n        </ion-row>\\n      </div>\\n      <div class=\\\"tags-wrapper\\\">\\n        <ion-row>\\n          <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\n            <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\n          </div>\\n        </ion-row>\\n        </div>\\n\\n              <ion-row class=\\\"info-row\\\" >\\n         <ion-col size=\\\"8\\\">\\n                   <span class=\\\"text\\\" *ngIf=\\\"!item.pollClosed\\\">Poll ends {{item.data.dateEnding.toDate() | DateFormat}}</span> \\n                   <span class=\\\"text\\\" *ngIf=\\\"item.pollClosed\\\">Poll closed</span> \\n                </ion-col>\\n          <ion-col size=\\\"1\\\">\\n          </ion-col>\\n                <ion-col size=\\\"3\\\">\\n                  <div><span class=\\\"text\\\">{{item.totalPollCount}} voted</span></div>\\n                </ion-col>\\n              </ion-row>\\n      </ion-card-content>\\n      </ion-card>\\n   </div>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'resources'\\\">\\n    <!-- No Resources to show -->\\n     <div class=\\\"empty-list\\\" *ngIf=\\\"resources && resources.length == 0\\\">\\n     <h1><ion-icon name=\\\"chatbubbles-outline\\\"></ion-icon></h1>\\n     <p>No new Resources added to this group.</p>\\n     </div>\\n     <!-- Show Resources -->\\n     <div *ngIf=\\\"resources && resources.length > 0\\\" >\\n      <div class=\\\"listing-item\\\" *ngFor=\\\"let item of resources\\\">\\n       <div>\\n     <ion-card>\\n      <ion-card-header>\\n        <ion-row>\\n          <ion-col size=10>\\n         <ion-card-subtitle class=\\\"addedBy\\\">\\n          <img class=\\\"addedByImg\\\" src=\\\"{{item.avatar}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" /> \\n           <p><a class=\\\"addedByTitle\\\" (click)=\\\"viewUser(item.addedByUser.addedByKey)\\\" ><b>{{item.addedByUser.addedByUsername}}</b></a><!-- <img *ngIf=\\\"item.showNewIcon\\\" class=\\\"newIcon\\\" src=\\\"./assets/icon/new.svg\\\" />  -->\\n            <br/>\\n           <span class=\\\"addedByDate\\\">posted {{item.date.toDate() | DateFormat}}</span><br/>\\n          <a (click)=\\\"viewGroup(item.groupId)\\\" class=\\\"addedByTitle\\\">in <b>{{item.groupName}}</b></a></p>\\n        </ion-card-subtitle>\\n      </ion-col>\\n      <ion-col size=2>\\n        <ion-buttons>\\n          <ion-button (click)=\\\"showPostOptions(item)\\\">\\n            <ion-icon slot=\\\"end\\\" name=\\\"chevron-down-outline\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n      </ion-col>\\n      </ion-row>\\n      </ion-card-header>\\n      <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'resource'\\\">\\n        <div (click)=\\\"viewResource(item)\\\">\\n        <b>{{item.title}}.</b><br/>\\n        <div *ngIf=\\\"item?.data.type == 'contact'\\\">\\n          {{item.data.name}}<br/>\\n          <div [innerHtml]=\\\"item.data.address\\\"></div><br/>\\n          {{item.data.email}}<br/>\\n          {{item.data.phones}}<br/>\\n        </div>\\n        <div *ngIf=\\\"item?.data.type == 'upload'\\\">\\n          <div *ngIf=\\\"item.data.uploadtype == 'location'\\\" [innerHtml]=\\\"item.data.url\\\"></div>\\n          <div *ngIf=\\\"item.data.uploadtype == 'contact'\\\">\\n          {{item.data.name}}<br/>\\n          {{item.data.address}}<br/>\\n          {{item.data.phones}}<br/>\\n          {{item.data.email}}<br/>\\n          </div>\\n          <div *ngIf=\\\"item.data.uploadtype == 'image'\\\">\\n          <img src=\\\"{{item.data.resolvedurl}}\\\" />\\n          </div>\\n          <div *ngIf=\\\"item.data.uploadtype == 'video'\\\">\\n            <video controls width=\\\"100%\\\" src=\\\"{{item.data.resolvedurl}}\\\" ></video>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"item?.data.type == 'weblink'\\\">\\n        {{item.data.metatitle}}<br/>\\n        <img [src]=\\\"item.data.metaicon\\\"/> \\n        {{item.data.metadescription}}<br/><br/>\\n        <a href=\\\"{{item.data.metasite}}\\\">{{item.data.metasite}}</a>\\n        </div>\\n      </div>\\n      <div class=\\\"tags-wrapper\\\">\\n        <ion-row>\\n          <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\n            <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\n          </div>\\n        </ion-row>\\n        </div>\\n        <div class=\\\"reactions\\\">\\n           <ion-row>\\n            <ion-col size=3>\\n              <ion-buttons>\\n              <ion-button (click)=\\\"submitReactionPost(item, 'Thanks')\\\">\\n             <div *ngIf=\\\"item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/smile-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\n             <div *ngIf=\\\"!item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/smile.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\n              </ion-button>\\n              </ion-buttons> \\n            </ion-col>\\n            <ion-col size=3>\\n                 <ion-buttons>\\n                 <ion-button (click)=\\\"submitReactionPost(item, 'Bookmark')\\\">\\n                <div *ngIf=\\\"item.showBookmark\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/bookmark-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Bookmark</span></div> \\n                <div *ngIf=\\\"!item.showBookmark\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/bookmark.svg\\\" ></ion-icon> <span class=\\\"text\\\">Bookmark</span></div> \\n                 </ion-button>\\n                 </ion-buttons> \\n            </ion-col>\\n          <ion-col size=2></ion-col>\\n          <ion-col size=2>\\n                 <ion-buttons>\\n                 <ion-button (click)=\\\"showReactionsList(item)\\\">\\n                 <div><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/bookmark-active.svg\\\" class=\\\"icon\\\"></ion-icon><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/smile-active.svg\\\" class=\\\"icon\\\"></ion-icon><span class=\\\"text\\\">{{item.totalReactionCount}}</span></div>\\n               </ion-button>\\n               </ion-buttons> \\n               </ion-col>\\n               <ion-col size=2>\\n                 <ion-buttons>\\n                 <ion-button>\\n                  <div><ion-icon size=\\\"small\\\" class=\\\"icon\\\" name=\\\"chatbox-outline\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReviewCount}}</span></div>\\n                </ion-button>\\n               </ion-buttons> \\n               </ion-col>\\n          </ion-row>\\n        \\n        </div>\\n      </ion-card-content>\\n        </ion-card>\\n           </div>\\n     </div>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'events'\\\">\\n      <!-- No Events to show -->\\n       <div class=\\\"empty-list\\\" *ngIf=\\\"events && events.length == 0\\\">\\n       <h1><ion-icon name=\\\"chatbubbles\\\"></ion-icon></h1>\\n       <p>No new upcoming Events added to this group.</p>\\n       </div>\\n       <!-- Show Events -->\\n       <div *ngIf=\\\"events && events.length > 0\\\" >\\n        <div class=\\\"listing-item\\\" *ngFor=\\\"let item of events\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-row>\\n                <ion-col size=10>\\n               <ion-card-subtitle class=\\\"addedBy\\\">\\n                <img class=\\\"addedByImg\\\" src=\\\"{{item.avatar}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" /> \\n                 <p><a class=\\\"addedByTitle\\\" (click)=\\\"viewUser(item.addedByUser.addedByKey)\\\" ><b>{{item.addedByUser.addedByUsername}}</b></a><!-- <img *ngIf=\\\"item.showNewIcon\\\" class=\\\"newIcon\\\" src=\\\"./assets/icon/new.svg\\\" />  -->\\n                  <br/>\\n                 <span class=\\\"addedByDate\\\">posted {{item.date.toDate() | DateFormat}}</span><br/>\\n                <a (click)=\\\"viewGroup(item.groupId)\\\" class=\\\"addedByTitle\\\">in <b>{{item.groupName}}</b></a></p>\\n              </ion-card-subtitle>\\n            </ion-col>\\n            <ion-col size=2>\\n              <ion-buttons>\\n                <ion-button (click)=\\\"showPostOptions(item)\\\">\\n                  <ion-icon slot=\\\"end\\\" name=\\\"chevron-down-outline\\\"></ion-icon>\\n                </ion-button>\\n              </ion-buttons>\\n            </ion-col>\\n            </ion-row>\\n            </ion-card-header>\\n            <ion-card-content class=\\\"message\\\" *ngIf=\\\"item.type === 'event'\\\">\\n              <div (click)=\\\"viewEvent(item)\\\">\\n              <b>{{item.title}}.</b> <br/>{{item.data.eventDate}} at {{item.data.eventTime}}<br/><br/>\\n                {{item.data.address}}<br/><br/>\\n                {{item.data.link}}\\n              </div>\\n              <div class=\\\"tags-wrapper\\\">\\n                <ion-row>\\n                  <div class=\\\"tags\\\" *ngFor=\\\"let tag of item.postTags\\\">\\n                    <span class=\\\"item-rating\\\">#{{tag.val}}</span>\\n                  </div>\\n                </ion-row>\\n                </div>\\n              <div class=\\\"reactions\\\">\\n                <ion-row>\\n                  <ion-col size=3>\\n                    <ion-buttons>\\n                      <ion-button (click)=\\\"submitReactionPost(item, 'Thanks')\\\">\\n                      <div *ngIf=\\\"item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/smile-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\n                      <div *ngIf=\\\"!item.showSmiley\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/smile.svg\\\" ></ion-icon> <span class=\\\"text\\\">Thanks</span></div> \\n                    </ion-button>\\n                    </ion-buttons> \\n                  </ion-col>\\n                  <ion-col size=3>\\n                    <ion-buttons>\\n                      <ion-button (click)=\\\"submitReactionPost(item, 'Checkin')\\\">\\n                      <div *ngIf=\\\"item.showCheckin\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\" src=\\\"./assets/icon/checkin-active.svg\\\" ></ion-icon> <span class=\\\"text\\\">Checkin</span></div> \\n                      <div *ngIf=\\\"!item.showCheckin\\\"><ion-icon size=\\\"small\\\" class=\\\"icon\\\"  src=\\\"./assets/icon/checkin.svg\\\" ></ion-icon> <span class=\\\"text\\\">Checkin</span></div> \\n                    </ion-button>\\n                    </ion-buttons> \\n                  </ion-col>\\n                  <ion-col size=2></ion-col>\\n                  <ion-col size=2>\\n                          <ion-buttons>\\n                            <ion-button (click)=\\\"showReactionsList(item)\\\">\\n                          <div><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/smile-active.svg\\\" class=\\\"icon\\\"></ion-icon><ion-icon size=\\\"small\\\" src=\\\"./assets/icon/checkin-active.svg\\\" class=\\\"icon\\\"></ion-icon><span class=\\\"text\\\">{{item.totalReactionCount}}</span></div>\\n                        </ion-button>\\n                      </ion-buttons> \\n                  </ion-col>\\n                  <ion-col size=2>\\n                          <ion-buttons>\\n                            <ion-button>\\n                              <div><ion-icon size=\\\"small\\\" class=\\\"icon\\\" name=\\\"chatbox-outline\\\"></ion-icon> <span class=\\\"text\\\">{{item.totalReviewCount}}</span></div>\\n                            </ion-button>\\n                      </ion-buttons> \\n                  </ion-col>\\n                 </ion-row>\\n             </div>\\n            </ion-card-content>\\n        </ion-card>\\n        </div>\\n       </div>\\n      </div>\\n      <!-- Group Info -->\\n <div  class=\\\"group-info\\\" *ngSwitchCase=\\\"'groupInfo'\\\">\\n  <div>\\n\\n    <div class=\\\"group-img\\\">\\n      <img src=\\\"{{group.img}}\\\">\\n    </div>\\n    <div class=\\\"group-name\\\">    \\n      {{group.name}}\\n    </div>\\n    <div class=\\\"group-desc\\\">\\n      {{group.description}}\\n    </div>\\n</div>\\n<div class=\\\"group-name\\\"> \\nGroup Tags\\n</div>\\n<div class=\\\"group-tags\\\">\\n  <ion-row>\\n    <div class=\\\"tags\\\" *ngFor=\\\"let tag of group.groupTags\\\">\\n      <span class=\\\"item-rating\\\" [attr.ratingBase]=\\\"1\\\">#{{tag}}</span>\\n    </div>\\n  </ion-row>\\n</div>\\n<div class=\\\"group-name\\\"> \\n  Group Members ({{groupMembers.length}})\\n  </div>\\n   <ion-list *ngIf=\\\"groupMembers\\\">\\n    <!-- <ion-item (click)=\\\"addMembers()\\\">\\n     <ion-icon name=\\\"add\\\" item-left></ion-icon>\\n     <h2>Add Members</h2>\\n     </ion-item>-->\\n     <ion-item *ngFor=\\\"let member of groupMembers\\\" (click)=\\\"viewUser(member.$key)\\\">\\n     <ion-avatar>\\n       <img src=\\\"{{member.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\"/>\\n     </ion-avatar>\\n     <ion-label class=\\\"group-member-name\\\">{{member.name}}</ion-label>\\n     <p>{{member.description}}</p>\\n     </ion-item>\\n   </ion-list>\\n   <ion-list-header *ngIf=\\\"loggedInUserIsMember == true\\\" >\\n     More\\n   </ion-list-header>\\n   <ion-list *ngIf=\\\"loggedInUserIsMember == true\\\"  style=\\\"text-align: center;\\\">  \\n     <ion-item no-lines tappable (click)=\\\"leaveGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length > 1\\\">\\n     Leave Group\\n     </ion-item>\\n     <!-- When there's only one member left, allow deleting of group. -->\\n     <ion-item color=\\\"danger\\\" no-lines tappable (click)=\\\"deleteGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length <= 1\\\">\\n     Delete Group\\n     </ion-item>\\n   </ion-list>\\n   <p padding style=\\\"color:#aaa\\\">Started {{group.dateCreated | DateFormat}}</p>\\n   </div>\\n  </div>\\n\\n  <ion-infinite-scroll *ngIf=\\\"tab=='posts'\\\" threshold=\\\"100px\\\" (ionInfinite)=\\\"loadDataPosts($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Loading more data...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n  <ion-infinite-scroll *ngIf=\\\"tab=='events'\\\" threshold=\\\"100px\\\" (ionInfinite)=\\\"loadDataEvents($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Loading more data...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n  <ion-infinite-scroll *ngIf=\\\"tab=='polls'\\\" threshold=\\\"100px\\\" (ionInfinite)=\\\"loadDataPolls($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Loading more data...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n  <ion-infinite-scroll *ngIf=\\\"tab=='resources'\\\" threshold=\\\"100px\\\" (ionInfinite)=\\\"loadDataResources($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Loading more data...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\\n\";"]}