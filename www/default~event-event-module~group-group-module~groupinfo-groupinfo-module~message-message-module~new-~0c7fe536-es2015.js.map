{"version":3,"sources":["./src/app/services/image.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAA2C;AACsB;AAC5B;AACsB;AACI;AACjB;AACK;AAKnD,IAAa,YAAY,GAAzB,MAAa,YAAY;IA6BvB,YACS,SAA2B,EAC3B,eAA+B,EAC/B,MAAc,EACd,YAA0B,EAC1B,IAAU;QAJV,cAAS,GAAT,SAAS,CAAkB;QAC3B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAAM;QAhCX,wBAAmB,GAAkB;YAC3C,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,GAAG;YACjB,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ;YACrD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI;YAC3C,kBAAkB,EAAE,IAAI;SACzB,CAAC;QAEM,wBAAmB,GAAkB;YAC3C,OAAO,EAAE,EAAE;YACX,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ;YACrD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI;YAC3C,kBAAkB,EAAE,IAAI;YACxB,SAAS,EAAE,IAAI;SAChB,CAAC;QAEM,sBAAiB,GAAkB;YACzC,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,GAAG;YACjB,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ;YACrD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI;YAC3C,kBAAkB,EAAE,IAAI;SACzB,CAAC;QASA,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;IAED,yDAAyD;IACzD,YAAY,CAAC,OAAO;QAClB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;YACvC,IAAI,EAAE,UAAU;SACjB,CAAC,CAAC;IACL,CAAC;IAED,oEAAoE;IACpE,gBAAgB;QACd,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,QAAQ,GAAG,gEAAgE,CAAC;QAChF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;SACtE;QACD,OAAO,IAAI,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,4DAA4D;IAC5D,kFAAkF;IAClF,oDAAoD;IACpD,eAAe,CAAC,IAAI,EAAE,UAAU;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,UAAU,CAAC;QACjD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAClE,iCAAiC;YACjC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,GAAG,SAAS,CAAC,CAAC;YACvE,IAAI,QAAQ,GAAG;gBACb,aAAa,EAAE,OAAO,CAAC,IAAI;aAC5B,CAAC;YACF,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACnC,IAAI,YAAY,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;YACxF,oDAAoD;YACpD,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACpD,yDAAyD;gBACzD,kCAAkC;gBAClC,6BAA6B;gBAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAGtB,YAAY,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,GAAG,GAAG,GAAG,CAAC;oBAEd,IAAI,OAAO,GAAG;wBACZ,WAAW,EAAE,IAAI,CAAC,IAAI;wBACtB,QAAQ,EAAE,GAAG;qBACd,CAAC;oBACF,wBAAwB;oBACxB,6CAAa,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC;yBAC/C,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;wBAChB,gCAAgC;wBAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;4BACpD,GAAG,EAAE,GAAG;yBACT,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;4BAClB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;4BAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;wBACpD,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;4BACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACnB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;4BAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;wBACzD,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC;yBACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;wBACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;oBACzD,CAAC,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;YAIL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAA2C;IAC3C,aAAa,CAAC,KAAK,EAAE,UAAU;QAC7B,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/C,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAChE,iCAAiC;YACjC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,GAAG,SAAS,CAAC,CAAC;YACvE,IAAI,QAAQ,GAAG;gBACb,aAAa,EAAE,OAAO,CAAC,IAAI;aAC5B,CAAC;YAEF,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACnC,IAAI,eAAe,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,6CAAa,EAAE,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;YAC/G,eAAe,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACvD,mCAAmC;gBACnC,6BAA6B;gBAC7B,eAAe,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBAC1C,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC9B,CAAC,CAAC;YAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAA0D;IAC1D,oBAAoB,CAAC,KAAK,EAAE,UAAU;QACpC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,UAAU,CAAC;YAC/C,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,sCAAsC;YACtC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;gBAChE,iCAAiC;gBACjC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,GAAG,SAAS,CAAC,CAAC;gBACvE,IAAI,QAAQ,GAAG;oBACb,aAAa,EAAE,OAAO,CAAC,IAAI;iBAC5B,CAAC;gBACF,IAAI,aAAa,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,6CAAa,EAAE,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBAChI,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACrD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,6BAA6B;oBAC7B,aAAa,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBACxC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;wBAChB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,KAAK,CAAC,CAAC;oBACjB,CAAC,CAAC;gBAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;oBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;oBAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAiC;IACjC,eAAe,CAAC,IAAI;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QAClF,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,6CAAa,EAAE,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC,CAAC;IACjK,CAAC;IAED,qCAAqC;IACrC,mBAAmB,CAAC,IAAI;QACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9F,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC,CAAC;IAC7I,CAAC;IAED,sDAAsD;IACtD,oBAAoB,CAAC,OAAO,EAAE,IAAI;QAChC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QAClF,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC,CAAC;IACzI,CAAC;IAED,sDAAsD;IACtD,kBAAkB,CAAC,cAAc,EAAE,UAAU;QAC3C,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,UAAU,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,sCAAsC;YACtC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;gBAClE,iCAAiC;gBACjC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,GAAG,SAAS,CAAC,CAAC;gBACvE,IAAI,QAAQ,GAAG;oBACb,aAAa,EAAE,OAAO,CAAC,IAAI;iBAC5B,CAAC;gBACF,oDAAoD;gBACpD,IAAI,KAAK,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBACvG,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;oBAC7C,6BAA6B;oBAC7B,KAAK,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBAChC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,CAAC;oBACf,CAAC,CAAC;gBAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;oBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;oBAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAA0D;IAC1D,uBAAuB,CAAC,OAAO,EAAE,UAAU;QACzC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,UAAU,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,sCAAsC;YACtC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;gBAClE,iCAAiC;gBACjC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,GAAG,SAAS,CAAC,CAAC;gBACvE,IAAI,QAAQ,GAAG;oBACb,aAAa,EAAE,OAAO,CAAC,IAAI;iBAC5B,CAAC;gBACF,oDAAoD;gBACpD,IAAI,MAAM,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBACjG,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;oBAC9C,6BAA6B;oBAC7B,MAAM,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBACjC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,CAAC;oBACf,CAAC,CAAC;gBAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;oBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;oBAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uBAAuB,CAAC,OAAO;QAC7B,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChE,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBACzD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACrB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;oBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,IAAI,MAAM,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACxF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBAChB,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;wBAC1D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAE5B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBAC3B,CAAC,EAAE,GAAG,CAAC,EAAE;wBACP,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;oBACvB,CAAC,CAAC,CAAC;gBAEL,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,cAAc;QAC/B,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChE,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBACzD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACrB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;oBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,8DAA8D;oBAE9D,IAAI,SAAS,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;oBACjE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBAC7B,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;wBAC1D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;4BACpC,OAAO,CAAC,GAAG,CAAC,CAAC;wBACf,CAAC,CAAC;oBAEJ,CAAC,EAAE,GAAG,CAAC,EAAE;wBACP,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;oBACvB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,0DAA0D;IAC1D,wBAAwB,CAAC,OAAO,EAAE,UAAU;QAC1C,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,UAAU,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,sCAAsC;YACtC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;gBAClE,iCAAiC;gBACjC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,GAAG,SAAS,CAAC,CAAC;gBACvE,IAAI,QAAQ,GAAG;oBACb,aAAa,EAAE,OAAO,CAAC,IAAI;iBAC5B,CAAC;gBACF,oDAAoD;gBACpD,IAAI,MAAM,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBACjG,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;oBAC9C,6BAA6B;oBAC7B,MAAM,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBACjC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,CAAC;oBACf,CAAC,CAAC;gBAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;oBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;oBAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,OAAO;QAC9B,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChE,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBACzD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACrB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;oBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,IAAI,MAAM,GAAG,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACxF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBAChB,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;wBAC1D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAE5B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBAC3B,CAAC,EAAE,GAAG,CAAC,EAAE;wBACP,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;oBACvB,CAAC,CAAC,CAAC;gBAEL,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,qBAAqB,CAAC,WAAW;;YACtC,OAAO,MAAM,gDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAS,GAAG;gBAC1F,OAAO,GAAG,CAAC;YACb,CAAC,CAAC,CAAC,KAAK,CAAC,UAAS,KAAK;gBACnB,oBAAoB;YACtB,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;CACF;;YAjYqB,wEAAgB;YACV,+DAAc;YACvB,+DAAM;YACA,4EAAY;YACpB,2DAAI;;AAlCR,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EA+BoB,wEAAgB;QACV,+DAAc;QACvB,+DAAM;QACA,4EAAY;QACpB,2DAAI;GAlCR,YAAY,CA+ZxB;AA/ZwB","file":"default~event-event-module~group-group-module~groupinfo-groupinfo-module~message-message-module~new-~0c7fe536-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport * as firebase from 'firebase';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { MediaCapture } from '@ionic-native/media-capture/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { LoadingService } from './loading.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  private profilePhotoOptions: CameraOptions = {\n    quality: 50,\n    targetWidth: 384,\n    targetHeight: 384,\n    destinationType: this.camera.DestinationType.DATA_URL,\n    encodingType: this.camera.EncodingType.JPEG,\n    correctOrientation: true\n  };\n\n  private photoMessageOptions: CameraOptions = {\n    quality: 50,\n    destinationType: this.camera.DestinationType.DATA_URL,\n    encodingType: this.camera.EncodingType.JPEG,\n    correctOrientation: true,\n    allowEdit: true\n  };\n\n  private groupPhotoOptions: CameraOptions = {\n    quality: 50,\n    targetWidth: 384,\n    targetHeight: 384,\n    destinationType: this.camera.DestinationType.DATA_URL,\n    encodingType: this.camera.EncodingType.JPEG,\n    correctOrientation: true\n  };\n\n\n  constructor(\n    public firestore: AngularFirestore,\n    public loadingProvider: LoadingService,\n    public camera: Camera,\n    public mediaCapture: MediaCapture,\n    public file: File) {\n    console.log(\"Initializing Image Provider\");\n  }\n\n  // Function to convert dataURI to Blob needed by Firebase\n  imgURItoBlob(dataURI) {\n    var binary = atob(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    var array = [];\n    for (var i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n    }\n    return new Blob([new Uint8Array(array)], {\n      type: mimeString\n    });\n  }\n\n  // Generate a random filename of length for the image to be uploaded\n  generateFilename() {\n    var length = 8;\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text + \".jpg\";\n  }\n\n  // Set ProfilePhoto given the user and the cameraSourceType.\n  // This function processes the imageURI returned and uploads the file on Firebase,\n  // Finally the user data on the database is updated.\n  setProfilePhoto(user, sourceType) {\n    console.log(user);\n    this.profilePhotoOptions.sourceType = sourceType;\n    this.loadingProvider.show();\n    // Get picture from camera or gallery.\n    this.camera.getPicture(this.profilePhotoOptions).then((imageData) => {\n      // Process the returned imageURI.\n      let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n      let metadata = {\n        'contentType': imgBlob.type\n      };\n      let name = this.generateFilename();\n      let dpStorageRef = firebase.storage().ref().child('images/' + user.userId + '/' + name);\n      // Generate filename and upload to Firebase Storage.\n      dpStorageRef.put(imgBlob, metadata).then((snapshot) => {\n        // Delete previous profile photo on Storage if it exists.\n        // this.deleteImageFile(user.img);\n        // URL of the uploaded image!\n        console.log(snapshot);\n\n\n        dpStorageRef.getDownloadURL().then(res => {\n          console.log(res);\n          let url = res;\n\n          let profile = {\n            displayName: user.name,\n            photoURL: url\n          };\n          // Update Firebase User.\n          firebase.auth().currentUser.updateProfile(profile)\n            .then((success) => {\n              // Update User Data on Database.\n              this.firestore.doc('/accounts/' + user.userId).update({\n                img: url\n              }).then((success) => {\n                this.loadingProvider.hide();\n                this.loadingProvider.showToast(\"Profile Updated\");\n              }).catch((error) => {\n                console.log(error);\n                this.loadingProvider.hide();\n                this.loadingProvider.showToast(\"Something went wrong\");\n              });\n            })\n            .catch((error) => {\n              console.log(error);\n              this.loadingProvider.hide();\n              this.loadingProvider.showToast(\"Something went wrong\");\n            });\n\n        });\n\n\n\n      }).catch((error) => {\n        console.log(error);\n        this.loadingProvider.hide();\n        this.loadingProvider.showToast(\"Something went wrong\");\n      });\n    }).catch((error) => {\n      this.loadingProvider.hide();\n    });\n  }\n\n  // Upload and set the group object's image.\n  setGroupPhoto(group, sourceType) {\n    this.groupPhotoOptions.sourceType = sourceType;\n    this.loadingProvider.show();\n    // Get picture from camera or gallery.\n    this.camera.getPicture(this.groupPhotoOptions).then((imageData) => {\n      // Process the returned imageURI.\n      let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n      let metadata = {\n        'contentType': imgBlob.type\n      };\n\n      let name = this.generateFilename();\n      let groupStorageRef = firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + name);\n      groupStorageRef.put(imgBlob, metadata).then((snapshot) => {\n        // this.deleteImageFile(group.img);\n        // URL of the uploaded image!\n        groupStorageRef.getDownloadURL().then(url => {\n          group.img = url;\n          this.loadingProvider.hide();\n        })\n\n      }).catch((error) => {\n        this.loadingProvider.hide();\n        this.loadingProvider.showToast(\"Something went wrong\");\n      });\n    }).catch((error) => {\n      this.loadingProvider.hide();\n    });\n  }\n\n  // Set group photo and return the group object as promise.\n  setGroupPhotoPromise(group, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.groupPhotoOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.groupPhotoOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        let gPPStorageRef = firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + this.generateFilename());\n        gPPStorageRef.put(imgBlob, metadata).then((snapshot) => {\n          this.deleteImageFile(group.img);\n          // URL of the uploaded image!\n          gPPStorageRef.getDownloadURL().then(url => {\n            group.img = url;\n            this.loadingProvider.hide();\n            resolve(group);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n\n  //Delete the image given the url.\n  deleteImageFile(path) {\n    var fileName = path.substring(path.lastIndexOf('%2F') + 3, path.lastIndexOf('?'));\n    firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\n  }\n\n  //Delete the user.img given the user.\n  deleteUserImageFile(user) {\n    var fileName = user.img.substring(user.img.lastIndexOf('%2F') + 3, user.img.lastIndexOf('?'));\n    firebase.storage().ref().child('images/' + user.userId + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\n  }\n\n  // Delete group image file on group storage reference.\n  deleteGroupImageFile(groupId, path) {\n    var fileName = path.substring(path.lastIndexOf('%2F') + 3, path.lastIndexOf('?'));\n    firebase.storage().ref().child('images/' + groupId + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\n  }\n\n  // Upload photo message and return the url as promise.\n  uploadPhotoMessage(conversationId, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.photoMessageOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        // Generate filename and upload to Firebase Storage.\n        let upRef = firebase.storage().ref().child('images/' + conversationId + '/' + this.generateFilename());\n        upRef.put(imgBlob, metadata).then((snapshot) => {\n          // URL of the uploaded image!\n          upRef.getDownloadURL().then(url => {\n            this.loadingProvider.hide();\n            resolve(url);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n\n  // Upload group photo message and return a promise as url.\n  uploadGroupPhotoMessage(groupId, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.photoMessageOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        // Generate filename and upload to Firebase Storage.\n        let ugpRef = firebase.storage().ref().child('images/' + groupId + '/' + this.generateFilename());\n        ugpRef.put(imgBlob, metadata).then((snapshot) => {\n          // URL of the uploaded image!\n          ugpRef.getDownloadURL().then(url => {\n            this.loadingProvider.hide();\n            resolve(url);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n  uploadGroupVideoMessage(groupId): Promise<any> {\n    return new Promise(resolve => {\n      this.loadingProvider.show();\n      this.mediaCapture.captureVideo().then(data => {\n        let videoUrl = data[0].fullPath;\n        console.log(\"video path: \" + videoUrl);\n        let x = videoUrl.split(\"/\");\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\n        let name = x[x.length - 1];\n        console.log(filepath + \" - \" + name);\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\n          console.log(success);\n          let blob = new Blob([success], { type: \"video/mp4\" });\n          console.log(blob);\n          let upload = firebase.storage().ref().child('videos/' + groupId + \"/\" + name).put(blob);\n          upload.then(res => {\n            let process = res.bytesTransferred / res.totalBytes * 100;\n            console.log(process);\n            this.loadingProvider.hide();\n\n            resolve(res.downloadURL);\n          }, err => {\n            this.loadingProvider.hide();\n            console.log(\"Failed\")\n          });\n\n        });\n      }, err => {\n        this.loadingProvider.hide();\n        console.log(\"Media Err = \" + err);\n      });\n    });\n  }\n\n  uploadVideoMessage(conversationId): Promise<any> {\n    return new Promise(resolve => {\n      this.loadingProvider.show();\n      this.mediaCapture.captureVideo().then(data => {\n        let videoUrl = data[0].fullPath;\n        console.log(\"video path: \" + videoUrl);\n        let x = videoUrl.split(\"/\");\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\n        let name = x[x.length - 1];\n        console.log(filepath + \" - \" + name);\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\n          console.log(success);\n          let blob = new Blob([success], { type: \"video/mp4\" });\n          console.log(blob);\n          // let timestamp = (Math.floor(Date.now() / 1000)).toString();\n\n          let uploadRef = firebase.storage().ref().child('videos/' + name);\n          uploadRef.put(blob).then(res => {\n            let process = res.bytesTransferred / res.totalBytes * 100;\n            console.log(process);\n            this.loadingProvider.hide();\n            uploadRef.getDownloadURL().then(url => {\n              resolve(url);\n            })\n\n          }, err => {\n            this.loadingProvider.hide();\n            console.log(\"Failed\")\n          });\n        });\n      }, err => {\n        this.loadingProvider.hide();\n        console.log(\"Media Err = \" + err);\n      });\n    });\n  }\n\n  \n  // Upload group photo message and return a promise as url.\n  uploadGroupPhotoResource(groupId, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.photoMessageOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        // Generate filename and upload to Firebase Storage.\n        let ugpRef = firebase.storage().ref().child('images/' + groupId + '/' + this.generateFilename());\n        ugpRef.put(imgBlob, metadata).then((snapshot) => {\n          // URL of the uploaded image!\n          ugpRef.getDownloadURL().then(url => {\n            this.loadingProvider.hide();\n            resolve(url);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n\n  uploadGroupVideoResource(groupId): Promise<any> {\n    return new Promise(resolve => {\n      this.loadingProvider.show();\n      this.mediaCapture.captureVideo().then(data => {\n        let videoUrl = data[0].fullPath;\n        console.log(\"video path: \" + videoUrl);\n        let x = videoUrl.split(\"/\");\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\n        let name = x[x.length - 1];\n        console.log(filepath + \" - \" + name);\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\n          console.log(success);\n          let blob = new Blob([success], { type: \"video/mp4\" });\n          console.log(blob);\n          let upload = firebase.storage().ref().child('videos/' + groupId + \"/\" + name).put(blob);\n          upload.then(res => {\n            let process = res.bytesTransferred / res.totalBytes * 100;\n            console.log(process);\n            this.loadingProvider.hide();\n\n            resolve(res.downloadURL);\n          }, err => {\n            this.loadingProvider.hide();\n            console.log(\"Failed\")\n          });\n\n        });\n      }, err => {\n        this.loadingProvider.hide();\n        console.log(\"Media Err = \" + err);\n      });\n    });\n  }\n\n  async getGroupVideoResource(resourceurl) {\n   return await firebase.storage().ref().child(resourceurl).getDownloadURL().then(function(url) {\n    return url;  \n  }).catch(function(error) {\n      // Handle any errors\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}