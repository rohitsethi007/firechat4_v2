{"version":3,"sources":["src/app/friends/friends.page.html","src/app/friends/friends.module.ts","src/app/friends/friends.page.scss","src/app/friends/friends.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>{{title}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header> \\r\\n\\r\\n<ion-content>\\r\\n  <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"tab\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\r\\n    <ion-segment-button value=\\\"friends\\\">\\r\\n      FRIENDS\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"requests\\\">\\r\\n      REQUESTS\\r\\n      <span *ngIf=\\\"friendRequestCount != 0\\\">({{friendRequestCount}})</span>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"search\\\">\\r\\n      FIND NEW\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n  <div [ngSwitch]=\\\"tab\\\">\\r\\n    <div *ngSwitchCase=\\\"'friends'\\\">\\r\\n      <!-- No friends to show -->\\r\\n      <div class=\\\"empty-list\\\" *ngIf=\\\"friends && friends.length == 0\\\">\\r\\n        <h1>\\r\\n          <ion-icon name=\\\"contacts\\\"></ion-icon>\\r\\n        </h1>\\r\\n        <p>You don't have new friend yet</p>\\r\\n      </div>\\r\\n      <!-- Show list of friends -->\\r\\n      <ion-list lines=\\\"none\\\" *ngIf=\\\"friends && friends.length > 0\\\">\\r\\n        <!-- <ion-searchbar [(ngModel)]=\\\"searchFriend\\\" placeholder=\\\"Search for friend or username\\\" showCancelButton=\\\"true\\\" cancelButtonText=\\\"Done\\\"></ion-searchbar> -->\\r\\n        <ion-item *ngFor=\\\"let friend of friends | friendFilter:searchFriend\\\"\\r\\n          (click)=\\\"message(friend.$key); $event.stopPropagation();\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{friend.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{friend.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>{{friend.description}}</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-note slot=\\\"end\\\" *ngIf=\\\"friend.online == true\\\">online</ion-note>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'requests'\\\">\\r\\n      <!-- No friend requests sent or received. -->\\r\\n      <div class=\\\"empty-list\\\"\\r\\n        *ngIf=\\\"(friendRequests && friendRequests.length == 0) && (requestsSent && requestsSent.length == 0)\\\">\\r\\n        <h1>\\r\\n          <ion-icon name=\\\"md-filing\\\"></ion-icon>\\r\\n        </h1>\\r\\n        <p>No New Requests</p>\\r\\n      </div>\\r\\n      <!-- Show friend requests received. -->\\r\\n      <ion-list lines=\\\"none\\\" *ngIf=\\\"friendRequests && friendRequests.length > 0\\\">\\r\\n        <ion-item *ngFor=\\\"let friendRequest of friendRequests\\\" (click)=\\\"viewUser(friendRequest.$key)\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{friendRequest.img}}\\\" onError=\\\"this.src='http://placehold.it/80x80'\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{friendRequest.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>has sent you a friend request.</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-button color=\\\"acceptrequest\\\" fill=\\\"outline\\\"\\r\\n            (click)=\\\"acceptFriendRequest(friendRequest); $event.stopPropagation();\\\">\\r\\n            Accept\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n      <!-- Show friend requests sent. -->\\r\\n      <ion-list lines=\\\"none\\\" *ngIf=\\\"requestsSent && requestsSent.length > 0\\\">\\r\\n        <ion-item *ngFor=\\\"let requestSent of requestsSent\\\" no-lines tappable (click)=\\\"viewUser(requestSent.$key)\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{requestSent.img}}\\\" onError=\\\"this.src='http://placehold.it/80x80'\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{requestSent.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>friend request sent.</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" color=\\\"cancelrequest\\\"\\r\\n            (click)=\\\"cancelFriendRequest(requestSent); $event.stopPropagation();\\\">\\r\\n            Cancel\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'search'\\\">\\r\\n      <!-- No other users to send friend request right now. -->\\r\\n      <div class=\\\"empty-list\\\" *ngIf=\\\"accounts && (accounts.length == 0 || (accounts.length == excludedIds.length))\\\">\\r\\n        <h1>\\r\\n          <ion-icon name=\\\"md-search\\\"></ion-icon>\\r\\n        </h1>\\r\\n        <p>We can't find new users right now</p>\\r\\n      </div>\\r\\n      <!-- Show other users excluding yourself, and friends with the help of searchFilter pipe. -->\\r\\n      <ion-list lines=\\\"none\\\" *ngIf=\\\"accounts && accounts.length > 0\\\">\\r\\n        <ion-searchbar *ngIf=\\\"accounts.length != excludedIds.length\\\" [(ngModel)]=\\\"searchUser\\\" placeholder=\\\"Search User\\\">\\r\\n        </ion-searchbar>\\r\\n        <ion-item *ngFor=\\\"let account of accounts | searchFilter: [excludedIds, searchUser]\\\" no-lines tappable\\r\\n          (click)=\\\"viewUser(account.$key)\\\">\\r\\n          <div slot=\\\"end\\\">\\r\\n            <ion-button color=\\\"sendrequest\\\" fill=\\\"outline\\\"\\r\\n              (click)=\\\"sendFriendRequest(account); $event.stopPropagation();\\\" *ngIf=\\\"getStatus(account) == 0\\\">\\r\\n              add\\r\\n            </ion-button>\\r\\n            <ion-button color=\\\"cancelrequest\\\" fill=\\\"outline\\\"\\r\\n              (click)=\\\"cancelFriendRequest(account); $event.stopPropagation();\\\" *ngIf=\\\"getStatus(account) == 1\\\">\\r\\n              <!-- <ion-icon name=\\\"md-close-circle\\\" class=\\\"danger\\\"></ion-icon> -->\\r\\n              cancel\\r\\n            </ion-button>\\r\\n            <ion-button color=\\\"acceptrequest\\\" fill=\\\"outline\\\"\\r\\n              (click)=\\\"acceptFriendRequest(account); $event.stopPropagation();\\\" *ngIf=\\\"getStatus(account) == 2\\\">\\r\\n              <!-- <ion-icon name=\\\"md-checkmark-circle\\\" class=\\\"success\\\"></ion-icon> -->\\r\\n              accept\\r\\n            </ion-button>\\r\\n          </div>\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{account.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{account.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>@{{account.username}}</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FriendsPage } from './friends.page';\r\nimport { SharedModule } from '../services/share.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FriendsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    FriendsPage\r\n  ]\r\n})\r\nexport class FriendsPageModule {}\r\n","export default \"input {\\n  border: 1px solid #eee !important;\\n  background: #eee !important;\\n}\\n\\n.searchbar-search-icon {\\n  display: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJpZW5kcy9DOlxcVXNlcnNcXHJvaGlzZXRoaVxcRG9jdW1lbnRzXFxpb25pY1xcZmlyZWNoYXQ0X3YyL3NyY1xcYXBwXFxmcmllbmRzXFxmcmllbmRzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvZnJpZW5kcy9mcmllbmRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlDQUFBO0VBQ0EsMkJBQUE7QUNDSjs7QURDQTtFQUNJLHdCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9mcmllbmRzL2ZyaWVuZHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXR7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZWVlICFpbXBvcnRhbnQ7XHJcbn1cclxuLnNlYXJjaGJhci1zZWFyY2gtaWNvbntcclxuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxufSIsImlucHV0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VlZSAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kOiAjZWVlICFpbXBvcnRhbnQ7XG59XG5cbi5zZWFyY2hiYXItc2VhcmNoLWljb24ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport { FirebaseService } from '../services/firebase.service';\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.page.html',\r\n  styleUrls: ['./friends.page.scss'],\r\n})\r\nexport class FriendsPage implements OnInit {\r\n\r\n  friends: any;\r\n  friendRequests: any = [];\r\n  searchFriend: any;\r\n  tab: any;\r\n  title: any;\r\n  requestsSent: any = [];\r\n  friendRequestCount = 0;\r\n\r\n  alert: any;\r\n  account: any;\r\n\r\n  accounts: any = [];\r\n  excludedIds: any = [];\r\n  searchUser: any;\r\n\r\n  // FriendsPage\r\n  // This is the page where the user can search, view, and initiate a chat with their friends.\r\n  constructor(\r\n    private dataProvider: DataService,\r\n    private loadingProvider: LoadingService,\r\n    public alertCtrl: AlertController,\r\n    public firebaseProvider: FirebaseService,\r\n    private afAuth: AngularFireAuth,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.tab = \"friends\";\r\n    this.title = \"Friends\";\r\n\r\n    this.searchFriend = '';\r\n    if (this.afAuth.auth.currentUser != null) {\r\n      this.dataProvider.getRequests(this.afAuth.auth.currentUser.uid).snapshotChanges().subscribe((requestsRes: any) => {\r\n        let requests = requestsRes.payload.val();\r\n        console.log(requests);\r\n        if (requests != null) {\r\n          if (requests.friendRequests != null && requests.friendRequests != undefined)\r\n            this.friendRequestCount = requests.friendRequests.length;\r\n          else this.friendRequestCount = 0\r\n        }\r\n        else this.friendRequestCount = 0;\r\n        console.log(this.friendRequestCount);\r\n      });\r\n      this.getFriends();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  segmentChanged($event) {\r\n    if (this.tab == 'friends') {\r\n      this.title = \"Friends\"; this.getFriends();\r\n    }\r\n    else if (this.tab == 'requests') {\r\n      this.title = \"Friend Requests\"; this.getFriendRequests();\r\n    }\r\n    else if (this.tab == 'search') {\r\n      this.title = \"Find New Friends\"; this.findNewFriends();\r\n    }\r\n  }\r\n  // openFilter() {\r\n  //   this.findNewFriends();\r\n  //   let friendModal = this.modalCtrl.create(FriendsFilterPage);\r\n  //   friendModal.present();\r\n  //   friendModal.onDidDismiss(data => {\r\n  //     console.log(data);\r\n  //     if (data != undefined) {\r\n  //       this.accounts = this.accounts.filter(acc => {\r\n  //         if ((acc.age >= data.ageStart) && (acc.age <= data.ageEnd) && acc.location == data.location)\r\n  //           return true;\r\n  //         return false;\r\n  //       })\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n  getFriends() {\r\n    this.loadingProvider.show();\r\n    this.friends = [];\r\n    // Get user data on database and get list of friends.\r\n    this.dataProvider.getCurrentUser().snapshotChanges().subscribe((account: any) => {\r\n      console.log(account);\r\n      this.loadingProvider.hide();\r\n      if (account.payload.val() != null && account.payload.val().friends != null) {\r\n        for (var i = 0; i < account.payload.val().friends.length; i++) {\r\n          this.dataProvider.getUser(account.payload.val().friends[i]).snapshotChanges().subscribe((friend) => {\r\n            if (friend.key != null) {\r\n              let friendData = { $key: friend.key, ...friend.payload.val() };\r\n              this.addOrUpdateFriend(friendData);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        this.friends = [];\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // Add or update friend data for real-time sync.\r\n  addOrUpdateFriend(friend) {\r\n    console.log(friend)\r\n    if (!this.friends) {\r\n      this.friends = [friend];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.friends.length; i++) {\r\n        if (this.friends[i].$key == friend.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.friends[index] = friend;\r\n      } else {\r\n        this.friends.push(friend);\r\n      }\r\n    }\r\n    console.log(this.friends);\r\n  }\r\n\r\n  // Proceed to userInfo page.\r\n  viewUser(userId) {\r\n    console.log(userId);\r\n    this.router.navigateByUrl('/userinfo/' + userId);\r\n  }\r\n\r\n  // Proceed to chat page.\r\n  message(userId) {\r\n    this.router.navigateByUrl('/message/' + userId);\r\n  }\r\n\r\n\r\n  // Manageing Friend Requests\r\n\r\n  getFriendRequests() {\r\n    this.friendRequests = [];\r\n    this.requestsSent = [];\r\n\r\n    this.loadingProvider.show();\r\n    // Get user info\r\n    this.dataProvider.getCurrentUser().snapshotChanges().subscribe((account) => {\r\n      this.account = account.payload.val();\r\n      console.log(this.account);\r\n      // Get friendRequests and requestsSent of the user.\r\n      this.dataProvider.getRequests(this.account.userId).snapshotChanges().subscribe((requestsRes: any) => {\r\n        // friendRequests.\r\n        let requests = requestsRes.payload.val();\r\n        if (requests != null) {\r\n          if (requests.friendRequests != null && requests.friendRequests != undefined) {\r\n            this.friendRequests = [];\r\n            this.friendRequestCount = requests.friendRequests.length;\r\n            requests.friendRequests.forEach((userId) => {\r\n              this.dataProvider.getUser(userId).snapshotChanges().subscribe((sender: any) => {\r\n                sender = { $key: sender.key, ...sender.payload.val() };\r\n                this.addOrUpdateFriendRequest(sender);\r\n              });\r\n            });\r\n          } else {\r\n            this.friendRequests = [];\r\n          }\r\n          // requestsSent.\r\n          if (requests.requestsSent != null && requests.requestsSent != undefined) {\r\n            this.requestsSent = [];\r\n            requests.requestsSent.forEach((userId) => {\r\n              this.dataProvider.getUser(userId).snapshotChanges().subscribe((receiver: any) => {\r\n                receiver = { $key: receiver.key, ...receiver.payload.val() };\r\n                this.addOrUpdateRequestSent(receiver);\r\n              });\r\n            });\r\n          } else {\r\n            this.requestsSent = [];\r\n          }\r\n        }\r\n        this.loadingProvider.hide();\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // Add or update friend request only if not yet friends.\r\n  addOrUpdateFriendRequest(sender) {\r\n    if (!this.friendRequests) {\r\n      this.friendRequests = [sender];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.friendRequests.length; i++) {\r\n        if (this.friendRequests[i].$key == sender.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        if (!this.isFriends(sender.$key))\r\n          this.friendRequests[index] = sender;\r\n      } else {\r\n        if (!this.isFriends(sender.$key))\r\n          this.friendRequests.push(sender);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add or update requests sent only if the user is not yet a friend.\r\n  addOrUpdateRequestSent(receiver) {\r\n    if (!this.requestsSent) {\r\n      this.requestsSent = [receiver];\r\n    } else {\r\n      var index = -1;\r\n      for (var j = 0; j < this.requestsSent.length; j++) {\r\n        if (this.requestsSent[j].$key == receiver.$key) {\r\n          index = j;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        if (!this.isFriends(receiver.$key))\r\n          this.requestsSent[index] = receiver;\r\n      } else {\r\n        if (!this.isFriends(receiver.$key))\r\n          this.requestsSent.push(receiver);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  findNewFriends() {\r\n    this.requestsSent = [];\r\n    this.friendRequests = [];\r\n    // Initialize\r\n    this.loadingProvider.show();\r\n    this.searchUser = '';\r\n    // Get all users.\r\n    this.dataProvider.getUsers().snapshotChanges().subscribe((accounts: any) => {\r\n      this.loadingProvider.hide();\r\n\r\n      // applying Filters\r\n\r\n      let acc = accounts.filter((c) => {\r\n        if (c.key == null && c.key == undefined && c.payload.val() == null) return false;\r\n        if (c.payload.val().name == '' || c.payload.val().name == ' ' || c.payload.val().name == undefined) return false;\r\n        if (c.payload.val().publicVisibility == false) return false;\r\n        return true;\r\n      });\r\n\r\n      this.accounts = acc.map(c => {\r\n        return { $key: c.key, ...c.payload.val() }\r\n      })\r\n\r\n\r\n      this.dataProvider.getCurrentUser().snapshotChanges().subscribe((account: any) => {\r\n        // Add own userId as exludedIds.\r\n        // console.log(account.payload.val());\r\n        this.excludedIds = [];\r\n        this.account = account.payload.val();\r\n        if (this.excludedIds.indexOf(account.key) == -1) {\r\n          this.excludedIds.push(account.key);\r\n        }\r\n        // Get friends which will be filtered out from the list using searchFilter pipe pipes/search.ts.\r\n        if (account.payload.val() != null) {\r\n          // console.log(account.payload.val().friends);\r\n          if (account.payload.val().friends != null) {\r\n            account.payload.val().friends.forEach(friend => {\r\n              if (this.excludedIds.indexOf(friend) == -1) {\r\n                this.excludedIds.push(friend);\r\n              }\r\n            });\r\n          }\r\n        }\r\n        // Get requests of the currentUser.\r\n        this.dataProvider.getRequests(account.key).snapshotChanges().subscribe((requests: any) => {\r\n          if (requests.payload.val() != null) {\r\n            this.requestsSent = requests.payload.val().requestsSent;\r\n            this.friendRequests = requests.payload.val().friendRequests;\r\n          }\r\n        });\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  // Send friend request.\r\n  sendFriendRequest(user) {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Send Friend Request',\r\n      message: 'Do you want to send friend request to <b>' + user.name + '</b>?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Send',\r\n          handler: () => {\r\n            this.firebaseProvider.sendFriendRequest(user.$key);\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Accept Friend Request.\r\n  acceptFriendRequest(user) {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Confirm Friend Request',\r\n      message: 'Do you want to accept <b>' + user.name + '</b> as your friend?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Reject Request',\r\n          handler: () => {\r\n            this.firebaseProvider.deleteFriendRequest(user.$key);\r\n            this.getFriendRequests();\r\n          }\r\n        },\r\n        {\r\n          text: 'Accept Request',\r\n          handler: () => {\r\n            this.firebaseProvider.acceptFriendRequest(user.$key);\r\n            this.getFriendRequests();\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Cancel Friend Request sent.\r\n  cancelFriendRequest(user) {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Friend Request Pending',\r\n      message: 'Do you want to delete your friend request to <b>' + user.name + '</b>?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          handler: () => {\r\n            this.firebaseProvider.cancelFriendRequest(user.$key);\r\n            this.getFriendRequests();\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Checks if user is already friends with this user.\r\n  isFriends(userId) {\r\n    if (this.account.friends) {\r\n      if (this.account.friends.indexOf(userId) == -1) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Get the status of the user in relation to the logged in user.\r\n  getStatus(user) {\r\n    // Returns:\r\n    // 0 when user can be requested as friend.\r\n    // 1 when a friend request was already sent to this user.\r\n    // 2 when this user has a pending friend request.\r\n    if (this.requestsSent) {\r\n      for (var i = 0; i < this.requestsSent.length; i++) {\r\n        if (this.requestsSent[i] == user.$key) {\r\n          return 1;\r\n        }\r\n      }\r\n    }\r\n    if (this.friendRequests) {\r\n      for (var j = 0; j < this.friendRequests.length; j++) {\r\n        if (this.friendRequests[j] == user.$key) {\r\n          return 2;\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"friends-friends-module-es5.js"}