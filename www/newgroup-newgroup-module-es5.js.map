{"version":3,"sources":["src/app/newgroup/newgroup.page.html","src/app/newgroup/newgroup.module.ts","src/app/newgroup/newgroup.page.scss","src/app/newgroup/newgroup.page.ts","src/environments/validator.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Create New Group</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button fill=\\\"outline\\\" (click)=\\\"done()\\\">Create</ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div *ngIf=\\\"group\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"3\\\" style=\\\"text-align:center; margin-top: 4rem;\\\">\\r\\n        <img src=\\\"{{group.img}}\\\" *ngIf=\\\"group.img != ''\\\" tappable (click)=\\\"setGroupPhoto()\\\"\\r\\n          onError=\\\"this.src='./assets/images/default-group.png'\\\" />\\r\\n        <img style=\\\"border-radius: 100%; width: 100px; height: 100px;\\\" src=\\\"{{group.img}}\\\"\\r\\n          onError=\\\"this.src='./assets/images/default-group.png'\\\" *ngIf=\\\"group.img == ''\\\" tappable\\r\\n          (click)=\\\"setGroupPhoto()\\\" />\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"9\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\">\\r\\n          <ion-list style=\\\"margin:0;\\\" lines=\\\"none\\\">\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Group Name</ion-label>\\r\\n              <ion-input formControlName=\\\"groupName\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Name of Group\\\">\\r\\n              </ion-input>\\r\\n              <div *ngFor=\\\"let validation of errorMessages.groupName\\\">\\r\\n                <p class=\\\"error\\\"\\r\\n                  *ngIf=\\\"myForm.get('groupName').hasError(validation.type) && (myForm.get('groupName').dirty || myForm.get('groupName').touched || submitAttempt) \\\">\\r\\n                  {{validation.message}}\\r\\n                </p>\\r\\n              </div>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Description</ion-label>\\r\\n              <ion-textarea formControlName=\\\"groupDescription\\\" rows=\\\"3\\\" [(ngModel)]=\\\"description\\\"\\r\\n                placeholder=\\\"Describe this Group\\\"></ion-textarea>\\r\\n              <div *ngFor=\\\"let validation of errorMessages.groupDescription\\\">\\r\\n                <p class=\\\"error\\\"\\r\\n                  *ngIf=\\\"myForm.get('groupDescription').hasError(validation.type) && (myForm.get('groupDescription').dirty || myForm.get('groupDescription').touched || submitAttempt) \\\">\\r\\n                  {{validation.message}}\\r\\n                </p>\\r\\n              </div>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Group Tags</ion-label>\\r\\n              <ion-textarea formControlName=\\\"groupTags\\\" rows=\\\"3\\\" [(ngModel)]=\\\"groupTags\\\"\\r\\n                placeholder=\\\"Add Group Tags in each line.\\\"></ion-textarea>\\r\\n              <div *ngFor=\\\"let validation of errorMessages.groupTags\\\">\\r\\n                <p class=\\\"error\\\"\\r\\n                  *ngIf=\\\"myForm.get('groupTags').hasError(validation.type) && (myForm.get('groupTags').dirty || myForm.get('groupTags').touched || submitAttempt) \\\">\\r\\n                  {{validation.message}}\\r\\n                </p>\\r\\n              </div>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <div *ngIf=\\\"groupMembers\\\">\\r\\n      <ion-list-header>\\r\\n        Group Members ({{groupMembers.length}})\\r\\n      </ion-list-header>\\r\\n      <ion-list lines=\\\"none\\\">\\r\\n        <ion-item  *ngFor=\\\"let member of groupMembers\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{member.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" />\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{member.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>{{member.username}}</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"removeFromGroup(member)\\\">Remove</ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n\\r\\n  \\r\\n    <ion-list-header>\\r\\n      Add New Members\\r\\n    </ion-list-header>\\r\\n    <div class=\\\"form\\\">\\r\\n      <!-- No friends to create a group. -->\\r\\n      <div class=\\\"empty\\\" *ngIf=\\\"friends && friends.length == 0\\\">\\r\\n        <p>You have no friends right now to start a group conversation.</p>\\r\\n      </div>\\r\\n      <!-- Show friends to add/remove to group. -->\\r\\n      <ion-list lines=\\\"none\\\" *ngIf=\\\"friends && friends.length > 0\\\">\\r\\n        <ion-searchbar [(ngModel)]=\\\"searchFriend\\\" placeholder=\\\"Search for friend or username\\\" showCancelButton=\\\"true\\\"\\r\\n          cancelButtonText=\\\"Done\\\"></ion-searchbar>\\r\\n        <ion-item *ngFor=\\\"let friend of friends | friendFilter:searchFriend\\\" (click)=\\\"addOrRemoveFromGroup(friend)\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{friend.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{friend.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>@{{friend.username}}</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"addToGroup(friend); $event.stopPropagation();\\\"\\r\\n            *ngIf=\\\"!inGroup(friend)\\\">Add</ion-button>\\r\\n          <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" color=\\\"primary\\\"\\r\\n            (click)=\\\"removeFromGroup(friend); $event.stopPropagation();\\\" *ngIf=\\\"inGroup(friend)\\\">Remove</ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewgroupPage } from './newgroup.page';\r\nimport { SharedModule } from '../services/share.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewgroupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NewgroupPage]\r\n})\r\nexport class NewgroupPageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ld2dyb3VwL25ld2dyb3VwLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ImageService } from '../services/image.service';\r\nimport { DataService } from '../services/data.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validator } from 'src/environments/validator';\r\n\r\n@Component({\r\n  selector: 'app-newgroup',\r\n  templateUrl: './newgroup.page.html',\r\n  styleUrls: ['./newgroup.page.scss'],\r\n})\r\nexport class NewgroupPage implements OnInit {\r\n\r\n  group: any;\r\n  groupForm: FormGroup;\r\n  friends: any;\r\n  searchFriend: any;\r\n  groupMembers: any;\r\n  alert: any;\r\n  name: any;\r\n  description: any;\r\n  groupTags: any;\r\n\r\n  myForm: FormGroup;\r\n  submitAttempt = false;\r\n  errorMessages: any = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public imageProvider: ImageService,\r\n    public dataProvider: DataService,\r\n    public alertCtrl: AlertController,\r\n    public firestore: AngularFirestore,\r\n    private afAuth: AngularFireAuth,\r\n    public loadingProvider: LoadingService,\r\n    public camera: Camera,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.errorMessages = Validator.errorMessages\r\n    this.myForm = this.formBuilder.group({\r\n      groupName: Validator.groupNameValidator,\r\n      groupDescription: Validator.groupDescriptionValidator,\r\n      groupTags: Validator.groupTagsValidator\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    // Initialize\r\n    this.group = {\r\n      img: './assets/images/default-group.png',\r\n      dateCreated: new Date().toString(),\r\n      messages: [],\r\n      members: [],\r\n      name: '',\r\n      description: '',\r\n      groupTags: []\r\n    };\r\n    this.searchFriend = '';\r\n\r\n    // Get user's friends to add to the group.\r\n    this.dataProvider.getCurrentUser().get().subscribe((accounts: any) => {\r\n      let account = accounts.data();\r\n      if (!this.groupMembers) {\r\n        this.groupMembers = [account];\r\n      }\r\n      if (account.friends) {\r\n        for (var i = 0; i < account.friends.length; i++) {\r\n          this.dataProvider.getUser(account.friends[i]).snapshotChanges().subscribe((friendRes: any) => {\r\n            if (friendRes.key != null) {\r\n              let friend = { $key: friendRes.key, ...friendRes.payload.data() };\r\n              this.addOrUpdateFriend(friend);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        this.friends = [];\r\n      }\r\n  });\r\n  }\r\n  // Add or update friend for real-time sync.\r\n  addOrUpdateFriend(friend) {\r\n    if (!this.friends) {\r\n      this.friends = [friend];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.friends.length; i++) {\r\n        if (this.friends[i].$key == friend.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.friends[index] = friend;\r\n      } else {\r\n        this.friends.push(friend);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Proceed with group creation.\r\n  done() {\r\n    this.submitAttempt = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.loadingProvider.show();\r\n      let messages = [];\r\n      // Add system message that group is created.\r\n      messages.push({\r\n        date: new Date().toString(),\r\n        sender: this.afAuth.auth.currentUser.uid,\r\n        type: 'system',\r\n        message: 'This group has been created.',\r\n        icon: 'md-chatbubbles'\r\n      });\r\n\r\n      // Add members of the group.\r\n      var members = [];\r\n      console.log('this.groupMembers:', this.groupMembers);\r\n      for (var i = 0; i < this.groupMembers.length; i++) {\r\n        members.push(this.groupMembers[i].userId);\r\n      }\r\n      // Add group info and date.\r\n      this.group.dateCreated = new Date().toString();\r\n      this.group.messages = messages;\r\n      this.group.members = members;\r\n      this.group.name = this.name;\r\n      this.group.description = this.description;\r\n      this.group.groupTags = this.groupTags.split('\\n');\r\n      console.log('Group Tags: ', this.group.groupTags);\r\n      // Add group to database.\r\n      console.log('this.group:', this.group);\r\n      this.firestore.collection('groups').add(this.group).then((success) => {\r\n        let groupId = success.id;\r\n        // Add group reference to users.\r\n        this.firestore.doc('/accounts/' + this.groupMembers[0].$key + '/groups/' + groupId).update({\r\n          messagesRead: 1\r\n        });\r\n        for (var i = 1; i < this.groupMembers.length; i++) {\r\n          this.firestore.doc('/accounts/' + this.groupMembers[i].$key + '/groups/' + groupId).update({\r\n            messagesRead: 0\r\n          });\r\n        }\r\n        this.router.navigateByUrl('/group/' + groupId);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Add friend to members of group.\r\n  addToGroup(friend) {\r\n    this.groupMembers.push(friend);\r\n  }\r\n\r\n  // Remove friend from members of group.\r\n  removeFromGroup(friend) {\r\n    var index = -1;\r\n    for (var i = 1; i < this.groupMembers.length; i++) {\r\n      if (this.groupMembers[i].$key == friend.$key) {\r\n        index = i;\r\n      }\r\n    }\r\n    if (index > -1) {\r\n      this.groupMembers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // Check if friend is already added to the group or not.\r\n  inGroup(friend) {\r\n    for (var i = 0; i < this.groupMembers.length; i++) {\r\n      if (this.groupMembers[i].$key == friend.$key) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Toggle to add/remove friend from the group.\r\n  addOrRemoveFromGroup(friend) {\r\n    if (this.inGroup(friend)) {\r\n      this.removeFromGroup(friend);\r\n    } else {\r\n      this.addToGroup(friend);\r\n    }\r\n  }\r\n\r\n  // Set group photo.\r\n  setGroupPhoto() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Set Group Photo',\r\n      message: 'Do you want to take a photo or choose from your photo gallery?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Choose from Gallery',\r\n          handler: () => {\r\n            this.imageProvider.setGroupPhoto(this.group, this.camera.PictureSourceType.PHOTOLIBRARY);\r\n          }\r\n        },\r\n        {\r\n          text: 'Take Photo',\r\n          handler: () => {\r\n            this.imageProvider.setGroupPhoto(this.group, this.camera.PictureSourceType.CAMERA);\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n}\r\n","import { Validators } from '@angular/forms';\r\n\r\nexport namespace Validator {\r\n\r\n    export const emailValidator = ['', [\r\n        Validators.required,\r\n        Validators.pattern('^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$')]\r\n    ];\r\n\r\n    export const passwordValidator = ['', [\r\n        Validators.required, Validators.minLength(6)\r\n    ]]\r\n\r\n    export const nameValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const usernameValidator = ['', [\r\n        Validators.required,\r\n        Validators.minLength(5)\r\n    ]]\r\n\r\n    export const bioValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const groupNameValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const groupDescriptionValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const groupTagsValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const errorMessages = {\r\n        email: [\r\n            { type: 'required', message: 'Email is required' },\r\n            { type: 'pattern', message: 'Email looks like invalid' },\r\n        ],\r\n        password: [\r\n            { type: 'required', message: 'Password is required' },\r\n            { type: 'minlength', message: 'Password must be 6 char' },\r\n        ],\r\n        name: [\r\n            { type: 'required', message: 'Name is required' },\r\n        ],\r\n        username: [\r\n            { type: 'required', message: 'Username is required' },\r\n            { type: 'minlength', message: 'Username must be 5 char' },\r\n        ],\r\n        bio: [\r\n            { type: 'required', message: 'Bio is required' },\r\n        ],\r\n        groupName: [\r\n            { type: 'required', message: 'Group Name is required' },\r\n        ],\r\n        groupDescription: [\r\n            { type: 'required', message: 'Group Description is required' },\r\n        ],\r\n\r\n    }\r\n\t\r\n\t// Poll Form Validators\r\n  export const pollNameValidator = ['', [Validators.required, Validators.minLength(1)]];\r\n  export const pollDescriptionValidator = ['', [Validators.required, Validators.minLength(1)]];\r\n  export const pollOption1Validator = ['', [Validators.required, Validators.minLength(1)]];\r\n  export const pollOption2Validator = ['', [Validators.required, Validators.minLength(1)]];\r\n}"],"sourceRoot":"webpack:///","file":"newgroup-newgroup-module-es5.js"}