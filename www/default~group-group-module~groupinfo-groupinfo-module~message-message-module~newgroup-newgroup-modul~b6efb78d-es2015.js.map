{"version":3,"sources":["./src/app/services/image.service.ts"],"names":[],"mappings":"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","file":"default~group-group-module~groupinfo-groupinfo-module~message-message-module~newgroup-newgroup-modul~b6efb78d-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport * as firebase from 'firebase';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { MediaCapture } from '@ionic-native/media-capture/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { LoadingService } from './loading.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n\r\n  private profilePhotoOptions: CameraOptions = {\r\n    quality: 50,\r\n    targetWidth: 384,\r\n    targetHeight: 384,\r\n    destinationType: this.camera.DestinationType.DATA_URL,\r\n    encodingType: this.camera.EncodingType.JPEG,\r\n    correctOrientation: true\r\n  };\r\n\r\n  private photoMessageOptions: CameraOptions = {\r\n    quality: 50,\r\n    destinationType: this.camera.DestinationType.DATA_URL,\r\n    encodingType: this.camera.EncodingType.JPEG,\r\n    correctOrientation: true,\r\n    allowEdit: true\r\n  };\r\n\r\n  private groupPhotoOptions: CameraOptions = {\r\n    quality: 50,\r\n    targetWidth: 384,\r\n    targetHeight: 384,\r\n    destinationType: this.camera.DestinationType.DATA_URL,\r\n    encodingType: this.camera.EncodingType.JPEG,\r\n    correctOrientation: true\r\n  };\r\n\r\n\r\n  constructor(\r\n    public angularfire: AngularFireDatabase,\r\n    public loadingProvider: LoadingService,\r\n    public camera: Camera,\r\n    public mediaCapture: MediaCapture,\r\n    public file: File) {\r\n    console.log(\"Initializing Image Provider\");\r\n  }\r\n\r\n  // Function to convert dataURI to Blob needed by Firebase\r\n  imgURItoBlob(dataURI) {\r\n    var binary = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var array = [];\r\n    for (var i = 0; i < binary.length; i++) {\r\n      array.push(binary.charCodeAt(i));\r\n    }\r\n    return new Blob([new Uint8Array(array)], {\r\n      type: mimeString\r\n    });\r\n  }\r\n\r\n  // Generate a random filename of length for the image to be uploaded\r\n  generateFilename() {\r\n    var length = 8;\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text + \".jpg\";\r\n  }\r\n\r\n  // Set ProfilePhoto given the user and the cameraSourceType.\r\n  // This function processes the imageURI returned and uploads the file on Firebase,\r\n  // Finally the user data on the database is updated.\r\n  setProfilePhoto(user, sourceType) {\r\n    console.log(user);\r\n    this.profilePhotoOptions.sourceType = sourceType;\r\n    this.loadingProvider.show();\r\n    // Get picture from camera or gallery.\r\n    this.camera.getPicture(this.profilePhotoOptions).then((imageData) => {\r\n      // Process the returned imageURI.\r\n      let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\r\n      let metadata = {\r\n        'contentType': imgBlob.type\r\n      };\r\n      let name = this.generateFilename();\r\n      let dpStorageRef = firebase.storage().ref().child('images/' + user.userId + '/' + name);\r\n      // Generate filename and upload to Firebase Storage.\r\n      dpStorageRef.put(imgBlob, metadata).then((snapshot) => {\r\n        // Delete previous profile photo on Storage if it exists.\r\n        // this.deleteImageFile(user.img);\r\n        // URL of the uploaded image!\r\n        console.log(snapshot);\r\n\r\n\r\n        dpStorageRef.getDownloadURL().then(res => {\r\n          console.log(res);\r\n          let url = res;\r\n\r\n          let profile = {\r\n            displayName: user.name,\r\n            photoURL: url\r\n          };\r\n          // Update Firebase User.\r\n          firebase.auth().currentUser.updateProfile(profile)\r\n            .then((success) => {\r\n              // Update User Data on Database.\r\n              this.angularfire.object('/accounts/' + user.userId).update({\r\n                img: url\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Profile Updated\");\r\n              }).catch((error) => {\r\n                console.log(error);\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\");\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              this.loadingProvider.hide();\r\n              this.loadingProvider.showToast(\"Something went wrong\");\r\n            });\r\n\r\n        });\r\n\r\n\r\n\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        this.loadingProvider.hide();\r\n        this.loadingProvider.showToast(\"Something went wrong\");\r\n      });\r\n    }).catch((error) => {\r\n      this.loadingProvider.hide();\r\n    });\r\n  }\r\n\r\n  // Upload and set the group object's image.\r\n  setGroupPhoto(group, sourceType) {\r\n    this.groupPhotoOptions.sourceType = sourceType;\r\n    this.loadingProvider.show();\r\n    // Get picture from camera or gallery.\r\n    this.camera.getPicture(this.groupPhotoOptions).then((imageData) => {\r\n      // Process the returned imageURI.\r\n      let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\r\n      let metadata = {\r\n        'contentType': imgBlob.type\r\n      };\r\n\r\n      let name = this.generateFilename();\r\n      let groupStorageRef = firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + name);\r\n      groupStorageRef.put(imgBlob, metadata).then((snapshot) => {\r\n        // this.deleteImageFile(group.img);\r\n        // URL of the uploaded image!\r\n        groupStorageRef.getDownloadURL().then(url => {\r\n          group.img = url;\r\n          this.loadingProvider.hide();\r\n        })\r\n\r\n      }).catch((error) => {\r\n        this.loadingProvider.hide();\r\n        this.loadingProvider.showToast(\"Something went wrong\");\r\n      });\r\n    }).catch((error) => {\r\n      this.loadingProvider.hide();\r\n    });\r\n  }\r\n\r\n  // Set group photo and return the group object as promise.\r\n  setGroupPhotoPromise(group, sourceType): Promise<any> {\r\n    return new Promise(resolve => {\r\n      this.groupPhotoOptions.sourceType = sourceType;\r\n      this.loadingProvider.show();\r\n      // Get picture from camera or gallery.\r\n      this.camera.getPicture(this.groupPhotoOptions).then((imageData) => {\r\n        // Process the returned imageURI.\r\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\r\n        let metadata = {\r\n          'contentType': imgBlob.type\r\n        };\r\n        let gPPStorageRef = firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + this.generateFilename());\r\n        gPPStorageRef.put(imgBlob, metadata).then((snapshot) => {\r\n          this.deleteImageFile(group.img);\r\n          // URL of the uploaded image!\r\n          gPPStorageRef.getDownloadURL().then(url => {\r\n            group.img = url;\r\n            this.loadingProvider.hide();\r\n            resolve(group);\r\n          })\r\n\r\n        }).catch((error) => {\r\n          this.loadingProvider.hide();\r\n          this.loadingProvider.showToast(\"Something went wrong\");\r\n        });\r\n      }).catch((error) => {\r\n        this.loadingProvider.hide();\r\n      });\r\n    });\r\n  }\r\n\r\n  //Delete the image given the url.\r\n  deleteImageFile(path) {\r\n    var fileName = path.substring(path.lastIndexOf('%2F') + 3, path.lastIndexOf('?'));\r\n    firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\r\n  }\r\n\r\n  //Delete the user.img given the user.\r\n  deleteUserImageFile(user) {\r\n    var fileName = user.img.substring(user.img.lastIndexOf('%2F') + 3, user.img.lastIndexOf('?'));\r\n    firebase.storage().ref().child('images/' + user.userId + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\r\n  }\r\n\r\n  // Delete group image file on group storage reference.\r\n  deleteGroupImageFile(groupId, path) {\r\n    var fileName = path.substring(path.lastIndexOf('%2F') + 3, path.lastIndexOf('?'));\r\n    firebase.storage().ref().child('images/' + groupId + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\r\n  }\r\n\r\n  // Upload photo message and return the url as promise.\r\n  uploadPhotoMessage(conversationId, sourceType): Promise<any> {\r\n    return new Promise(resolve => {\r\n      this.photoMessageOptions.sourceType = sourceType;\r\n      this.loadingProvider.show();\r\n      // Get picture from camera or gallery.\r\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\r\n        // Process the returned imageURI.\r\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\r\n        let metadata = {\r\n          'contentType': imgBlob.type\r\n        };\r\n        // Generate filename and upload to Firebase Storage.\r\n        let upRef = firebase.storage().ref().child('images/' + conversationId + '/' + this.generateFilename());\r\n        upRef.put(imgBlob, metadata).then((snapshot) => {\r\n          // URL of the uploaded image!\r\n          upRef.getDownloadURL().then(url => {\r\n            this.loadingProvider.hide();\r\n            resolve(url);\r\n          })\r\n\r\n        }).catch((error) => {\r\n          this.loadingProvider.hide();\r\n          this.loadingProvider.showToast(\"Something went wrong\");\r\n        });\r\n      }).catch((error) => {\r\n        this.loadingProvider.hide();\r\n      });\r\n    });\r\n  }\r\n\r\n  // Upload group photo message and return a promise as url.\r\n  uploadGroupPhotoMessage(groupId, sourceType): Promise<any> {\r\n    return new Promise(resolve => {\r\n      this.photoMessageOptions.sourceType = sourceType;\r\n      this.loadingProvider.show();\r\n      // Get picture from camera or gallery.\r\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\r\n        // Process the returned imageURI.\r\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\r\n        let metadata = {\r\n          'contentType': imgBlob.type\r\n        };\r\n        // Generate filename and upload to Firebase Storage.\r\n        let ugpRef = firebase.storage().ref().child('images/' + groupId + '/' + this.generateFilename());\r\n        ugpRef.put(imgBlob, metadata).then((snapshot) => {\r\n          // URL of the uploaded image!\r\n          ugpRef.getDownloadURL().then(url => {\r\n            this.loadingProvider.hide();\r\n            resolve(url);\r\n          })\r\n\r\n        }).catch((error) => {\r\n          this.loadingProvider.hide();\r\n          this.loadingProvider.showToast(\"Something went wrong\");\r\n        });\r\n      }).catch((error) => {\r\n        this.loadingProvider.hide();\r\n      });\r\n    });\r\n  }\r\n  uploadGroupVideoMessage(groupId): Promise<any> {\r\n    return new Promise(resolve => {\r\n      this.loadingProvider.show();\r\n      this.mediaCapture.captureVideo().then(data => {\r\n        let videoUrl = data[0].fullPath;\r\n        console.log(\"video path: \" + videoUrl);\r\n        let x = videoUrl.split(\"/\");\r\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\r\n        let name = x[x.length - 1];\r\n        console.log(filepath + \" - \" + name);\r\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\r\n          console.log(success);\r\n          let blob = new Blob([success], { type: \"video/mp4\" });\r\n          console.log(blob);\r\n          let upload = firebase.storage().ref().child('videos/' + groupId + \"/\" + name).put(blob);\r\n          upload.then(res => {\r\n            let process = res.bytesTransferred / res.totalBytes * 100;\r\n            console.log(process);\r\n            this.loadingProvider.hide();\r\n\r\n            resolve(res.downloadURL);\r\n          }, err => {\r\n            this.loadingProvider.hide();\r\n            console.log(\"Failed\")\r\n          });\r\n\r\n        });\r\n      }, err => {\r\n        this.loadingProvider.hide();\r\n        console.log(\"Media Err = \" + err);\r\n      });\r\n    });\r\n  }\r\n\r\n  uploadVideoMessage(conversationId): Promise<any> {\r\n    return new Promise(resolve => {\r\n      this.loadingProvider.show();\r\n      this.mediaCapture.captureVideo().then(data => {\r\n        let videoUrl = data[0].fullPath;\r\n        console.log(\"video path: \" + videoUrl);\r\n        let x = videoUrl.split(\"/\");\r\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\r\n        let name = x[x.length - 1];\r\n        console.log(filepath + \" - \" + name);\r\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\r\n          console.log(success);\r\n          let blob = new Blob([success], { type: \"video/mp4\" });\r\n          console.log(blob);\r\n          // let timestamp = (Math.floor(Date.now() / 1000)).toString();\r\n\r\n          let uploadRef = firebase.storage().ref().child('videos/' + name);\r\n          uploadRef.put(blob).then(res => {\r\n            let process = res.bytesTransferred / res.totalBytes * 100;\r\n            console.log(process);\r\n            this.loadingProvider.hide();\r\n            uploadRef.getDownloadURL().then(url => {\r\n              resolve(url);\r\n            })\r\n\r\n          }, err => {\r\n            this.loadingProvider.hide();\r\n            console.log(\"Failed\")\r\n          });\r\n        });\r\n      }, err => {\r\n        this.loadingProvider.hide();\r\n        console.log(\"Media Err = \" + err);\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}