{"version":3,"sources":["webpack:///src/app/addmembers/addmembers.page.ts","webpack:///src/app/addmembers/addmembers.page.html","webpack:///src/app/addmembers/addmembers.page.scss","webpack:///src/app/addmembers/addmembers.module.ts"],"names":["AddmembersPage","router","route","dataProvider","loadingProvider","firestore","alertCtrl","groupId","snapshot","params","id","searchFriend","toAdd","show","getCurrentUser","then","u","snapshotChanges","subscribe","user","payload","data","getGroup","group","groupMembers","members","forEach","memberId","getUser","member","addOrUpdateMember","account","friends","i","length","friendRes","friend","$key","key","console","log","isMember","addOrUpdateFriend","hide","isAdded","remove","add","index","push","splice","indexOf","names","name","substring","create","header","message","getNames","buttons","text","handler","doc","update","messagesRead","messages","date","Date","toString","sender","userId","type","icon","r","present","selector","template","routes","path","component","AddmembersPageModule","imports","forChild","declarations"],"mappings":"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","file":"addmembers-addmembers-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../services/data.service';\nimport { LoadingService } from '../services/loading.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-addmembers',\n  templateUrl: './addmembers.page.html',\n  styleUrls: ['./addmembers.page.scss'],\n})\nexport class AddmembersPage implements OnInit {\n\n  groupId: any;\n  group: any;\n  groupMembers: any;\n  friends: any;\n  searchFriend: any;\n  toAdd: any;\n  user: any;\n  // AddMemberPage\n  // This is the page where the user can add their friends to an existing group.\n  // The user can only add their friends to the group.\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    public dataProvider: DataService,\n    public loadingProvider: LoadingService,\n    public firestore: AngularFirestore,\n    public alertCtrl: AlertController,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter() {\n    // Initialize\n    this.groupId = this.route.snapshot.params.id;\n\n    this.searchFriend = '';\n    this.toAdd = [];\n    this.loadingProvider.show();\n\n    // Get user information for system message sent to the group when a member was added.\n    this.dataProvider.getCurrentUser().then((u) => {\n      u.snapshotChanges().subscribe((user: any) => {\n        this.user = user.payload.data();\n    });\n    })\n\n    // Get group information\n    this.dataProvider.getGroup(this.groupId).snapshotChanges().subscribe((group: any) => {\n      this.group = group.payload.data();\n      this.groupMembers = null;\n      // Get group members\n      if (group.payload.data().members) {\n        group.payload.data().members.forEach((memberId) => {\n          this.dataProvider.getUser(memberId).snapshotChanges().subscribe((member) => {\n              this.addOrUpdateMember(member);\n            });\n        });\n        // Get user's friends to add\n        this.dataProvider.getCurrentUser().then((u) => {\n          u.snapshotChanges().subscribe((user: any) => {\n            let account = user.payload.data();\n            if (account.friends) {\n              for (var i = 0; i < account.friends.length; i++) {\n                this.dataProvider.getUser(account.friends[i]).snapshotChanges().subscribe((friendRes: any) => {\n                  // Only friends that are not yet a member of this group can be added.\n                  let friend = { $key: friendRes.key, ...friendRes.payload.data() };\n                  console.log(friend)\n                  if (!this.isMember(friend)) {\n                    this.addOrUpdateFriend(friend);\n                  }\n                });\n              }\n              if (!this.friends) {\n                this.friends = [];\n              }\n            } else {\n              this.friends = [];\n            }\n        });\n        })\n      }\n      console.log(this.friends);\n      this.loadingProvider.hide();\n    });\n  }\n\n  // Check if friend is a member of the group or not.\n  isMember(friend) {\n    if (this.groupMembers) {\n      for (var i = 0; i < this.groupMembers.length; i++) {\n        if (this.groupMembers[i].$key == friend.$key) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // Check if friend is already on the list of members to be added.\n  isAdded(friend) {\n    if (this.toAdd) {\n      for (var i = 0; i < this.toAdd.length; i++) {\n        if (this.toAdd[i].$key == friend.$key) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // Toggle for adding/removing friend on the list of members to be added.\n  addOrRemove(friend) {\n    if (this.isAdded(friend)) {\n      this.remove(friend);\n    } else {\n      this.add(friend);\n    }\n  }\n\n  // Add or update friend information for real-time sync.\n  addOrUpdateFriend(friend) {\n    if (!this.friends) {\n      this.friends = [friend];\n    } else {\n      var index = -1;\n      for (var i = 0; i < this.friends.length; i++) {\n        if (this.friends[i].$key == friend.$key) {\n          index = i;\n        }\n      }\n      if (index > -1) {\n        this.friends[index] = friend;\n      } else {\n        this.friends.push(friend);\n      }\n    }\n  }\n\n  // Add or update member information for real-time sync.\n  addOrUpdateMember(member) {\n    if (!this.groupMembers) {\n      this.groupMembers = [member];\n    } else {\n      var index = -1;\n      for (var i = 0; i < this.groupMembers.length; i++) {\n        if (this.groupMembers[i].$key == member.$key) {\n          index = i;\n        }\n      }\n      if (index > -1) {\n        this.groupMembers[index] = member;\n      } else {\n        this.groupMembers.push(member);\n      }\n    }\n  }\n\n  // Add friend to the list of to be added.\n  add(friend) {\n    this.toAdd.push(friend);\n  }\n\n  // Remove friend from the list of to be added.\n  remove(friend) {\n    this.toAdd.splice(this.toAdd.indexOf(friend), 1);\n  }\n  // Get names of the members to be added to the group.\n  getNames() {\n    var names = '';\n    this.toAdd.forEach((friend) => {\n      names += friend.name + ', ';\n    });\n    return names.substring(0, names.length - 2);\n  }\n\n  // Confirm adding of new members, afterwards add the members.\n  done() {\n    this.alertCtrl.create({\n      header: 'Add Members',\n      message: 'Are you sure you want to add <b>' + this.getNames() + '</b> to the group?',\n      buttons: [\n        {\n          text: 'Cancel'\n        },\n        {\n          text: 'Add',\n          handler: data => {\n            // Proceed\n            this.loadingProvider.show();\n            this.toAdd.forEach((friend) => {\n              // Add groupInfo to each friend added to the group.\n              this.firestore.doc('/accounts/' + friend.$key + '/groups/' + this.groupId).update({\n                messagesRead: 0\n              });\n              // Add friend as members of the group.\n              console.log(friend.$key);\n              console.log(this.group.members);\n              this.group.members.push(friend.$key);\n              // Add system message that the members are added to the group.\n              this.group.messages.push({\n                date: new Date().toString(),\n                sender: this.user.userId,\n                type: 'system',\n                message: this.user.name + ' has added ' + this.getNames() + ' to the group.',\n                icon: 'md-contacts'\n              });\n            });\n            // Update group data on the database.\n            this.dataProvider.getGroup(this.groupId).update({\n              members: this.group.members,\n              messages: this.group.messages\n            }).then(() => {\n              // Back.\n              this.loadingProvider.hide();\n            });\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primart\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Add Memebers</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"done()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- All friends already in the group. -->\\n  <div class=\\\"empty-list\\\" *ngIf=\\\"friends && friends.length == 0\\\">\\n    <h1>\\n      <ion-icon name=\\\"md-contacts\\\"></ion-icon>\\n    </h1>\\n    <p>Uh-oh! Sorry but your friends are already a member of this group.</p>\\n  </div>\\n  <!-- Add/Cancel Add friends to the group. -->\\n  <ion-list lines=\\\"none\\\" *ngIf=\\\"friends && friends.length > 0\\\">\\n    <ion-searchbar [(ngModel)]=\\\"searchFriend\\\" placeholder=\\\"Search for friend or username\\\" showCancelButton=\\\"true\\\"\\n      cancelButtonText=\\\"Done\\\"></ion-searchbar>\\n    <ion-item *ngFor=\\\"let friend of friends | friendFilter:searchFriend\\\" (click)=\\\"addOrRemove(friend)\\\">\\n\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"{{friend.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <ion-text>\\n          <h2>{{friend.name}}</h2>\\n        </ion-text>\\n        <ion-text>\\n          <p>@{{friend.username}}</p>\\n        </ion-text>\\n      </ion-label>\\n      <ion-button size=\\\"small\\\" slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"add(friend); $event.stopPropagation();\\\"\\n        *ngIf=\\\"!isAdded(friend)\\\">Add</ion-button>\\n      <ion-button size=\\\"small\\\" slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"remove(friend); $event.stopPropagation();\\\"\\n        *ngIf=\\\"isAdded(friend)\\\">Remove</ion-button>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZG1lbWJlcnMvYWRkbWVtYmVycy5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddmembersPage } from './addmembers.page';\nimport { SharedModule } from '../services/share.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddmembersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddmembersPage]\n})\nexport class AddmembersPageModule { }\n"]}