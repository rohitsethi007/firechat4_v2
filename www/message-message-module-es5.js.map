{"version":3,"sources":["webpack:///src/app/message/message.module.ts","webpack:///src/app/message/message.page.ts","webpack:///src/app/message/message.page.html","webpack:///src/app/message/message.page.scss"],"names":["routes","path","component","MessagePageModule","imports","forChild","declarations","MessagePage","router","route","dataProvider","firestore","loadingProvider","alertCtrl","imageProvider","modalCtrl","camera","keyboard","actionSheet","contacts","geolocation","startIndex","numberOfMessages","ngOnInit","scrollBottom","ionViewDidEnter","userId","snapshot","params","id","loggedInUserId","auth","currentUser","uid","console","log","getUser","snapshotChanges","subscribe","user","title","payload","data","name","doc","conversation","conversationId","getConversationMessages","messagesRes","messages","length","message","sender","avatar","img","push","messagesToShow","forEach","i","hide","that","updateDateTime","setInterval","date","Date","loadPreviousMessages","show","setTimeout","scrollTop","ionViewWillLeave","setMessagesRead","database","ref","once","snap","val","update","messagesRead","contentArea","scrollToBottom","scrollToTop","isSender","send","type","JSON","parse","stringify","toString","getConversation","users","collection","add","dateCreated","then","success","set","viewUser","navigateByUrl","attach","create","header","buttons","text","handler","uploadPhotoMessage","PictureSourceType","CAMERA","url","PHOTOLIBRARY","uploadVideoMessage","getCurrentPosition","timeout","res","locationMessage","coords","latitude","longitude","mapUrl","confirm","r","present","locationErr","pickContact","displayName","givenName","familyName","phoneNumbers","value","err","role","enlargeImage","componentProps","selector","template"],"mappings":"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","file":"message-message-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagePage } from './message.page';\nimport { SharedModule } from '../services/share.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MessagePage]\n})\nexport class MessagePageModule {}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { DataService } from '../services/data.service';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { ActionSheetController, AlertController, ModalController, IonContent } from '@ionic/angular';\nimport { LoadingService } from '../services/loading.service';\nimport { ImageService } from '../services/image.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Contacts } from '@ionic-native/contacts/ngx';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { ImagemodalPage } from '../imagemodal/imagemodal.page';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n\n  @ViewChild(IonContent, null) contentArea: IonContent;\n\n  userId: any;\n  title: any;\n  message: any;\n  conversationId: any;\n  messages: any;\n  updateDateTime: any;\n  messagesToShow: any;\n  startIndex: any = -1;\n  // Set number of messages to show.\n  numberOfMessages = 10;\n  loggedInUserId: any;\n\n  // MessagePage\n  // This is the page where the user can chat with a friend.\n  constructor(\n    // public navCtrl: NavController,\n    // public navParams: NavParams,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dataProvider: DataService,\n    public firestore: AngularFirestore,\n    public loadingProvider: LoadingService,\n    public alertCtrl: AlertController,\n    public imageProvider: ImageService,\n    public modalCtrl: ModalController,\n    public camera: Camera,\n    public keyboard: Keyboard,\n    public actionSheet: ActionSheetController,\n    public contacts: Contacts,\n    public geolocation: Geolocation\n  ) { }\n\n  ngOnInit() {\n    this.scrollBottom();\n  }\n\n  ionViewDidEnter() {\n    this.userId = this.route.snapshot.params.id;\n    this.loggedInUserId = firebase.default.auth().currentUser.uid;\n    console.log(this.userId);\n\n    // Get friend details.\n    this.dataProvider.getUser(this.userId).snapshotChanges().subscribe((user: any) => {\n      this.title = user.payload.data().name;\n    });\n\n    // Get conversationInfo with friend.\n    // tslint:disable-next-line: max-line-length\n    this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).snapshotChanges().subscribe((conversation: any) => {\n      if (conversation.payload.data()) {\n        // User already have conversation with this friend, get conversation\n        this.conversationId = conversation.payload.data().conversationId;\n        // Get conversation\n        this.dataProvider.getConversationMessages(this.conversationId).snapshotChanges().subscribe((messagesRes: any) => {\n          let messages = messagesRes.payload.data().messages;\n          if (messages == null) {\n            messages = [];\n          }\n          if (this.messages) {\n            // Just append newly added messages to the bottom of the view.\n            if (messages.length > this.messages.length) {\n              let message = messages[messages.length - 1];\n\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                message.avatar = user.payload.data().img;\n              });\n              this.messages.push(message);\n              this.messagesToShow.push(message);\n            }\n          } else {\n            // Get all messages, this will be used as reference object for messagesToShow.\n            this.messages = [];\n            messages.forEach((message) => {\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\n                message.avatar = user.payload.data().img;\n              });\n              this.messages.push(message);\n            });\n            // Load messages in relation to numOfMessages.\n            if (this.startIndex === -1) {\n              // Get initial index for numberOfMessages to show.\n              if ((this.messages.length - this.numberOfMessages) > 0) {\n                this.startIndex = this.messages.length - this.numberOfMessages;\n              } else {\n                this.startIndex = 0;\n              }\n            }\n            if (!this.messagesToShow) {\n              this.messagesToShow = [];\n            }\n            // Set messagesToShow\n            for (let i = this.startIndex; i < this.messages.length; i++) {\n              this.messagesToShow.push(this.messages[i]);\n            }\n            this.loadingProvider.hide();\n          }\n        });\n      }\n    });\n\n    // Update messages' date time elapsed every minute based on Moment.js.\n    var that = this;\n    if (!that.updateDateTime) {\n      that.updateDateTime = setInterval(function () {\n        if (that.messages) {\n          that.messages.forEach((message) => {\n            let date = message.date;\n            message.date = new Date(date);\n          });\n        }\n      }, 60000);\n    }\n\n    this.scrollBottom();\n  }\n  // Load previous messages in relation to numberOfMessages.\n  loadPreviousMessages() {\n    var that = this;\n    // Show loading.\n    this.loadingProvider.show();\n    setTimeout(function () {\n      // Set startIndex to load more messages.\n      if ((that.startIndex - that.numberOfMessages) > -1) {\n        that.startIndex -= that.numberOfMessages;\n      } else {\n        that.startIndex = 0;\n      }\n      // Refresh our messages list.\n      that.messages = null;\n      that.messagesToShow = null;\n\n      that.scrollTop();\n\n      // Populate list again.\n      that.ionViewDidEnter();\n    }, 1000);\n  }\n\n  // Update messagesRead when user lefts this page.\n  ionViewWillLeave() {\n    this.setMessagesRead();\n  }\n\n  // Check if currentPage is active, then update user's messagesRead.\n  setMessagesRead() {\n    firebase.default.database().ref('/conversations/' + this.conversationId + '/messages').once('value', snap => {\n      console.log(snap.val());\n\n      if (snap.val() != null) {\n        this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).update({\n          messagesRead: snap.val().length\n        });\n      }\n    });\n  }\n\n  scrollBottom() {\n    console.log(\"Calling Sb\")\n    setTimeout(() => {\n      if (this.contentArea.scrollToBottom) {\n        this.contentArea.scrollToBottom();\n      }\n    }, 500);\n    this.setMessagesRead();\n  }\n\n  scrollTop() {\n    console.log(\"Calling St\")\n    setTimeout(() => {\n      if (this.contentArea.scrollToTop) {\n        this.contentArea.scrollToTop();\n      }\n    }, 500);\n  }\n\n\n  // Check if the user is the sender of the message.\n  isSender(message) {\n    if (message.sender == this.loggedInUserId) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  // Send message, if there's no conversation yet, create a new conversation.\n  send(type) {\n    if (this.message) {\n      // User entered a text on messagebox\n      if (this.conversationId) {\n        let messages = JSON.parse(JSON.stringify(this.messages));\n        messages.push({\n          date: new Date().toString(),\n          sender: this.loggedInUserId,\n          type: type,\n          message: this.message\n        });\n\n        // Update conversation on database.\n        this.dataProvider.getConversation(this.conversationId).update({\n          messages: messages\n        });\n        // Clear messagebox.\n        this.message = '';\n        this.scrollBottom();\n      } else {\n        console.log(\"else\")\n        // New Conversation with friend.\n        var messages = [];\n        messages.push({\n          date: new Date().toString(),\n          sender: this.loggedInUserId,\n          type: type,\n          message: this.message\n        });\n        var users = [];\n        users.push(this.loggedInUserId);\n        users.push(this.userId);\n        // Add conversation.\n        this.firestore.collection('conversations').add({\n          dateCreated: new Date().toString(),\n          messages: messages,\n          users: users\n        }).then((success) => {\n          let conversationId = success.id;\n          this.message = '';\n          // Add conversation reference to the users.\n          this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).set({\n            conversationId,\n            messagesRead: 1\n          });\n          this.firestore.doc('/accounts/' + this.userId + '/conversations/' + this.loggedInUserId).set({\n            conversationId,\n            messagesRead: 0\n          });\n        });\n        this.scrollBottom();\n      }\n    }\n  }\n\n  viewUser(userId) {\n    this.router.navigateByUrl('userinfo/' + userId);\n  }\n\n\n  attach() {\n    this.actionSheet.create({\n      header: 'Choose attachments',\n      buttons: [{\n        text: 'Camera',\n        handler: () => {\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.CAMERA).then((url) => {\n            this.message = url;\n            this.send(\"image\");\n          });\n        }\n      }, {\n        text: 'Photo Library',\n        handler: () => {\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.PHOTOLIBRARY).then((url) => {\n            this.message = url;\n            this.send(\"image\");\n          });\n        }\n      },\n      {\n        text: 'Video',\n        handler: () => {\n          this.imageProvider.uploadVideoMessage(this.conversationId).then(url => {\n            this.message = url;\n            this.send(\"video\");\n          });\n        }\n      }\n        , {\n        text: 'Location',\n        handler: () => {\n          this.geolocation.getCurrentPosition({\n            timeout: 5000\n          }).then(res => {\n            let locationMessage = \"Location:<br> lat:\" + res.coords.latitude + \"<br> lng:\" + res.coords.longitude;\n            let mapUrl = \"<a href='https://www.google.com/maps/search/\" + res.coords.latitude + \",\" + res.coords.longitude + \"'>View on Map</a>\";\n\n            let confirm = this.alertCtrl.create({\n              header: 'Your Location',\n              message: locationMessage,\n              buttons: [{\n                text: 'cancel',\n                handler: () => {\n                  console.log(\"canceled\");\n                }\n              }, {\n                text: 'Share',\n                handler: () => {\n                  this.message = locationMessage + \"<br>\" + mapUrl;\n                  this.send(\"location\");\n                }\n              }]\n            }).then(r => r.present());\n          }, locationErr => {\n            console.log(\"Location Error\" + JSON.stringify(locationErr));\n          });\n        }\n      }, {\n        text: 'Contact',\n        handler: () => {\n          this.contacts.pickContact().then(data => {\n            let name;\n            if (data.displayName !== null) name = data.displayName;\n            else name = data.name.givenName + \" \" + data.name.familyName;\n            this.message = \"<b>Name:</b> \" + name + \"<br><b>Mobile:</b> <a href='tel:\" + data.phoneNumbers[0].value + \"'>\" + data.phoneNumbers[0].value + \"</a>\";\n            this.send(\"contact\");\n          }, err => {\n            console.log(err);\n          })\n        }\n      }, {\n        text: 'cancel',\n        role: 'cancel',\n        handler: () => {\n          console.log(\"cancelled\");\n        }\n      }]\n    }).then(r => r.present());\n  }\n\n  // Enlarge image messages.\n  enlargeImage(img) {\n    this.modalCtrl.create({\n      component: ImagemodalPage,\n      componentProps: {\n        img\n      }\n    }).then(res => {\n      res.present();\n    });\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title (click)=\\\"viewUser(userId)\\\">{{title}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [scrollEvents]=\\\"true\\\" #content>\\n  <div class=\\\"messages\\\" #contentArea>\\n    <p class=\\\"center\\\" *ngIf=\\\"startIndex > 0\\\"><span tappable (click)=\\\"loadPreviousMessages()\\\">Load previous\\n        messages</span></p>\\n    <div *ngFor=\\\"let message of messagesToShow\\\">\\n      <div *ngIf=\\\"isSender(message)\\\" class=\\\"chatbox right sender\\\">\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\n        </div>\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\n        </div>\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\n          <video controls width=\\\"100%\\\">\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\n          </video>\\n        </div>\\n        <span>{{message.date | DateFormat}}</span>\\n      </div>\\n      <div *ngIf=\\\"!isSender(message)\\\" class=\\\"chatbox left\\\">\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\n        </div>\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\n        </div>\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\n          <video controls width=\\\"100%\\\">\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\n          </video>\\n        </div>\\n        <span>{{message.date | DateFormat}}</span>\\n      </div>\\n    </div>\\n\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-item class=\\\"bottom_bar\\\">\\n      <ion-textarea style=\\\"margin:0\\\" rows=\\\"0\\\" placeholder=\\\"Type your message\\\" [(ngModel)]=\\\"message\\\">\\n      </ion-textarea>\\n      <ion-buttons slot=\\\"end\\\" style=\\\"margin-left:4px;\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"attach()\\\">\\n          <ion-icon name=\\\"attach\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button color=\\\"primary\\\" fill=\\\"clear\\\" (click)=\\\"send('text')\\\" [disabled]=\\\"!message\\\">\\n          send\\n        </ion-button>\\n      </ion-buttons>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-footer>\";","export default \"ion-textarea {\\n  font-size: 12px;\\n  resize: both;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tZXNzYWdlL21lc3NhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXRleHRhcmVhe1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICByZXNpemU6IGJvdGg7XG59Il19 */\";"]}