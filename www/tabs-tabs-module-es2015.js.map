{"version":3,"sources":["./src/app/tabs/tabs.page.html","./src/app/tabs/tabs.module.ts","./src/app/tabs/tabs.page.scss","./src/app/tabs/tabs.page.ts","./src/app/tabs/tabs.router.module.ts"],"names":[],"mappings":"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","file":"tabs-tabs-module-es2015.js","sourcesContent":["export default \"<ion-tabs>\\r\\n\\r\\n  <ion-tab-bar slot=\\\"bottom\\\">\\r\\n    \\r\\n    <ion-tab-button tab=\\\"tab1\\\">\\r\\n      <ion-icon name=\\\"people\\\"></ion-icon>\\r\\n      <ion-badge *ngIf=\\\"getUnreadGroupMessagesCount() != null\\\">{{getUnreadGroupMessagesCount()}}</ion-badge>\\r\\n    </ion-tab-button>\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab2\\\">\\r\\n      <ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\r\\n      <ion-badge *ngIf=\\\"getUnreadMessagesCount() != null\\\">{{getUnreadMessagesCount()}}</ion-badge>\\r\\n    </ion-tab-button>\\r\\n\\r\\n\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab3\\\">\\r\\n      <ion-icon name=\\\"list\\\"></ion-icon>\\r\\n      <ion-badge *ngIf=\\\"friendRequestCount != null\\\">{{friendRequestCount}}</ion-badge>\\r\\n    </ion-tab-button>\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab4\\\">\\r\\n      <ion-icon name=\\\"contact\\\"></ion-icon>\\r\\n    </ion-tab-button>\\r\\n  </ion-tab-bar>\\r\\n\\r\\n</ion-tabs>\"","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { TabsPageRoutingModule } from './tabs.router.module';\r\n\r\nimport { TabsPage } from './tabs.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    TabsPageRoutingModule\r\n  ],\r\n  declarations: [TabsPage]\r\n})\r\nexport class TabsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvdGFicy5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: 'tabs.page.html',\r\n  styleUrls: ['tabs.page.scss']\r\n})\r\nexport class TabsPage {\r\n\r\n  unreadMessagesCount: any;\r\n  friendRequestCount: any;\r\n  unreadGroupMessagesCount: any;\r\n  groupList: any;\r\n  groupsInfo: any;\r\n  conversationList: any;\r\n  conversationsInfo: any; \r\n  // TabsPage\r\n  // This is the page where we set our tabs.\r\n  constructor(\r\n    public dataProvider: DataService,\r\n    public storage: Storage) {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n\r\n    this.storage.get('currentUser').then((val) => {\r\n      console.log('currentUser from storage', val);\r\n      if (val === null) {\r\n        this.dataProvider.getCurrentUser().snapshotChanges().subscribe((account: any) => {\r\n          // set a key/value\r\n          this.storage.set('currentUser', account.payload.val());\r\n        });\r\n      }\r\n    });\r\n\r\n    // Get friend requests count.\r\n    this.dataProvider.getRequests(firebase.auth().currentUser.uid).snapshotChanges().subscribe((requestsRes: any) => {\r\n      const requests = requestsRes.payload.val();\r\n      if (requests != null) {\r\n        if (requests.friendRequests != null) {\r\n          this.friendRequestCount = requests.friendRequests.length;\r\n        } else { this.friendRequestCount = null; }\r\n      } else { this.friendRequestCount = null; }\r\n    });\r\n\r\n    // Get conversations and add/update if the conversation exists, otherwise delete from list.\r\n    this.dataProvider.getConversations().snapshotChanges().subscribe((conversationsInfoRes) => {\r\n      let conversationsInfo = [];\r\n      conversationsInfo = conversationsInfoRes.map(c => ({ $key: c.key, ...c.payload.val() }));\r\n\r\n\r\n      this.conversationsInfo = null;\r\n      this.conversationList = null;\r\n      if (conversationsInfo.length > 0) {\r\n        this.conversationsInfo = conversationsInfo;\r\n        conversationsInfo.forEach((conversationInfo) => {\r\n          if (conversationInfo.blocked != true) {\r\n            this.dataProvider.getConversation(conversationInfo.conversationId).snapshotChanges().subscribe((conversationRes) => {\r\n              if (conversationRes.payload.exists()) {\r\n                let conversation: any = { $key: conversationRes.key, ...conversationRes.payload.val() };\r\n                if (conversation.blocked != true)\r\n                  this.addOrUpdateConversation(conversation);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n    this.dataProvider.getGroups().snapshotChanges().subscribe((groupIdsRes: any) => {\r\n      let groupIds = [];\r\n      groupIds = groupIdsRes.map(c => ({ $key: c.key, ...c.payload.val() }));\r\n      if (groupIds.length > 0) {\r\n        this.groupsInfo = groupIds;\r\n        if (this.groupList && this.groupList.length > groupIds.length) {\r\n          // User left/deleted a group, clear the list and add or update each group again.\r\n          this.groupList = null;\r\n        }\r\n        groupIds.forEach((groupId) => {\r\n          this.dataProvider.getGroup(groupId.$key).snapshotChanges().subscribe((groupRes: any) => {\r\n            let group = { $key: groupRes.key, ...groupRes.payload.val() };\r\n            if (group.$key != null) {\r\n              this.addOrUpdateGroup(group);\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        this.unreadGroupMessagesCount = null;\r\n        this.groupsInfo = null;\r\n        this.groupList = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Add or update conversaion for real-time sync of unreadMessagesCount.\r\n  addOrUpdateConversation(conversation) {\r\n    if (!this.conversationList) {\r\n      this.conversationList = [conversation];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.conversationList.length; i++) {\r\n        if (this.conversationList[i].$key == conversation.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.conversationList[index] = conversation;\r\n      } else {\r\n        this.conversationList.push(conversation);\r\n      }\r\n    }\r\n    this.computeUnreadMessagesCount();\r\n  }\r\n\r\n  // Compute all conversation's unreadMessages.\r\n  computeUnreadMessagesCount() {\r\n    this.unreadMessagesCount = 0;\r\n    if (this.conversationList) {\r\n      for (var i = 0; i < this.conversationList.length; i++) {\r\n        this.unreadMessagesCount += this.conversationList[i].messages.length - this.conversationsInfo[i].messagesRead;\r\n        if (this.unreadMessagesCount == 0) {\r\n          this.unreadMessagesCount = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUnreadMessagesCount() {\r\n    if (this.unreadMessagesCount) {\r\n      if (this.unreadMessagesCount > 0) {\r\n        return this.unreadMessagesCount;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Add or update group\r\n  addOrUpdateGroup(group) {\r\n    if (!this.groupList) {\r\n      this.groupList = [group];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.groupList.length; i++) {\r\n        if (this.groupList[i].$key == group.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.groupList[index] = group;\r\n      } else {\r\n        this.groupList.push(group);\r\n      }\r\n    }\r\n    this.computeUnreadGroupMessagesCount();\r\n  }\r\n\r\n  // Remove group from list if group is already deleted.\r\n  removeGroup(groupId) {\r\n    if (this.groupList) {\r\n      var index = -1;\r\n      for (var i = 0; i < this.groupList.length; i++) {\r\n        if (this.groupList[i].$key == groupId) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.groupList.splice(index, 1);\r\n      }\r\n\r\n      index = -1;\r\n      for (var j = 0; j < this.groupsInfo.length; j++) {\r\n        if (this.groupsInfo[i].$key == groupId) {\r\n          index = j;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.groupsInfo.splice(index, 1);\r\n      }\r\n      this.computeUnreadGroupMessagesCount();\r\n    }\r\n  }\r\n\r\n  // Compute all group's unreadMessages.\r\n  computeUnreadGroupMessagesCount() {\r\n    this.unreadGroupMessagesCount = 0;\r\n    if (this.groupList) {\r\n      for (var i = 0; i < this.groupList.length; i++) {\r\n        if (this.groupList[i].messages) {\r\n          this.unreadGroupMessagesCount += this.groupList[i].messages.length - this.groupsInfo[i].messagesRead;\r\n        }\r\n        if (this.unreadGroupMessagesCount == 0) {\r\n          this.unreadGroupMessagesCount = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUnreadGroupMessagesCount() {\r\n    if (this.unreadGroupMessagesCount) {\r\n      if (this.unreadGroupMessagesCount > 0) {\r\n        return this.unreadGroupMessagesCount;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TabsPage } from './tabs.page';\r\nimport { AuthGuardService } from '../services/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'tabs',\r\n    component: TabsPage,\r\n    children: [\r\n      {\r\n        path: 'tab1',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () => \r\n              import('../groups/groups.module').then(m => m.GroupsPageModule)\r\n             // canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'tab2',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () =>\r\n              import('../messages/messages.module').then(m => m.MessagesPageModule),\r\n              canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'tab3',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () =>\r\n              import('../friends/friends.module').then(m => m.FriendsPageModule),\r\n              canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'tab4',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () =>\r\n              import('../profile/profile.module').then(m => m.ProfilePageModule),\r\n              canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: '/tabs/tab1',\r\n        pathMatch: 'full'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/tabs/tab1',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TabsPageRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}