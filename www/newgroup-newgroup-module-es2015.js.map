{"version":3,"sources":["./src/app/newgroup/newgroup.page.html","./src/app/newgroup/newgroup.module.ts","./src/app/newgroup/newgroup.page.scss","./src/app/newgroup/newgroup.page.ts","./src/environments/validator.ts"],"names":[],"mappings":"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","file":"newgroup-newgroup-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Create New Group</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button fill=\\\"outline\\\" (click)=\\\"done()\\\">Create</ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div *ngIf=\\\"group\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"3\\\" style=\\\"text-align:center; margin-top: 4rem;\\\">\\r\\n        <img src=\\\"{{group.img}}\\\" *ngIf=\\\"group.img != ''\\\" tappable (click)=\\\"setGroupPhoto()\\\"\\r\\n          onError=\\\"this.src='./assets/images/default-group.png'\\\" />\\r\\n        <img style=\\\"border-radius: 100%; width: 100px; height: 100px;\\\" src=\\\"{{group.img}}\\\"\\r\\n          onError=\\\"this.src='./assets/images/default-group.png'\\\" *ngIf=\\\"group.img == ''\\\" tappable\\r\\n          (click)=\\\"setGroupPhoto()\\\" />\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"9\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\">\\r\\n          <ion-list style=\\\"margin:0;\\\" lines=\\\"none\\\">\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Group Name</ion-label>\\r\\n              <ion-input formControlName=\\\"groupName\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Name of Group\\\">\\r\\n              </ion-input>\\r\\n              <div *ngFor=\\\"let validation of errorMessages.groupName\\\">\\r\\n                <p class=\\\"error\\\"\\r\\n                  *ngIf=\\\"myForm.get('groupName').hasError(validation.type) && (myForm.get('groupName').dirty || myForm.get('groupName').touched || submitAttempt) \\\">\\r\\n                  {{validation.message}}\\r\\n                </p>\\r\\n              </div>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Description</ion-label>\\r\\n              <ion-textarea formControlName=\\\"groupDescription\\\" rows=\\\"3\\\" [(ngModel)]=\\\"description\\\"\\r\\n                placeholder=\\\"Describe this Group\\\"></ion-textarea>\\r\\n              <div *ngFor=\\\"let validation of errorMessages.groupDescription\\\">\\r\\n                <p class=\\\"error\\\"\\r\\n                  *ngIf=\\\"myForm.get('groupDescription').hasError(validation.type) && (myForm.get('groupDescription').dirty || myForm.get('groupDescription').touched || submitAttempt) \\\">\\r\\n                  {{validation.message}}\\r\\n                </p>\\r\\n              </div>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Group Tags</ion-label>\\r\\n              <ion-textarea formControlName=\\\"groupTags\\\" rows=\\\"3\\\" [(ngModel)]=\\\"groupTags\\\"\\r\\n                placeholder=\\\"Add Group Tags in each line.\\\"></ion-textarea>\\r\\n              <div *ngFor=\\\"let validation of errorMessages.groupTags\\\">\\r\\n                <p class=\\\"error\\\"\\r\\n                  *ngIf=\\\"myForm.get('groupTags').hasError(validation.type) && (myForm.get('groupTags').dirty || myForm.get('groupTags').touched || submitAttempt) \\\">\\r\\n                  {{validation.message}}\\r\\n                </p>\\r\\n              </div>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <div *ngIf=\\\"groupMembers\\\">\\r\\n      <ion-list-header>\\r\\n        Group Members ({{groupMembers.length}})\\r\\n      </ion-list-header>\\r\\n      <ion-list lines=\\\"none\\\">\\r\\n        <ion-item  *ngFor=\\\"let member of groupMembers\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{member.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" />\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{member.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>{{member.username}}</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"removeFromGroup(member)\\\">Remove</ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n\\r\\n  \\r\\n    <ion-list-header>\\r\\n      Add New Members\\r\\n    </ion-list-header>\\r\\n    <div class=\\\"form\\\">\\r\\n      <!-- No friends to create a group. -->\\r\\n      <div class=\\\"empty\\\" *ngIf=\\\"friends && friends.length == 0\\\">\\r\\n        <p>You have no friends right now to start a group conversation.</p>\\r\\n      </div>\\r\\n      <!-- Show friends to add/remove to group. -->\\r\\n      <ion-list lines=\\\"none\\\" *ngIf=\\\"friends && friends.length > 0\\\">\\r\\n        <ion-searchbar [(ngModel)]=\\\"searchFriend\\\" placeholder=\\\"Search for friend or username\\\" showCancelButton=\\\"true\\\"\\r\\n          cancelButtonText=\\\"Done\\\"></ion-searchbar>\\r\\n        <ion-item *ngFor=\\\"let friend of friends | friendFilter:searchFriend\\\" (click)=\\\"addOrRemoveFromGroup(friend)\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"{{friend.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <ion-text>\\r\\n              <h2>{{friend.name}}</h2>\\r\\n            </ion-text>\\r\\n            <ion-text>\\r\\n              <p>@{{friend.username}}</p>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"addToGroup(friend); $event.stopPropagation();\\\"\\r\\n            *ngIf=\\\"!inGroup(friend)\\\">Add</ion-button>\\r\\n          <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" color=\\\"primary\\\"\\r\\n            (click)=\\\"removeFromGroup(friend); $event.stopPropagation();\\\" *ngIf=\\\"inGroup(friend)\\\">Remove</ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewgroupPage } from './newgroup.page';\r\nimport { SharedModule } from '../services/share.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewgroupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NewgroupPage]\r\n})\r\nexport class NewgroupPageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ld2dyb3VwL25ld2dyb3VwLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ImageService } from '../services/image.service';\r\nimport { DataService } from '../services/data.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validator } from 'src/environments/validator';\r\n\r\n@Component({\r\n  selector: 'app-newgroup',\r\n  templateUrl: './newgroup.page.html',\r\n  styleUrls: ['./newgroup.page.scss'],\r\n})\r\nexport class NewgroupPage implements OnInit {\r\n\r\n  group: any;\r\n  groupForm: FormGroup;\r\n  friends: any;\r\n  searchFriend: any;\r\n  groupMembers: any;\r\n  alert: any;\r\n  name: any;\r\n  description: any;\r\n  groupTags: any;\r\n\r\n  myForm: FormGroup;\r\n  submitAttempt = false;\r\n  errorMessages: any = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public imageProvider: ImageService,\r\n    public dataProvider: DataService,\r\n    public alertCtrl: AlertController,\r\n    public firestore: AngularFirestore,\r\n    private afAuth: AngularFireAuth,\r\n    public loadingProvider: LoadingService,\r\n    public camera: Camera,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.errorMessages = Validator.errorMessages\r\n    this.myForm = this.formBuilder.group({\r\n      groupName: Validator.groupNameValidator,\r\n      groupDescription: Validator.groupDescriptionValidator,\r\n      groupTags: Validator.groupTagsValidator\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    // Initialize\r\n    this.group = {\r\n      img: './assets/images/default-group.png',\r\n      dateCreated: new Date().toString(),\r\n      messages: [],\r\n      members: [],\r\n      name: '',\r\n      description: '',\r\n      groupTags: []\r\n    };\r\n    this.searchFriend = '';\r\n\r\n    // Get user's friends to add to the group.\r\n    this.dataProvider.getCurrentUser().get().subscribe((accounts: any) => {\r\n      let account = accounts.data();\r\n      if (!this.groupMembers) {\r\n        this.groupMembers = [account];\r\n      }\r\n      if (account.friends) {\r\n        for (var i = 0; i < account.friends.length; i++) {\r\n          this.dataProvider.getUser(account.friends[i]).snapshotChanges().subscribe((friendRes: any) => {\r\n            if (friendRes.key != null) {\r\n              let friend = { $key: friendRes.key, ...friendRes.payload.data() };\r\n              this.addOrUpdateFriend(friend);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        this.friends = [];\r\n      }\r\n  });\r\n  }\r\n  // Add or update friend for real-time sync.\r\n  addOrUpdateFriend(friend) {\r\n    if (!this.friends) {\r\n      this.friends = [friend];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.friends.length; i++) {\r\n        if (this.friends[i].$key == friend.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.friends[index] = friend;\r\n      } else {\r\n        this.friends.push(friend);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Proceed with group creation.\r\n  done() {\r\n    this.submitAttempt = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.loadingProvider.show();\r\n      let messages = [];\r\n      // Add system message that group is created.\r\n      messages.push({\r\n        date: new Date().toString(),\r\n        sender: this.afAuth.auth.currentUser.uid,\r\n        type: 'system',\r\n        message: 'This group has been created.',\r\n        icon: 'md-chatbubbles'\r\n      });\r\n\r\n      // Add members of the group.\r\n      var members = [];\r\n      console.log('this.groupMembers:', this.groupMembers);\r\n      for (var i = 0; i < this.groupMembers.length; i++) {\r\n        members.push(this.groupMembers[i].userId);\r\n      }\r\n      // Add group info and date.\r\n      this.group.dateCreated = new Date().toString();\r\n      this.group.messages = messages;\r\n      this.group.members = members;\r\n      this.group.name = this.name;\r\n      this.group.description = this.description;\r\n      this.group.groupTags = this.groupTags.split('\\n');\r\n      console.log('Group Tags: ', this.group.groupTags);\r\n      // Add group to database.\r\n      console.log('this.group:', this.group);\r\n      this.firestore.collection('groups').add(this.group).then((success) => {\r\n        let groupId = success.id;\r\n        // Add group reference to users.\r\n        this.firestore.doc('/accounts/' + this.groupMembers[0].$key + '/groups/' + groupId).update({\r\n          messagesRead: 1\r\n        });\r\n        for (var i = 1; i < this.groupMembers.length; i++) {\r\n          this.firestore.doc('/accounts/' + this.groupMembers[i].$key + '/groups/' + groupId).update({\r\n            messagesRead: 0\r\n          });\r\n        }\r\n        this.router.navigateByUrl('/group/' + groupId);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Add friend to members of group.\r\n  addToGroup(friend) {\r\n    this.groupMembers.push(friend);\r\n  }\r\n\r\n  // Remove friend from members of group.\r\n  removeFromGroup(friend) {\r\n    var index = -1;\r\n    for (var i = 1; i < this.groupMembers.length; i++) {\r\n      if (this.groupMembers[i].$key == friend.$key) {\r\n        index = i;\r\n      }\r\n    }\r\n    if (index > -1) {\r\n      this.groupMembers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // Check if friend is already added to the group or not.\r\n  inGroup(friend) {\r\n    for (var i = 0; i < this.groupMembers.length; i++) {\r\n      if (this.groupMembers[i].$key == friend.$key) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Toggle to add/remove friend from the group.\r\n  addOrRemoveFromGroup(friend) {\r\n    if (this.inGroup(friend)) {\r\n      this.removeFromGroup(friend);\r\n    } else {\r\n      this.addToGroup(friend);\r\n    }\r\n  }\r\n\r\n  // Set group photo.\r\n  setGroupPhoto() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Set Group Photo',\r\n      message: 'Do you want to take a photo or choose from your photo gallery?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Choose from Gallery',\r\n          handler: () => {\r\n            this.imageProvider.setGroupPhoto(this.group, this.camera.PictureSourceType.PHOTOLIBRARY);\r\n          }\r\n        },\r\n        {\r\n          text: 'Take Photo',\r\n          handler: () => {\r\n            this.imageProvider.setGroupPhoto(this.group, this.camera.PictureSourceType.CAMERA);\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n}\r\n","import { Validators } from '@angular/forms';\r\n\r\nexport namespace Validator {\r\n\r\n    export const emailValidator = ['', [\r\n        Validators.required,\r\n        Validators.pattern('^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$')]\r\n    ];\r\n\r\n    export const passwordValidator = ['', [\r\n        Validators.required, Validators.minLength(6)\r\n    ]]\r\n\r\n    export const nameValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const usernameValidator = ['', [\r\n        Validators.required,\r\n        Validators.minLength(5)\r\n    ]]\r\n\r\n    export const bioValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const groupNameValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const groupDescriptionValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const groupTagsValidator = ['', [\r\n        Validators.required,\r\n    ]]\r\n\r\n    export const errorMessages = {\r\n        email: [\r\n            { type: 'required', message: 'Email is required' },\r\n            { type: 'pattern', message: 'Email looks like invalid' },\r\n        ],\r\n        password: [\r\n            { type: 'required', message: 'Password is required' },\r\n            { type: 'minlength', message: 'Password must be 6 char' },\r\n        ],\r\n        name: [\r\n            { type: 'required', message: 'Name is required' },\r\n        ],\r\n        username: [\r\n            { type: 'required', message: 'Username is required' },\r\n            { type: 'minlength', message: 'Username must be 5 char' },\r\n        ],\r\n        bio: [\r\n            { type: 'required', message: 'Bio is required' },\r\n        ],\r\n        groupName: [\r\n            { type: 'required', message: 'Group Name is required' },\r\n        ],\r\n        groupDescription: [\r\n            { type: 'required', message: 'Group Description is required' },\r\n        ],\r\n\r\n    }\r\n\t\r\n\t// Poll Form Validators\r\n  export const pollNameValidator = ['', [Validators.required, Validators.minLength(1)]];\r\n  export const pollDescriptionValidator = ['', [Validators.required, Validators.minLength(1)]];\r\n  export const pollOption1Validator = ['', [Validators.required, Validators.minLength(1)]];\r\n  export const pollOption2Validator = ['', [Validators.required, Validators.minLength(1)]];\r\n}"],"sourceRoot":"webpack:///"}