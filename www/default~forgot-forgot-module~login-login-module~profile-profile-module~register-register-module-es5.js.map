{"version":3,"sources":["src/app/services/login.service.ts","src/environments/validator.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { auth } from 'firebase/app';\n\nimport { DataService } from './data.service';\nimport { LoadingService } from './loading.service';\nimport { Platform } from '@ionic/angular';\n\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\nimport { Facebook } from '@ionic-native/facebook/ngx';\n\nimport { environment } from 'src/environments/environment.prod';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    private dataService: DataService,\n    private loadingProvider: LoadingService,\n    private platform: Platform,\n    private gplus: GooglePlus,\n    private facebook: Facebook,\n    private router: Router\n  ) { }\n\n  login(email, password) {\n    this.loadingProvider.show();\n    this.afAuth.auth.signInWithEmailAndPassword(email, password).then((res) => {\n      console.log(res);\n      console.log(\"******* \" + this.afAuth.user + \" *********\");\n      //this.dataService.getUser(this.afAuth.user.)\n      this.loadingProvider.hide();\n    }).catch(err => {\n      console.log(err);\n      this.loadingProvider.hide();\n      this.loadingProvider.showToast(err.message)\n    });\n  }\n\n  register(name, username, email, password, img) {\n    this.loadingProvider.show();\n    this.afAuth.auth.createUserWithEmailAndPassword(email, password).then((res) => {\n      let user: any = this.afAuth.auth.currentUser;\n      this.loadingProvider.hide();\n      this.createNewUser(user.uid, name, username, user.email, \"I am available\", \"Firebase\", img);\n    }).catch(err => {\n      console.log(err);\n      this.loadingProvider.hide();\n      this.loadingProvider.showToast(err.message);\n    })\n  }\n\n  reset(email) {\n    console.log(email);\n    this.loadingProvider.show();\n    this.afAuth.auth.sendPasswordResetEmail(email).then(() => {\n      this.loadingProvider.hide();\n      this.loadingProvider.showToast(\"Please Check your inbox\");\n    }).catch(err => {\n      this.loadingProvider.hide();\n      this.loadingProvider.showToast(err.message);\n    })\n  }\n\n  fbLogin() {\n    if (this.platform.is('desktop')) {\n      this.loadingProvider.show();\n      this.afAuth.auth.signInWithPopup(new auth.FacebookAuthProvider()).then((res: any) => {\n        this.loadingProvider.hide();\n        let credential = auth.FacebookAuthProvider.credential(res.credential.accessToken);\n        this.afAuth.auth.signInWithCredential(credential).then(() => {\n          if (res.additionalUserInfo.isNewUser) {\n            let uid = this.afAuth.auth.currentUser.uid;\n            let userInfo = res.additionalUserInfo.profile;\n            this.createNewUser(uid, userInfo.name, uid, userInfo.email, 'Available', 'Facebook', userInfo.picture);\n          }\n          else {\n            this.router.navigateByUrl('tabs');\n          }\n        }).catch(err => console.log(err));\n\n      }).catch(err => {\n        console.log(err)\n        this.loadingProvider.hide();\n      })\n    }\n    else {\n      this.facebook.login(['public_profile', 'email']).then(res => {\n        console.log(res);\n        let credential = auth.FacebookAuthProvider.credential(res.authResponse.accessToken);\n        this.loadingProvider.show();\n        this.afAuth.auth.signInWithCredential(credential).then((res) => {\n          if (res.additionalUserInfo.isNewUser) {\n            this.facebook.api(\"me/?fields=id,email,first_name,picture,gender\", [\"public_profile\", \"email\"])\n              .then(data => {\n                console.log(data)\n                let uid = this.afAuth.auth.currentUser.uid;\n                this.createNewUser(uid, data.first_name, uid, data.email, 'I am available', 'Facebook', data.picture.data.url);\n              })\n              .catch(err => {\n                console.log(err);\n                this.loadingProvider.hide();\n              })\n          }\n          else {\n            this.router.navigateByUrl('tabs')\n          }\n        })\n          .catch((error) => {\n            this.loadingProvider.hide();\n          });\n\n      }).catch(err => console.log(err));\n    }\n  }\n\n  gLogin() {\n    if (this.platform.is('desktop')) {\n      this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider()).then((res: any) => {\n        let credential = auth.GoogleAuthProvider.credential(res.credential.idToken, res.credential.accessToken);\n        this.afAuth.auth.signInWithCredential(credential).then(() => {\n          if (res.additionalUserInfo.isNewUser) {\n            let uid = this.afAuth.auth.currentUser.uid;\n            let userInfo = res.additionalUserInfo.profile;\n            this.createNewUser(uid, userInfo.name, uid, userInfo.email, 'Available', 'Google', userInfo.picture);\n          } else {\n            this.router.navigateByUrl('tabs');\n          }\n        }).catch((err) => {\n          console.log(\"Err! signInWithCredential\" + err)\n        })\n      }).catch(err => {\n        console.log('Err! signInWithCredential' + err);\n      })\n    }\n    else {\n      this.gplus.login({\n        webClientId: environment.googleClientId\n      }).then((result: any) => {\n        let credential = auth.GoogleAuthProvider.credential(result['token'], null);\n        this.afAuth.auth.signInWithCredential(credential).then((res: any) => {\n          if (res.additionalUserInfo.isNewUser) {\n            let uid = this.afAuth.auth.currentUser.uid;\n            let userInfo = res.additionalUserInfo.profile;\n            this.createNewUser(uid, userInfo.name, uid, userInfo.email, 'Available', 'Google', userInfo.picture);\n          }\n          else {\n            this.router.navigateByUrl('tabs');\n          }\n        }).catch((err) => {\n          console.log(\"Err! signInWithCredential\" + err)\n        })\n      }).catch((err) => {\n        console.log(err);\n      })\n    }\n  }\n\n  createNewUser(userId, name, username, email, description = \"I'm available\", provider, img = \"./assets/images/default-dp.png\") {\n    let dateCreated = new Date();\n    this.firestore.collection('accounts').doc(userId).set({\n      dateCreated, username, name, userId, email, description, provider, img\n    }).then(() => {\n      this.router.navigateByUrl('tabs');\n    });\n  }\n\n  logout() {\n    this.afAuth.auth.signOut().then(() => this.router.navigateByUrl('/login', { replaceUrl: true }));\n  }\n}\n","import { Validators } from '@angular/forms';\n\nexport namespace Validator {\n\n    export const emailValidator = ['', [\n        Validators.required,\n        Validators.pattern('^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$')]\n    ];\n\n    export const passwordValidator = ['', [\n        Validators.required, Validators.minLength(6)\n    ]]\n\n    export const nameValidator = ['', [\n        Validators.required,\n    ]]\n\n    export const usernameValidator = ['', [\n        Validators.required,\n        Validators.minLength(5)\n    ]]\n\n    export const bioValidator = ['', [\n        Validators.required,\n    ]]\n\n    export const groupNameValidator = ['', [\n        Validators.required,\n    ]]\n\n    export const groupDescriptionValidator = ['', [\n        Validators.required,\n    ]]\n\n    export const groupTagsValidator = ['', [\n        Validators.required,\n    ]]\n\n    export const errorMessages = {\n        email: [\n            { type: 'required', message: 'Email is required' },\n            { type: 'pattern', message: 'Email looks like invalid' },\n        ],\n        password: [\n            { type: 'required', message: 'Password is required' },\n            { type: 'minlength', message: 'Password must be 6 char' },\n        ],\n        name: [\n            { type: 'required', message: 'Name is required' },\n        ],\n        username: [\n            { type: 'required', message: 'Username is required' },\n            { type: 'minlength', message: 'Username must be 5 char' },\n        ],\n        bio: [\n            { type: 'required', message: 'Bio is required' },\n        ],\n        groupName: [\n            { type: 'required', message: 'Group Name is required' },\n        ],\n        groupDescription: [\n            { type: 'required', message: 'Group Description is required' },\n        ],\n\n    }\n\t\n\t// Poll Form Validators\n  export const pollNameValidator = ['', [Validators.required, Validators.minLength(1)]];\n  export const pollDescriptionValidator = ['', [Validators.required, Validators.minLength(1)]];\n  export const pollOption1Validator = ['', [Validators.required, Validators.minLength(1)]];\n  export const pollOption2Validator = ['', [Validators.required, Validators.minLength(1)]];\n}"],"sourceRoot":"webpack:///","file":"default~forgot-forgot-module~login-login-module~profile-profile-module~register-register-module-es5.js"}