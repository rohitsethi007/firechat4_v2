{"version":3,"sources":["src/app/groupinfo/groupinfo.page.html","src/app/groupinfo/groupinfo.module.ts","src/app/groupinfo/groupinfo.page.scss","src/app/groupinfo/groupinfo.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title *ngIf=\\\"group\\\">{{group.name}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div *ngIf=\\\"group\\\">\\r\\n    <ion-row style=\\\"background:#f3f3f3\\\" padding>\\r\\n      <ion-col size=\\\"8\\\">\\r\\n        <h4 tappable (click)=\\\"setName()\\\">{{group.name}} <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n        </h4>\\r\\n        <p tappable style=\\\"color:#aaa\\\" (click)=\\\"setDescription()\\\">{{group.description}} <ion-icon name=\\\"create\\\">\\r\\n          </ion-icon>\\r\\n        </p>\\r\\n        <p style=\\\"color:#aaa;margin:0\\\">Started {{group.dateCreated | DateFormat}}</p>\\r\\n        <div>\\r\\n          <ion-button size=\\\"small\\\" (click)=\\\"leaveGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length > 1\\\">Leave\\r\\n          </ion-button>\\r\\n          <ion-button size=\\\"small\\\" (click)=\\\"deleteGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length <= 1\\\">Delete\\r\\n          </ion-button>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <img src=\\\"{{group.img}}\\\" style=\\\"border-radius: 100%; width: 80px; height: 80px;\\\" tappable (click)=\\\"setPhoto()\\\"\\r\\n          onError=\\\"this.src='./assets/images/default-group.png'\\\">\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-list *ngIf=\\\"groupMembers\\\" lines=\\\"none\\\">\\r\\n      <ion-item>\\r\\n        <ion-label>\\r\\n          <ion-text>\\r\\n            Group Members ({{groupMembers.length}})\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-button slot=\\\"end\\\" (click)=\\\"addMembers()\\\" fill=\\\"outline\\\">Add</ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngFor=\\\"let member of groupMembers\\\" (click)=\\\"viewUser(member.$key)\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"{{member.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <ion-text>\\r\\n            <h2>{{member.name}}</h2>\\r\\n          </ion-text>\\r\\n          <ion-text>\\r\\n            <p>{{member.description}}</p>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GroupinfoPage } from './groupinfo.page';\r\nimport { SharedModule } from '../services/share.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GroupinfoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [GroupinfoPage]\r\n})\r\nexport class GroupinfoPageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwaW5mby9ncm91cGluZm8ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { ModalController, AlertController } from '@ionic/angular';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { ImageService } from '../services/image.service';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport * as firebase from 'firebase';\r\n\r\n@Component({\r\n  selector: 'app-groupinfo',\r\n  templateUrl: './groupinfo.page.html',\r\n  styleUrls: ['./groupinfo.page.scss'],\r\n})\r\nexport class GroupinfoPage implements OnInit {\r\n\r\n  groupId: any;\r\n  group: any;\r\n  groupMembers: any;\r\n  alert: any;\r\n  user: any;\r\n  subscription: any;\r\n  // GroupInfoPage\r\n  // This is the page where the user can view group information, change group information, add members, and leave/delete group.\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public dataProvider: DataService,\r\n    public loadingProvider: LoadingService,\r\n    public modalCtrl: ModalController,\r\n    public alertCtrl: AlertController,\r\n    public angularfire: AngularFireDatabase,\r\n    public imageProvider: ImageService,\r\n    public camera: Camera\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    // Initialize\r\n\r\n    this.groupId = this.route.snapshot.params.id;\r\n    console.log(this.groupId);\r\n\r\n    // Get group details.\r\n    this.subscription = this.dataProvider.getGroup(this.groupId).snapshotChanges().subscribe((groupRes: any) => {\r\n      let group = { $key: groupRes.key, ...groupRes.payload.val() };\r\n      console.log(group);\r\n      if (group != null) {\r\n        this.loadingProvider.show();\r\n        this.group = group;\r\n        if (group.members) {\r\n          group.members.forEach((memberId) => {\r\n            this.dataProvider.getUser(memberId).snapshotChanges().subscribe((member: any) => {\r\n              if (member.key != null) {\r\n                member = { $key: member.key, ...member.payload.val() };\r\n                this.addUpdateOrRemoveMember(member);\r\n              }\r\n            });\r\n          });\r\n        }\r\n        this.loadingProvider.hide();\r\n      } else {\r\n        this.router.navigateByUrl('/')\r\n      }\r\n    });\r\n\r\n    // Get user details.\r\n    this.dataProvider.getCurrentUser().snapshotChanges().subscribe((user: any) => {\r\n      this.user = { $key: user.key, ...user.payload.val() };\r\n    });\r\n  }\r\n\r\n  // Delete subscription.\r\n  // ionViewDidLeave() {\r\n  //   if(this.deleteSubscription)\r\n  //\r\n  // }\r\n\r\n  // Check if user exists in the group then add/update user.\r\n  // If the user has already left the group, remove user from the list.\r\n  addUpdateOrRemoveMember(member) {\r\n    console.log(member);\r\n    if (this.group) {\r\n      if (this.group.members.indexOf(member.$key) > -1) {\r\n        // User exists in the group.\r\n        if (!this.groupMembers) {\r\n          this.groupMembers = [member];\r\n        } else {\r\n          var index = -1;\r\n          for (var i = 0; i < this.groupMembers.length; i++) {\r\n            if (this.groupMembers[i].$key == member.$key) {\r\n              index = i;\r\n            }\r\n          }\r\n          // Add/Update User.\r\n          if (index > -1) {\r\n            this.groupMembers[index] = member;\r\n          } else {\r\n            this.groupMembers.push(member);\r\n          }\r\n        }\r\n      } else {\r\n        // User already left the group, remove member from list.\r\n        var index1 = -1;\r\n        for (var j = 0; j < this.groupMembers.length; j++) {\r\n          if (this.groupMembers[j].$key == member.$key) {\r\n            index1 = j;\r\n          }\r\n        }\r\n        if (index1 > -1) {\r\n          this.groupMembers.splice(index1, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // View user info.\r\n  viewUser(userId) {\r\n    if (firebase.auth().currentUser.uid != userId)\r\n      this.router.navigateByUrl('/userinfo/' + userId);\r\n  }\r\n\r\n  // Enlarge group image.\r\n  enlargeImage(img) {\r\n    // let imageModal = this.modalCtrl.create(\"ImageModalPage\", { img: img });\r\n    // imageModal.present();\r\n  }\r\n\r\n  // Change group name.\r\n  setName() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Change Group Name',\r\n      message: \"Please enter a new group name.\",\r\n      inputs: [\r\n        {\r\n          name: 'name',\r\n          placeholder: 'Group Name',\r\n          value: this.group.name\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Save',\r\n          handler: data => {\r\n            let name = data[\"name\"];\r\n            if (this.group.name != name) {\r\n              this.loadingProvider.show();\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group name to: ' + name + '.',\r\n                icon: 'md-create'\r\n              });\r\n              // Update group on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                name: name,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Updated Succesfully\");\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\");\r\n              });\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Change group image, the user is asked if they want to take a photo or choose from gallery.\r\n  setPhoto() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Set Group Photo',\r\n      message: 'Do you want to take a photo or choose from your photo gallery?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Choose from Gallery',\r\n          handler: () => {\r\n            this.loadingProvider.show();\r\n            // Upload photo and set to group photo, afterwards, return the group object as promise.\r\n            this.imageProvider.setGroupPhotoPromise(this.group, this.camera.PictureSourceType.PHOTOLIBRARY).then((group) => {\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group photo.',\r\n                icon: 'ios-camera'\r\n              });\r\n              // Update group image on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                img: group.img,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Updated Successfully\");\r\n\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\");\r\n              });\r\n            });\r\n          }\r\n        },\r\n        {\r\n          text: 'Take Photo',\r\n          handler: () => {\r\n            this.loadingProvider.show();\r\n            // Upload photo and set to group photo, afterwwards, return the group object as promise.\r\n            this.imageProvider.setGroupPhotoPromise(this.group, this.camera.PictureSourceType.CAMERA).then((group) => {\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group photo.',\r\n                icon: 'ios-camera'\r\n              });\r\n              // Update group image on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                img: group.img,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Updated Successfully\")\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\")\r\n\r\n              });\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Change group description.\r\n  setDescription() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Change Group Description',\r\n      message: \"Please enter a new group description.\",\r\n      inputs: [\r\n        {\r\n          name: 'description',\r\n          placeholder: 'Group Description',\r\n          value: this.group.description\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Save',\r\n          handler: data => {\r\n            let description = data[\"description\"];\r\n            if (this.group.description != description) {\r\n              this.loadingProvider.show();\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group description.',\r\n                icon: 'md-clipboard'\r\n              });\r\n              // Update group on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                description: description,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Updated Successfully\")\r\n\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\")\r\n              });\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Leave group.\r\n  leaveGroup() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Confirm Leave',\r\n      message: 'Are you sure you want to leave this group?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        },\r\n        {\r\n          text: 'Leave',\r\n          handler: data => {\r\n            this.loadingProvider.show();\r\n            // Remove member from group.\r\n            this.group.members.splice(this.group.members.indexOf(this.user.$key), 1);\r\n            // Add system message.\r\n            this.group.messages.push({\r\n              date: new Date().toString(),\r\n              sender: this.user.$key,\r\n              type: 'system',\r\n              message: this.user.name + ' has left this group.',\r\n              icon: 'md-log-out'\r\n            });\r\n            // Update group on database.\r\n            this.dataProvider.getGroup(this.groupId).update({\r\n              members: this.group.members,\r\n              messages: this.group.messages\r\n            }).then((success) => {\r\n              // Remove group from user's group list.\r\n              this.angularfire.object('/accounts/' + firebase.auth().currentUser.uid + '/groups/' + this.groupId).remove().then(() => {\r\n                // Pop this view because user already has left this group.\r\n                this.group = null;\r\n                setTimeout(() => {\r\n                  this.loadingProvider.hide();\r\n                  this.router.navigateByUrl('/')\r\n                }, 300);\r\n              });\r\n            }).catch((error) => {\r\n              this.loadingProvider.showToast(\"Something went wrong\")\r\n\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Delete group.\r\n  deleteGroup() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Confirm Delete',\r\n      message: 'Are you sure you want to delete this group?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          handler: data => {\r\n            let group = JSON.parse(JSON.stringify(this.group));\r\n            console.log(group);\r\n            // Delete all images of image messages.\r\n            group.messages.forEach((message) => {\r\n              if (message.type == 'image') {\r\n                console.log(\"Delete: \" + message.url + \" of \" + group.$key);\r\n                this.imageProvider.deleteGroupImageFile(group.$key, message.url);\r\n              }\r\n            });\r\n\r\n            this.angularfire.object('/accounts/' + firebase.auth().currentUser.uid + '/groups/' + group.$key).remove().then(() => {\r\n              this.dataProvider.getGroup(group.$key).remove();\r\n            });\r\n            // Delete group image.\r\n            console.log(\"Delete: \" + group.img);\r\n            this.imageProvider.deleteImageFile(group.img);\r\n            // this.navCtrl.popToRoot();\r\n            this.router.navigateByUrl('/')\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Add members.\r\n  addMembers() {\r\n    this.router.navigateByUrl('/addmembers/' + this.groupId);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"groupinfo-groupinfo-module-es5.js"}