{"version":3,"sources":["./src/app/groupinfo/groupinfo.page.html","./src/app/groupinfo/groupinfo.module.ts","./src/app/groupinfo/groupinfo.page.scss","./src/app/groupinfo/groupinfo.page.ts"],"names":[],"mappings":"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","file":"groupinfo-groupinfo-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title *ngIf=\\\"group\\\">{{group.name}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div *ngIf=\\\"group\\\">\\r\\n    <ion-row style=\\\"background:#f3f3f3\\\" padding>\\r\\n      <ion-col size=\\\"8\\\">\\r\\n        <h4 tappable (click)=\\\"setName()\\\">{{group.name}} <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n        </h4>\\r\\n        <p tappable style=\\\"color:#aaa\\\" (click)=\\\"setDescription()\\\">{{group.description}} <ion-icon name=\\\"create\\\">\\r\\n          </ion-icon>\\r\\n        </p>\\r\\n        <p style=\\\"color:#aaa;margin:0\\\">Started {{group.dateCreated | DateFormat}}</p>\\r\\n        <div>\\r\\n          <ion-button size=\\\"small\\\" (click)=\\\"leaveGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length > 1\\\">Leave\\r\\n          </ion-button>\\r\\n          <ion-button size=\\\"small\\\" (click)=\\\"deleteGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length <= 1\\\">Delete\\r\\n          </ion-button>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <img src=\\\"{{group.img}}\\\" style=\\\"border-radius: 100%; width: 80px; height: 80px;\\\" tappable (click)=\\\"setPhoto()\\\"\\r\\n          onError=\\\"this.src='./assets/images/default-group.png'\\\">\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-list *ngIf=\\\"groupMembers\\\" lines=\\\"none\\\">\\r\\n      <ion-item>\\r\\n        <ion-label>\\r\\n          <ion-text>\\r\\n            Group Members ({{groupMembers.length}})\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-button slot=\\\"end\\\" (click)=\\\"addMembers()\\\" fill=\\\"outline\\\">Add</ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngFor=\\\"let member of groupMembers\\\" (click)=\\\"viewUser(member.$key)\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"{{member.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <ion-text>\\r\\n            <h2>{{member.name}}</h2>\\r\\n          </ion-text>\\r\\n          <ion-text>\\r\\n            <p>{{member.description}}</p>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GroupinfoPage } from './groupinfo.page';\r\nimport { SharedModule } from '../services/share.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GroupinfoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [GroupinfoPage]\r\n})\r\nexport class GroupinfoPageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwaW5mby9ncm91cGluZm8ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { ModalController, AlertController } from '@ionic/angular';\r\nimport { ImageService } from '../services/image.service';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-groupinfo',\r\n  templateUrl: './groupinfo.page.html',\r\n  styleUrls: ['./groupinfo.page.scss'],\r\n})\r\nexport class GroupinfoPage implements OnInit {\r\n\r\n  groupId: any;\r\n  group: any;\r\n  groupMembers: any;\r\n  alert: any;\r\n  user: any;\r\n  subscription: any;\r\n  // GroupInfoPage\r\n  // This is the page where the user can view group information, change group information, add members, and leave/delete group.\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public dataProvider: DataService,\r\n    public firestore: AngularFirestore,\r\n    public loadingProvider: LoadingService,\r\n    public modalCtrl: ModalController,\r\n    public alertCtrl: AlertController,\r\n    public imageProvider: ImageService,\r\n    public camera: Camera\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    // Initialize\r\n\r\n    this.groupId = this.route.snapshot.params.id;\r\n    console.log(this.groupId);\r\n\r\n    // Get group details.\r\n    this.subscription = this.dataProvider.getGroup(this.groupId).snapshotChanges().subscribe((groupRes: any) => {\r\n      let group = { $key: groupRes.payload.id, ...groupRes.payload.data() };\r\n      console.log(group);\r\n      if (group != null) {\r\n        this.loadingProvider.show();\r\n        this.group = group;\r\n        console.log('group.members', group.members);\r\n\r\n        group.members.forEach((memberId) => {\r\n            this.dataProvider.getUser(memberId).snapshotChanges().subscribe((memberRes: any) => {\r\n              let member = { $key: memberRes.payload.id, ...memberRes.payload.data() };\r\n              this.addUpdateOrRemoveMember(member);\r\n            });\r\n          });\r\n\r\n        this.loadingProvider.hide();\r\n      } else {\r\n        this.router.navigateByUrl('/')\r\n      }\r\n    });\r\n\r\n    // Get user details.\r\n    this.dataProvider.getCurrentUser().snapshotChanges().subscribe((accounts: any) => {\r\n      let account = accounts.payload.data();\r\n      this.user = { $key: account.userId, ...account };\r\n    });\r\n  }\r\n\r\n  // Delete subscription.\r\n  // ionViewDidLeave() {\r\n  //   if(this.deleteSubscription)\r\n  //\r\n  // }\r\n\r\n  // Check if user exists in the group then add/update user.\r\n  // If the user has already left the group, remove user from the list.\r\n  addUpdateOrRemoveMember(member) {\r\n    console.log(member);\r\n    if (this.group) {\r\n      if (this.group.members.indexOf(member.$key) > -1) {\r\n        // User exists in the group.\r\n        if (!this.groupMembers) {\r\n          this.groupMembers = [member];\r\n        } else {\r\n          var index = -1;\r\n          console.log('this.groupMembers.length:', this.groupMembers);\r\n          for (var i = 0; i < this.groupMembers.length; i++) {\r\n            if (this.groupMembers[i].$key == member.$key) {\r\n              index = i;\r\n            }\r\n          }\r\n          // Add/Update User.\r\n          if (index > -1) {\r\n            this.groupMembers[index] = member;\r\n          } else {\r\n            this.groupMembers.push(member);\r\n          }\r\n        }\r\n      } else {\r\n        // User already left the group, remove member from list.\r\n        var index1 = -1;\r\n        for (var j = 0; j < this.groupMembers.length; j++) {\r\n          if (this.groupMembers[j].$key == member.$key) {\r\n            index1 = j;\r\n          }\r\n        }\r\n        if (index1 > -1) {\r\n          this.groupMembers.splice(index1, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // View user info.\r\n  viewUser(userId) {\r\n    if (this.dataProvider.getCurrentUserId !== userId) {\r\n      this.router.navigateByUrl('/userinfo/' + userId);\r\n    }\r\n  }\r\n\r\n  // Enlarge group image.\r\n  enlargeImage(img) {\r\n    // let imageModal = this.modalCtrl.create(\"ImageModalPage\", { img: img });\r\n    // imageModal.present();\r\n  }\r\n\r\n  // Change group name.\r\n  setName() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Change Group Name',\r\n      message: 'Please enter a new group name.',\r\n      inputs: [\r\n        {\r\n          name: 'name',\r\n          placeholder: 'Group Name',\r\n          value: this.group.name\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Save',\r\n          handler: data => {\r\n            let name = data['name'];\r\n            if (this.group.name != name) {\r\n              this.loadingProvider.show();\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group name to: ' + name + '.',\r\n                icon: 'md-create'\r\n              });\r\n              // Update group on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                name: name,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast('Updated Succesfully');\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast('Something went wrong');\r\n              });\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Change group image, the user is asked if they want to take a photo or choose from gallery.\r\n  setPhoto() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Set Group Photo',\r\n      message: 'Do you want to take a photo or choose from your photo gallery?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Choose from Gallery',\r\n          handler: () => {\r\n            this.loadingProvider.show();\r\n            // Upload photo and set to group photo, afterwards, return the group object as promise.\r\n            this.imageProvider.setGroupPhotoPromise(this.group, this.camera.PictureSourceType.PHOTOLIBRARY).then((group) => {\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group photo.',\r\n                icon: 'ios-camera'\r\n              });\r\n              // Update group image on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                img: group.img,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Updated Successfully\");\r\n\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\");\r\n              });\r\n            });\r\n          }\r\n        },\r\n        {\r\n          text: 'Take Photo',\r\n          handler: () => {\r\n            this.loadingProvider.show();\r\n            // Upload photo and set to group photo, afterwwards, return the group object as promise.\r\n            this.imageProvider.setGroupPhotoPromise(this.group, this.camera.PictureSourceType.CAMERA).then((group) => {\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group photo.',\r\n                icon: 'ios-camera'\r\n              });\r\n              // Update group image on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                img: group.img,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Updated Successfully\")\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\")\r\n\r\n              });\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Change group description.\r\n  setDescription() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Change Group Description',\r\n      message: \"Please enter a new group description.\",\r\n      inputs: [\r\n        {\r\n          name: 'description',\r\n          placeholder: 'Group Description',\r\n          value: this.group.description\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => { }\r\n        },\r\n        {\r\n          text: 'Save',\r\n          handler: data => {\r\n            let description = data[\"description\"];\r\n            if (this.group.description != description) {\r\n              this.loadingProvider.show();\r\n              // Add system message.\r\n              this.group.messages.push({\r\n                date: new Date().toString(),\r\n                sender: this.user.$key,\r\n                type: 'system',\r\n                message: this.user.name + ' has changed the group description.',\r\n                icon: 'md-clipboard'\r\n              });\r\n              // Update group on database.\r\n              this.dataProvider.getGroup(this.groupId).update({\r\n                description: description,\r\n                messages: this.group.messages\r\n              }).then((success) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Updated Successfully\")\r\n\r\n              }).catch((error) => {\r\n                this.loadingProvider.hide();\r\n                this.loadingProvider.showToast(\"Something went wrong\")\r\n              });\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Leave group.\r\n  leaveGroup() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Confirm Leave',\r\n      message: 'Are you sure you want to leave this group?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        },\r\n        {\r\n          text: 'Leave',\r\n          handler: data => {\r\n            this.loadingProvider.show();\r\n            // Remove member from group.\r\n            this.group.members.splice(this.group.members.indexOf(this.user.$key), 1);\r\n            // Add system message.\r\n            this.group.messages.push({\r\n              date: new Date().toString(),\r\n              sender: this.user.$key,\r\n              type: 'system',\r\n              message: this.user.name + ' has left this group.',\r\n              icon: 'md-log-out'\r\n            });\r\n            // Update group on database.\r\n            this.dataProvider.getGroup(this.groupId).update({\r\n              members: this.group.members,\r\n              messages: this.group.messages\r\n            }).then((success) => {\r\n              // Remove group from user's group list.\r\n              this.firestore.doc('/accounts/' + this.dataProvider.getCurrentUserId + '/groups/' + this.groupId).delete().then(() => {\r\n                // Pop this view because user already has left this group.\r\n                this.group = null;\r\n                setTimeout(() => {\r\n                  this.loadingProvider.hide();\r\n                  this.router.navigateByUrl('/')\r\n                }, 300);\r\n              });\r\n            }).catch((error) => {\r\n              this.loadingProvider.showToast(\"Something went wrong\")\r\n\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Delete group.\r\n  deleteGroup() {\r\n    this.alert = this.alertCtrl.create({\r\n      header: 'Confirm Delete',\r\n      message: 'Are you sure you want to delete this group?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          handler: data => {\r\n            let group = JSON.parse(JSON.stringify(this.group));\r\n            console.log(group);\r\n            // Delete all images of image messages.\r\n            group.messages.forEach((message) => {\r\n              if (message.type == 'image') {\r\n                console.log(\"Delete: \" + message.url + \" of \" + group.$key);\r\n                this.imageProvider.deleteGroupImageFile(group.$key, message.url);\r\n              }\r\n            });\r\n\r\n            this.firestore.doc('/accounts/' + this.dataProvider.getCurrentUserId + '/groups/' + group.$key).delete().then(() => {\r\n              this.dataProvider.getGroup(group.$key).delete();\r\n            });\r\n            // Delete group image.\r\n            console.log(\"Delete: \" + group.img);\r\n            this.imageProvider.deleteImageFile(group.img);\r\n            // this.navCtrl.popToRoot();\r\n            this.router.navigateByUrl('/')\r\n          }\r\n        }\r\n      ]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Add members.\r\n  addMembers() {\r\n    this.router.navigateByUrl('/addmembers/' + this.groupId);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}