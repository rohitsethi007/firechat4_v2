{"version":3,"sources":["webpack:///src/app/forgot/forgot.page.scss","webpack:///src/app/forgot/forgot.page.ts","webpack:///src/app/forgot/forgot.module.ts","webpack:///src/app/forgot/forgot.page.html"],"names":["ForgotPage","loginService","formBuilder","submitAttempt","errorMessages","myForm","group","email","emailValidator","controls","valid","reset","selector","template","routes","path","component","ForgotPageModule","imports","forChild","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFA,UAAU;AAQrB,4BACUC,YADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,eAAAD,YAAA,GAAAA,YAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AALV,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,aAAA,GAAqB,EAArB;AAOE,eAAKA,aAAL,GAAqB,qEAAUA,aAA/B;AACA,eAAKC,MAAL,GAAc,KAAKH,WAAL,CAAiBI,KAAjB,CAAuB;AACnCC,iBAAK,EAAE,qEAAUC;AADkB,WAAvB,CAAd;AAGD;;AAjBoB;AAAA;AAAA,qCAmBV,CACV;AApBoB;AAAA;AAAA,kCAsBb;AACN,iBAAKL,aAAL,GAAqB,IAArB;;AACA,gBAAI,KAAKE,MAAL,CAAYI,QAAZ,CAAqBF,KAArB,CAA2BG,KAA/B,EAAsC;AACpC,mBAAKT,YAAL,CAAkBU,KAAlB,CAAwB,KAAKJ,KAA7B;AACD;AACF;AA3BoB;;AAAA;AAAA,S;;;;gBAVd;;gBAEA;;;;AAQIP,gBAAU,6DALtB,gEAAU;AACTY,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR,oEAFS;;AAAA,OAAV,CAKsB,E,+EASG,oE,EACD,0D,EAVF,GAAVb,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,UAAMc,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAiBaC,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAV5B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaC,QAAb,CAAsBL,MAAtB,CALO,CADD;AAQRM,oBAAY,EAAE,CAAC,uDAAD;AARN,OAAT,CAU4B,GAAhBH,gBAAgB,CAAhB;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA","file":"forgot-forgot-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC9mb3Jnb3QucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../services/login.service';\r\n\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validator } from 'src/environments/validator';\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.page.html',\r\n  styleUrls: ['./forgot.page.scss'],\r\n})\r\nexport class ForgotPage implements OnInit {\r\n\r\n  email: any;\r\n  password: any;\r\n  myForm: FormGroup;\r\n  submitAttempt = false;\r\n  errorMessages: any = [];\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n\r\n    this.errorMessages = Validator.errorMessages\r\n    this.myForm = this.formBuilder.group({\r\n      email: Validator.emailValidator,\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  reset() {\r\n    this.submitAttempt = true;\r\n    if (this.myForm.controls.email.valid) {\r\n      this.loginService.reset(this.email);\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPage } from './forgot.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ForgotPage]\r\n})\r\nexport class ForgotPageModule { }\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Reset Password</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <div class=\\\"center ion-padding\\\">\\r\\n    <img src=\\\"assets/images/logo.png\\\" style=\\\"width:80px;height:80px;\\\" />\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"myForm\\\">\\r\\n    <ion-list lines=\\\"none\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"stacked\\\">Email</ion-label>\\r\\n        <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" email=\\\"true\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\r\\n        <div *ngFor=\\\"let validation of errorMessages.email\\\">\\r\\n          <p class=\\\"error\\\"\\r\\n            *ngIf=\\\"myForm.get('email').hasError(validation.type) && (myForm.get('email').dirty || myForm.get('email').touched || submitAttempt) \\\">\\r\\n            {{validation.message}}\\r\\n          </p>\\r\\n        </div>\\r\\n      </ion-item>\\r\\n      <div class=\\\"item-padding\\\">\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"reset()\\\">\\r\\n          Reset Password\\r\\n        </ion-button>\\r\\n      </div>\\r\\n    </ion-list>\\r\\n  </form>\\r\\n</ion-content>\";"]}