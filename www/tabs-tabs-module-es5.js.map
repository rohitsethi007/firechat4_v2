{"version":3,"sources":["src/app/tabs/tabs.page.html","src/app/tabs/tabs.module.ts","src/app/tabs/tabs.page.scss","src/app/tabs/tabs.page.ts","src/app/tabs/tabs.router.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-tabs>\\r\\n\\r\\n  <ion-tab-bar slot=\\\"bottom\\\">\\r\\n    \\r\\n    <ion-tab-button tab=\\\"tab1\\\">\\r\\n      <ion-icon name=\\\"people\\\"></ion-icon>\\r\\n      <ion-badge *ngIf=\\\"getUnreadGroupMessagesCount() != null\\\">{{getUnreadGroupMessagesCount()}}</ion-badge>\\r\\n    </ion-tab-button>\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab2\\\">\\r\\n      <ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\r\\n      <ion-badge *ngIf=\\\"getUnreadMessagesCount() != null\\\">{{getUnreadMessagesCount()}}</ion-badge>\\r\\n    </ion-tab-button>\\r\\n\\r\\n\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab3\\\">\\r\\n      <ion-icon name=\\\"list\\\"></ion-icon>\\r\\n      <ion-badge *ngIf=\\\"friendRequestCount != null\\\">{{friendRequestCount}}</ion-badge>\\r\\n    </ion-tab-button>\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab4\\\">\\r\\n      <ion-icon name=\\\"contact\\\"></ion-icon>\\r\\n    </ion-tab-button>\\r\\n  </ion-tab-bar>\\r\\n\\r\\n</ion-tabs>\"","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { TabsPageRoutingModule } from './tabs.router.module';\r\n\r\nimport { TabsPage } from './tabs.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    TabsPageRoutingModule\r\n  ],\r\n  declarations: [TabsPage]\r\n})\r\nexport class TabsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvdGFicy5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: 'tabs.page.html',\r\n  styleUrls: ['tabs.page.scss']\r\n})\r\nexport class TabsPage {\r\n\r\n  unreadMessagesCount: any;\r\n  friendRequestCount: any;\r\n  unreadGroupMessagesCount: any;\r\n  groupList: any;\r\n  groupsInfo: any;\r\n  conversationList: any;\r\n  conversationsInfo: any; \r\n  // TabsPage\r\n  // This is the page where we set our tabs.\r\n  constructor(\r\n    public dataProvider: DataService,\r\n    public storage: Storage) {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n\r\n    this.storage.get('currentUser').then((val) => {\r\n      console.log('currentUser from storage', val);\r\n      if (val === null) {\r\n        this.dataProvider.getCurrentUser().snapshotChanges().subscribe((account: any) => {\r\n          // set a key/value\r\n          this.storage.set('currentUser', account.payload.val());\r\n        });\r\n      }\r\n    });\r\n\r\n    // Get friend requests count.\r\n    this.dataProvider.getRequests(firebase.auth().currentUser.uid).snapshotChanges().subscribe((requestsRes: any) => {\r\n      const requests = requestsRes.payload.val();\r\n      if (requests != null) {\r\n        if (requests.friendRequests != null) {\r\n          this.friendRequestCount = requests.friendRequests.length;\r\n        } else { this.friendRequestCount = null; }\r\n      } else { this.friendRequestCount = null; }\r\n    });\r\n\r\n    // Get conversations and add/update if the conversation exists, otherwise delete from list.\r\n    this.dataProvider.getConversations().snapshotChanges().subscribe((conversationsInfoRes) => {\r\n      let conversationsInfo = [];\r\n      conversationsInfo = conversationsInfoRes.map(c => ({ $key: c.key, ...c.payload.val() }));\r\n\r\n\r\n      this.conversationsInfo = null;\r\n      this.conversationList = null;\r\n      if (conversationsInfo.length > 0) {\r\n        this.conversationsInfo = conversationsInfo;\r\n        conversationsInfo.forEach((conversationInfo) => {\r\n          if (conversationInfo.blocked != true) {\r\n            this.dataProvider.getConversation(conversationInfo.conversationId).snapshotChanges().subscribe((conversationRes) => {\r\n              if (conversationRes.payload.exists()) {\r\n                let conversation: any = { $key: conversationRes.key, ...conversationRes.payload.val() };\r\n                if (conversation.blocked != true)\r\n                  this.addOrUpdateConversation(conversation);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n    this.dataProvider.getGroups().snapshotChanges().subscribe((groupIdsRes: any) => {\r\n      let groupIds = [];\r\n      groupIds = groupIdsRes.map(c => ({ $key: c.key, ...c.payload.val() }));\r\n      if (groupIds.length > 0) {\r\n        this.groupsInfo = groupIds;\r\n        if (this.groupList && this.groupList.length > groupIds.length) {\r\n          // User left/deleted a group, clear the list and add or update each group again.\r\n          this.groupList = null;\r\n        }\r\n        groupIds.forEach((groupId) => {\r\n          this.dataProvider.getGroup(groupId.$key).snapshotChanges().subscribe((groupRes: any) => {\r\n            let group = { $key: groupRes.key, ...groupRes.payload.val() };\r\n            if (group.$key != null) {\r\n              this.addOrUpdateGroup(group);\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        this.unreadGroupMessagesCount = null;\r\n        this.groupsInfo = null;\r\n        this.groupList = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Add or update conversaion for real-time sync of unreadMessagesCount.\r\n  addOrUpdateConversation(conversation) {\r\n    if (!this.conversationList) {\r\n      this.conversationList = [conversation];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.conversationList.length; i++) {\r\n        if (this.conversationList[i].$key == conversation.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.conversationList[index] = conversation;\r\n      } else {\r\n        this.conversationList.push(conversation);\r\n      }\r\n    }\r\n    this.computeUnreadMessagesCount();\r\n  }\r\n\r\n  // Compute all conversation's unreadMessages.\r\n  computeUnreadMessagesCount() {\r\n    this.unreadMessagesCount = 0;\r\n    if (this.conversationList) {\r\n      for (var i = 0; i < this.conversationList.length; i++) {\r\n        this.unreadMessagesCount += this.conversationList[i].messages.length - this.conversationsInfo[i].messagesRead;\r\n        if (this.unreadMessagesCount == 0) {\r\n          this.unreadMessagesCount = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUnreadMessagesCount() {\r\n    if (this.unreadMessagesCount) {\r\n      if (this.unreadMessagesCount > 0) {\r\n        return this.unreadMessagesCount;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Add or update group\r\n  addOrUpdateGroup(group) {\r\n    if (!this.groupList) {\r\n      this.groupList = [group];\r\n    } else {\r\n      var index = -1;\r\n      for (var i = 0; i < this.groupList.length; i++) {\r\n        if (this.groupList[i].$key == group.$key) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.groupList[index] = group;\r\n      } else {\r\n        this.groupList.push(group);\r\n      }\r\n    }\r\n    this.computeUnreadGroupMessagesCount();\r\n  }\r\n\r\n  // Remove group from list if group is already deleted.\r\n  removeGroup(groupId) {\r\n    if (this.groupList) {\r\n      var index = -1;\r\n      for (var i = 0; i < this.groupList.length; i++) {\r\n        if (this.groupList[i].$key == groupId) {\r\n          index = i;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.groupList.splice(index, 1);\r\n      }\r\n\r\n      index = -1;\r\n      for (var j = 0; j < this.groupsInfo.length; j++) {\r\n        if (this.groupsInfo[i].$key == groupId) {\r\n          index = j;\r\n        }\r\n      }\r\n      if (index > -1) {\r\n        this.groupsInfo.splice(index, 1);\r\n      }\r\n      this.computeUnreadGroupMessagesCount();\r\n    }\r\n  }\r\n\r\n  // Compute all group's unreadMessages.\r\n  computeUnreadGroupMessagesCount() {\r\n    this.unreadGroupMessagesCount = 0;\r\n    if (this.groupList) {\r\n      for (var i = 0; i < this.groupList.length; i++) {\r\n        if (this.groupList[i].messages) {\r\n          this.unreadGroupMessagesCount += this.groupList[i].messages.length - this.groupsInfo[i].messagesRead;\r\n        }\r\n        if (this.unreadGroupMessagesCount == 0) {\r\n          this.unreadGroupMessagesCount = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUnreadGroupMessagesCount() {\r\n    if (this.unreadGroupMessagesCount) {\r\n      if (this.unreadGroupMessagesCount > 0) {\r\n        return this.unreadGroupMessagesCount;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TabsPage } from './tabs.page';\r\nimport { AuthGuardService } from '../services/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'tabs',\r\n    component: TabsPage,\r\n    children: [\r\n      {\r\n        path: 'tab1',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () => \r\n              import('../groups/groups.module').then(m => m.GroupsPageModule)\r\n             // canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'tab2',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () =>\r\n              import('../messages/messages.module').then(m => m.MessagesPageModule),\r\n              canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'tab3',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () =>\r\n              import('../friends/friends.module').then(m => m.FriendsPageModule),\r\n              canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'tab4',\r\n        children: [\r\n          {\r\n            path: '',\r\n            loadChildren: () =>\r\n              import('../profile/profile.module').then(m => m.ProfilePageModule),\r\n              canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: '/tabs/tab1',\r\n        pathMatch: 'full'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/tabs/tab1',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TabsPageRoutingModule { }\r\n"],"sourceRoot":"webpack:///","file":"tabs-tabs-module-es5.js"}