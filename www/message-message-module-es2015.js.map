{"version":3,"sources":["./src/app/message/message.page.html","./src/app/message/message.module.ts","./src/app/message/message.page.scss","./src/app/message/message.page.ts"],"names":[],"mappings":"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","file":"message-message-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title (click)=\\\"viewUser(userId)\\\">{{title}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [scrollEvents]=\\\"true\\\" #content>\\r\\n  <div class=\\\"messages\\\" #contentArea>\\r\\n    <p class=\\\"center\\\" *ngIf=\\\"startIndex > 0\\\"><span tappable (click)=\\\"loadPreviousMessages()\\\">Load previous\\r\\n        messages</span></p>\\r\\n    <div *ngFor=\\\"let message of messagesToShow\\\">\\r\\n      <div *ngIf=\\\"isSender(message)\\\" class=\\\"chatbox right sender\\\">\\r\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\r\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\r\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\r\\n          <video controls width=\\\"100%\\\">\\r\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\r\\n          </video>\\r\\n        </div>\\r\\n        <span>{{message.date | DateFormat}}</span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!isSender(message)\\\" class=\\\"chatbox left\\\">\\r\\n        <div *ngIf=\\\"message.type == 'text'\\\">\\r\\n          <p style=\\\"margin:0\\\">{{message.message}}</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'location'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'contact'\\\" [innerHtml]=\\\"message.message\\\"></div>\\r\\n        <div *ngIf=\\\"message.type == 'image'\\\">\\r\\n          <img tappable (click)=\\\"enlargeImage(message.message)\\\" src=\\\"{{message.message}}\\\" />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type == 'video'\\\">\\r\\n          <video controls width=\\\"100%\\\">\\r\\n            <source src=\\\"{{message.message}}\\\" type=\\\"video/mp4\\\">\\r\\n          </video>\\r\\n        </div>\\r\\n        <span>{{message.date | DateFormat}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-item class=\\\"bottom_bar\\\">\\r\\n      <ion-textarea style=\\\"margin:0\\\" rows=\\\"0\\\" placeholder=\\\"Type your message\\\" [(ngModel)]=\\\"message\\\">\\r\\n      </ion-textarea>\\r\\n      <ion-buttons slot=\\\"end\\\" style=\\\"margin-left:4px;\\\">\\r\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"attach()\\\">\\r\\n          <ion-icon name=\\\"attach\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-button color=\\\"primary\\\" fill=\\\"clear\\\" (click)=\\\"send('text')\\\" [disabled]=\\\"!message\\\">\\r\\n          send\\r\\n        </ion-button>\\r\\n      </ion-buttons>\\r\\n    </ion-item>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MessagePage } from './message.page';\r\nimport { SharedModule } from '../services/share.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MessagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [MessagePage]\r\n})\r\nexport class MessagePageModule {}\r\n","export default \"ion-textarea {\\n  font-size: 12px;\\n  resize: both;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9DOlxcVXNlcnNcXHNldGhpXFxmaXJlY2hhdDRfdjJcXGZpcmVjaGF0NC9zcmNcXGFwcFxcbWVzc2FnZVxcbWVzc2FnZS5wYWdlLnNjc3MiLCJzcmMvYXBwL21lc3NhZ2UvbWVzc2FnZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi10ZXh0YXJlYXtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIHJlc2l6ZTogYm90aDtcclxufSIsImlvbi10ZXh0YXJlYSB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgcmVzaXplOiBib3RoO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\nimport { DataService } from '../services/data.service';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { ActionSheetController, AlertController, ModalController, IonContent } from '@ionic/angular';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { ImageService } from '../services/image.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Contacts } from '@ionic-native/contacts/ngx';\r\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { ImagemodalPage } from '../imagemodal/imagemodal.page';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.page.html',\r\n  styleUrls: ['./message.page.scss'],\r\n})\r\nexport class MessagePage implements OnInit {\r\n\r\n  @ViewChild(IonContent, null) contentArea: IonContent;\r\n\r\n  userId: any;\r\n  title: any;\r\n  message: any;\r\n  conversationId: any;\r\n  messages: any;\r\n  updateDateTime: any;\r\n  messagesToShow: any;\r\n  startIndex: any = -1;\r\n  // Set number of messages to show.\r\n  numberOfMessages = 10;\r\n  loggedInUserId: any;\r\n\r\n  // MessagePage\r\n  // This is the page where the user can chat with a friend.\r\n  constructor(\r\n    // public navCtrl: NavController,\r\n    // public navParams: NavParams,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public dataProvider: DataService,\r\n    public firestore: AngularFirestore,\r\n    public loadingProvider: LoadingService,\r\n    public alertCtrl: AlertController,\r\n    public imageProvider: ImageService,\r\n    public modalCtrl: ModalController,\r\n    public camera: Camera,\r\n    public keyboard: Keyboard,\r\n    public actionSheet: ActionSheetController,\r\n    public contacts: Contacts,\r\n    public geolocation: Geolocation\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.scrollBottom();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userId = this.route.snapshot.params.id;\r\n    this.loggedInUserId = firebase.auth().currentUser.uid;\r\n    console.log(this.userId);\r\n\r\n    // Get friend details.\r\n    this.dataProvider.getUser(this.userId).snapshotChanges().subscribe((user: any) => {\r\n      this.title = user.payload.data().name;\r\n    });\r\n\r\n    // Get conversationInfo with friend.\r\n    // tslint:disable-next-line: max-line-length\r\n    this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).snapshotChanges().subscribe((conversation: any) => {\r\n      if (conversation.payload.data()) {\r\n        // User already have conversation with this friend, get conversation\r\n        this.conversationId = conversation.payload.data().conversationId;\r\n        // Get conversation\r\n        this.dataProvider.getConversationMessages(this.conversationId).snapshotChanges().subscribe((messagesRes: any) => {\r\n          let messages = messagesRes.payload.data().messages;\r\n          if (messages == null) {\r\n            messages = [];\r\n          }\r\n          if (this.messages) {\r\n            // Just append newly added messages to the bottom of the view.\r\n            if (messages.length > this.messages.length) {\r\n              let message = messages[messages.length - 1];\r\n\r\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\r\n                message.avatar = user.payload.data().img;\r\n              });\r\n              this.messages.push(message);\r\n              this.messagesToShow.push(message);\r\n            }\r\n          } else {\r\n            // Get all messages, this will be used as reference object for messagesToShow.\r\n            this.messages = [];\r\n            messages.forEach((message) => {\r\n              this.dataProvider.getUser(message.sender).snapshotChanges().subscribe((user: any) => {\r\n                message.avatar = user.payload.data().img;\r\n              });\r\n              this.messages.push(message);\r\n            });\r\n            // Load messages in relation to numOfMessages.\r\n            if (this.startIndex === -1) {\r\n              // Get initial index for numberOfMessages to show.\r\n              if ((this.messages.length - this.numberOfMessages) > 0) {\r\n                this.startIndex = this.messages.length - this.numberOfMessages;\r\n              } else {\r\n                this.startIndex = 0;\r\n              }\r\n            }\r\n            if (!this.messagesToShow) {\r\n              this.messagesToShow = [];\r\n            }\r\n            // Set messagesToShow\r\n            for (let i = this.startIndex; i < this.messages.length; i++) {\r\n              this.messagesToShow.push(this.messages[i]);\r\n            }\r\n            this.loadingProvider.hide();\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Update messages' date time elapsed every minute based on Moment.js.\r\n    var that = this;\r\n    if (!that.updateDateTime) {\r\n      that.updateDateTime = setInterval(function () {\r\n        if (that.messages) {\r\n          that.messages.forEach((message) => {\r\n            let date = message.date;\r\n            message.date = new Date(date);\r\n          });\r\n        }\r\n      }, 60000);\r\n    }\r\n\r\n    // this.scrollBottom();\r\n  }\r\n  // Load previous messages in relation to numberOfMessages.\r\n  loadPreviousMessages() {\r\n    var that = this;\r\n    // Show loading.\r\n    this.loadingProvider.show();\r\n    setTimeout(function () {\r\n      // Set startIndex to load more messages.\r\n      if ((that.startIndex - that.numberOfMessages) > -1) {\r\n        that.startIndex -= that.numberOfMessages;\r\n      } else {\r\n        that.startIndex = 0;\r\n      }\r\n      // Refresh our messages list.\r\n      that.messages = null;\r\n      that.messagesToShow = null;\r\n\r\n      that.scrollTop();\r\n\r\n      // Populate list again.\r\n      that.ionViewDidEnter();\r\n    }, 1000);\r\n  }\r\n\r\n  // Update messagesRead when user lefts this page.\r\n  ionViewWillLeave() {\r\n    this.setMessagesRead();\r\n  }\r\n\r\n  // Check if currentPage is active, then update user's messagesRead.\r\n  setMessagesRead() {\r\n    firebase.database().ref('/conversations/' + this.conversationId + '/messages').once('value', snap => {\r\n      console.log(snap.val());\r\n\r\n      if (snap.val() != null) {\r\n        this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).update({\r\n          messagesRead: snap.val().length\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  scrollBottom() {\r\n    console.log(\"Calling Sb\")\r\n    setTimeout(() => {\r\n      if (this.contentArea.scrollToBottom) {\r\n        this.contentArea.scrollToBottom();\r\n      }\r\n    }, 500);\r\n    this.setMessagesRead();\r\n  }\r\n\r\n  scrollTop() {\r\n    console.log(\"Calling St\")\r\n    setTimeout(() => {\r\n      if (this.contentArea.scrollToTop) {\r\n        this.contentArea.scrollToTop();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n\r\n  // Check if the user is the sender of the message.\r\n  isSender(message) {\r\n    if (message.sender == this.loggedInUserId) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  // Send message, if there's no conversation yet, create a new conversation.\r\n  send(type) {\r\n    if (this.message) {\r\n      // User entered a text on messagebox\r\n      if (this.conversationId) {\r\n        let messages = JSON.parse(JSON.stringify(this.messages));\r\n        messages.push({\r\n          date: new Date().toString(),\r\n          sender: this.loggedInUserId,\r\n          type: type,\r\n          message: this.message\r\n        });\r\n\r\n        // Update conversation on database.\r\n        this.dataProvider.getConversation(this.conversationId).update({\r\n          messages: messages\r\n        });\r\n        // Clear messagebox.\r\n        this.message = '';\r\n        this.scrollBottom();\r\n      } else {\r\n        console.log(\"else\")\r\n        // New Conversation with friend.\r\n        var messages = [];\r\n        messages.push({\r\n          date: new Date().toString(),\r\n          sender: this.loggedInUserId,\r\n          type: type,\r\n          message: this.message\r\n        });\r\n        var users = [];\r\n        users.push(this.loggedInUserId);\r\n        users.push(this.userId);\r\n        // Add conversation.\r\n        this.firestore.collection('conversations').add({\r\n          dateCreated: new Date().toString(),\r\n          messages: messages,\r\n          users: users\r\n        }).then((success) => {\r\n          let conversationId = success.id;\r\n          this.message = '';\r\n          // Add conversation reference to the users.\r\n          this.firestore.doc('/accounts/' + this.loggedInUserId + '/conversations/' + this.userId).set({\r\n            conversationId,\r\n            messagesRead: 1\r\n          });\r\n          this.firestore.doc('/accounts/' + this.userId + '/conversations/' + this.loggedInUserId).set({\r\n            conversationId,\r\n            messagesRead: 0\r\n          });\r\n        });\r\n        this.scrollBottom();\r\n      }\r\n    }\r\n  }\r\n\r\n  viewUser(userId) {\r\n    this.router.navigateByUrl('userinfo/' + userId);\r\n  }\r\n\r\n\r\n  attach() {\r\n    this.actionSheet.create({\r\n      header: 'Choose attachments',\r\n      buttons: [{\r\n        text: 'Camera',\r\n        handler: () => {\r\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.CAMERA).then((url) => {\r\n            this.message = url;\r\n            this.send(\"image\");\r\n          });\r\n        }\r\n      }, {\r\n        text: 'Photo Library',\r\n        handler: () => {\r\n          this.imageProvider.uploadPhotoMessage(this.conversationId, this.camera.PictureSourceType.PHOTOLIBRARY).then((url) => {\r\n            this.message = url;\r\n            this.send(\"image\");\r\n          });\r\n        }\r\n      },\r\n      {\r\n        text: 'Video',\r\n        handler: () => {\r\n          this.imageProvider.uploadVideoMessage(this.conversationId).then(url => {\r\n            this.message = url;\r\n            this.send(\"video\");\r\n          });\r\n        }\r\n      }\r\n        , {\r\n        text: 'Location',\r\n        handler: () => {\r\n          this.geolocation.getCurrentPosition({\r\n            timeout: 5000\r\n          }).then(res => {\r\n            let locationMessage = \"Location:<br> lat:\" + res.coords.latitude + \"<br> lng:\" + res.coords.longitude;\r\n            let mapUrl = \"<a href='https://www.google.com/maps/search/\" + res.coords.latitude + \",\" + res.coords.longitude + \"'>View on Map</a>\";\r\n\r\n            let confirm = this.alertCtrl.create({\r\n              header: 'Your Location',\r\n              message: locationMessage,\r\n              buttons: [{\r\n                text: 'cancel',\r\n                handler: () => {\r\n                  console.log(\"canceled\");\r\n                }\r\n              }, {\r\n                text: 'Share',\r\n                handler: () => {\r\n                  this.message = locationMessage + \"<br>\" + mapUrl;\r\n                  this.send(\"location\");\r\n                }\r\n              }]\r\n            }).then(r => r.present());\r\n          }, locationErr => {\r\n            console.log(\"Location Error\" + JSON.stringify(locationErr));\r\n          });\r\n        }\r\n      }, {\r\n        text: 'Contact',\r\n        handler: () => {\r\n          this.contacts.pickContact().then(data => {\r\n            let name;\r\n            if (data.displayName !== null) name = data.displayName;\r\n            else name = data.name.givenName + \" \" + data.name.familyName;\r\n            this.message = \"<b>Name:</b> \" + name + \"<br><b>Mobile:</b> <a href='tel:\" + data.phoneNumbers[0].value + \"'>\" + data.phoneNumbers[0].value + \"</a>\";\r\n            this.send(\"contact\");\r\n          }, err => {\r\n            console.log(err);\r\n          })\r\n        }\r\n      }, {\r\n        text: 'cancel',\r\n        role: 'cancel',\r\n        handler: () => {\r\n          console.log(\"cancelled\");\r\n        }\r\n      }]\r\n    }).then(r => r.present());\r\n  }\r\n\r\n  // Enlarge image messages.\r\n  enlargeImage(img) {\r\n    this.modalCtrl.create({\r\n      component: ImagemodalPage,\r\n      componentProps: {\r\n        img: img\r\n      }\r\n    }).then(res => {\r\n      res.present();\r\n    })\r\n    // let imageModal = this.modalCtrl.create(ImageModalPage, { img: img });\r\n    // imageModal.present();\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}