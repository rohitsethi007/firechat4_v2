{"version":3,"sources":["src/app/services/image.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport * as firebase from 'firebase';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { MediaCapture } from '@ionic-native/media-capture/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { LoadingService } from './loading.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  private profilePhotoOptions: CameraOptions = {\n    quality: 50,\n    targetWidth: 384,\n    targetHeight: 384,\n    destinationType: this.camera.DestinationType.DATA_URL,\n    encodingType: this.camera.EncodingType.JPEG,\n    correctOrientation: true\n  };\n\n  private photoMessageOptions: CameraOptions = {\n    quality: 50,\n    destinationType: this.camera.DestinationType.DATA_URL,\n    encodingType: this.camera.EncodingType.JPEG,\n    correctOrientation: true,\n    allowEdit: true\n  };\n\n  private groupPhotoOptions: CameraOptions = {\n    quality: 50,\n    targetWidth: 384,\n    targetHeight: 384,\n    destinationType: this.camera.DestinationType.DATA_URL,\n    encodingType: this.camera.EncodingType.JPEG,\n    correctOrientation: true\n  };\n\n\n  constructor(\n    public firestore: AngularFirestore,\n    public loadingProvider: LoadingService,\n    public camera: Camera,\n    public mediaCapture: MediaCapture,\n    public file: File) {\n    console.log(\"Initializing Image Provider\");\n  }\n\n  // Function to convert dataURI to Blob needed by Firebase\n  imgURItoBlob(dataURI) {\n    var binary = atob(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    var array = [];\n    for (var i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n    }\n    return new Blob([new Uint8Array(array)], {\n      type: mimeString\n    });\n  }\n\n  // Generate a random filename of length for the image to be uploaded\n  generateFilename() {\n    var length = 8;\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text + \".jpg\";\n  }\n\n  // Set ProfilePhoto given the user and the cameraSourceType.\n  // This function processes the imageURI returned and uploads the file on Firebase,\n  // Finally the user data on the database is updated.\n  setProfilePhoto(user, sourceType) {\n    console.log(user);\n    this.profilePhotoOptions.sourceType = sourceType;\n    this.loadingProvider.show();\n    // Get picture from camera or gallery.\n    this.camera.getPicture(this.profilePhotoOptions).then((imageData) => {\n      // Process the returned imageURI.\n      let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n      let metadata = {\n        'contentType': imgBlob.type\n      };\n      let name = this.generateFilename();\n      let dpStorageRef = firebase.storage().ref().child('images/' + user.userId + '/' + name);\n      // Generate filename and upload to Firebase Storage.\n      dpStorageRef.put(imgBlob, metadata).then((snapshot) => {\n        // Delete previous profile photo on Storage if it exists.\n        // this.deleteImageFile(user.img);\n        // URL of the uploaded image!\n        console.log(snapshot);\n\n\n        dpStorageRef.getDownloadURL().then(res => {\n          console.log(res);\n          let url = res;\n\n          let profile = {\n            displayName: user.name,\n            photoURL: url\n          };\n          // Update Firebase User.\n          firebase.auth().currentUser.updateProfile(profile)\n            .then((success) => {\n              // Update User Data on Database.\n              this.firestore.doc('/accounts/' + user.userId).update({\n                img: url\n              }).then((success) => {\n                this.loadingProvider.hide();\n                this.loadingProvider.showToast(\"Profile Updated\");\n              }).catch((error) => {\n                console.log(error);\n                this.loadingProvider.hide();\n                this.loadingProvider.showToast(\"Something went wrong\");\n              });\n            })\n            .catch((error) => {\n              console.log(error);\n              this.loadingProvider.hide();\n              this.loadingProvider.showToast(\"Something went wrong\");\n            });\n\n        });\n\n\n\n      }).catch((error) => {\n        console.log(error);\n        this.loadingProvider.hide();\n        this.loadingProvider.showToast(\"Something went wrong\");\n      });\n    }).catch((error) => {\n      this.loadingProvider.hide();\n    });\n  }\n\n  // Upload and set the group object's image.\n  setGroupPhoto(group, sourceType) {\n    this.groupPhotoOptions.sourceType = sourceType;\n    this.loadingProvider.show();\n    // Get picture from camera or gallery.\n    this.camera.getPicture(this.groupPhotoOptions).then((imageData) => {\n      // Process the returned imageURI.\n      let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n      let metadata = {\n        'contentType': imgBlob.type\n      };\n\n      let name = this.generateFilename();\n      let groupStorageRef = firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + name);\n      groupStorageRef.put(imgBlob, metadata).then((snapshot) => {\n        // this.deleteImageFile(group.img);\n        // URL of the uploaded image!\n        groupStorageRef.getDownloadURL().then(url => {\n          group.img = url;\n          this.loadingProvider.hide();\n        })\n\n      }).catch((error) => {\n        this.loadingProvider.hide();\n        this.loadingProvider.showToast(\"Something went wrong\");\n      });\n    }).catch((error) => {\n      this.loadingProvider.hide();\n    });\n  }\n\n  // Set group photo and return the group object as promise.\n  setGroupPhotoPromise(group, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.groupPhotoOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.groupPhotoOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        let gPPStorageRef = firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + this.generateFilename());\n        gPPStorageRef.put(imgBlob, metadata).then((snapshot) => {\n          this.deleteImageFile(group.img);\n          // URL of the uploaded image!\n          gPPStorageRef.getDownloadURL().then(url => {\n            group.img = url;\n            this.loadingProvider.hide();\n            resolve(group);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n\n  //Delete the image given the url.\n  deleteImageFile(path) {\n    var fileName = path.substring(path.lastIndexOf('%2F') + 3, path.lastIndexOf('?'));\n    firebase.storage().ref().child('images/' + firebase.auth().currentUser.uid + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\n  }\n\n  //Delete the user.img given the user.\n  deleteUserImageFile(user) {\n    var fileName = user.img.substring(user.img.lastIndexOf('%2F') + 3, user.img.lastIndexOf('?'));\n    firebase.storage().ref().child('images/' + user.userId + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\n  }\n\n  // Delete group image file on group storage reference.\n  deleteGroupImageFile(groupId, path) {\n    var fileName = path.substring(path.lastIndexOf('%2F') + 3, path.lastIndexOf('?'));\n    firebase.storage().ref().child('images/' + groupId + '/' + fileName).delete().then(() => { }).catch((error) => { console.log(error) });\n  }\n\n  // Upload photo message and return the url as promise.\n  uploadPhotoMessage(conversationId, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.photoMessageOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        // Generate filename and upload to Firebase Storage.\n        let upRef = firebase.storage().ref().child('images/' + conversationId + '/' + this.generateFilename());\n        upRef.put(imgBlob, metadata).then((snapshot) => {\n          // URL of the uploaded image!\n          upRef.getDownloadURL().then(url => {\n            this.loadingProvider.hide();\n            resolve(url);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n\n  // Upload group photo message and return a promise as url.\n  uploadGroupPhotoMessage(groupId, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.photoMessageOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        // Generate filename and upload to Firebase Storage.\n        let ugpRef = firebase.storage().ref().child('images/' + groupId + '/' + this.generateFilename());\n        ugpRef.put(imgBlob, metadata).then((snapshot) => {\n          // URL of the uploaded image!\n          ugpRef.getDownloadURL().then(url => {\n            this.loadingProvider.hide();\n            resolve(url);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n  uploadGroupVideoMessage(groupId): Promise<any> {\n    return new Promise(resolve => {\n      this.loadingProvider.show();\n      this.mediaCapture.captureVideo().then(data => {\n        let videoUrl = data[0].fullPath;\n        console.log(\"video path: \" + videoUrl);\n        let x = videoUrl.split(\"/\");\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\n        let name = x[x.length - 1];\n        console.log(filepath + \" - \" + name);\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\n          console.log(success);\n          let blob = new Blob([success], { type: \"video/mp4\" });\n          console.log(blob);\n          let upload = firebase.storage().ref().child('videos/' + groupId + \"/\" + name).put(blob);\n          upload.then(res => {\n            let process = res.bytesTransferred / res.totalBytes * 100;\n            console.log(process);\n            this.loadingProvider.hide();\n\n            resolve(res.downloadURL);\n          }, err => {\n            this.loadingProvider.hide();\n            console.log(\"Failed\")\n          });\n\n        });\n      }, err => {\n        this.loadingProvider.hide();\n        console.log(\"Media Err = \" + err);\n      });\n    });\n  }\n\n  uploadVideoMessage(conversationId): Promise<any> {\n    return new Promise(resolve => {\n      this.loadingProvider.show();\n      this.mediaCapture.captureVideo().then(data => {\n        let videoUrl = data[0].fullPath;\n        console.log(\"video path: \" + videoUrl);\n        let x = videoUrl.split(\"/\");\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\n        let name = x[x.length - 1];\n        console.log(filepath + \" - \" + name);\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\n          console.log(success);\n          let blob = new Blob([success], { type: \"video/mp4\" });\n          console.log(blob);\n          // let timestamp = (Math.floor(Date.now() / 1000)).toString();\n\n          let uploadRef = firebase.storage().ref().child('videos/' + name);\n          uploadRef.put(blob).then(res => {\n            let process = res.bytesTransferred / res.totalBytes * 100;\n            console.log(process);\n            this.loadingProvider.hide();\n            uploadRef.getDownloadURL().then(url => {\n              resolve(url);\n            })\n\n          }, err => {\n            this.loadingProvider.hide();\n            console.log(\"Failed\")\n          });\n        });\n      }, err => {\n        this.loadingProvider.hide();\n        console.log(\"Media Err = \" + err);\n      });\n    });\n  }\n\n  \n  // Upload group photo message and return a promise as url.\n  uploadGroupPhotoResource(groupId, sourceType): Promise<any> {\n    return new Promise(resolve => {\n      this.photoMessageOptions.sourceType = sourceType;\n      this.loadingProvider.show();\n      // Get picture from camera or gallery.\n      this.camera.getPicture(this.photoMessageOptions).then((imageData) => {\n        // Process the returned imageURI.\n        let imgBlob = this.imgURItoBlob(\"data:image/jpeg;base64,\" + imageData);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        // Generate filename and upload to Firebase Storage.\n        let ugpRef = firebase.storage().ref().child('images/' + groupId + '/' + this.generateFilename());\n        ugpRef.put(imgBlob, metadata).then((snapshot) => {\n          // URL of the uploaded image!\n          ugpRef.getDownloadURL().then(url => {\n            this.loadingProvider.hide();\n            resolve(url);\n          })\n\n        }).catch((error) => {\n          this.loadingProvider.hide();\n          this.loadingProvider.showToast(\"Something went wrong\");\n        });\n      }).catch((error) => {\n        this.loadingProvider.hide();\n      });\n    });\n  }\n\n  uploadGroupVideoResource(groupId): Promise<any> {\n    return new Promise(resolve => {\n      this.loadingProvider.show();\n      this.mediaCapture.captureVideo().then(data => {\n        let videoUrl = data[0].fullPath;\n        console.log(\"video path: \" + videoUrl);\n        let x = videoUrl.split(\"/\");\n        let filepath = videoUrl.substring(0, videoUrl.lastIndexOf(\"/\"));\n        let name = x[x.length - 1];\n        console.log(filepath + \" - \" + name);\n        this.file.readAsArrayBuffer(filepath, name).then(success => {\n          console.log(success);\n          let blob = new Blob([success], { type: \"video/mp4\" });\n          console.log(blob);\n          let upload = firebase.storage().ref().child('videos/' + groupId + \"/\" + name).put(blob);\n          upload.then(res => {\n            let process = res.bytesTransferred / res.totalBytes * 100;\n            console.log(process);\n            this.loadingProvider.hide();\n\n            resolve(res.downloadURL);\n          }, err => {\n            this.loadingProvider.hide();\n            console.log(\"Failed\")\n          });\n\n        });\n      }, err => {\n        this.loadingProvider.hide();\n        console.log(\"Media Err = \" + err);\n      });\n    });\n  }\n\n  async getGroupVideoResource(resourceurl) {\n   return await firebase.storage().ref().child(resourceurl).getDownloadURL().then(function(url) {\n    return url;  \n  }).catch(function(error) {\n      // Handle any errors\n    });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~event-event-module~group-group-module~groupinfo-groupinfo-module~message-message-module~new-~0c7fe536-es5.js"}